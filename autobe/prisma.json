{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"aimall_backend_channels","description":"Channel entity - Implements the channels management requirement, supporting the definition and configuration of sales/distribution channels (e.g., main website, partner sites, mobile app) within the systematic backbone. Channels represent different distribution fronts for the platform, allowing appropriate products and content to be mapped or scoped. Strict 3NF compliance is maintained by decoupling the channel entity from other business entities. Channels may be referenced externally by related domain tables (such as products, channel assignments).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies each channel by universally unique identifier according to best practice."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","description":"Channel code: unique short identifier (e.g., 'WEB', 'MOBILE'). Used for programmatic lookups and internal configuration, atomic value. Unique across all channels.","nullable":false},{"name":"name","type":"string","description":"Human-readable channel name for UIs and management. Fully normalized, used in admin/service configurations.","nullable":false},{"name":"enabled","type":"boolean","description":"If true, channel is active; otherwise, channel is disabled for routing/service. Atomic flag, fully normalized. Used for toggling channel availability without deletion.","nullable":false},{"name":"created_at","type":"datetime","description":"Row creation timestamp for audit trail and compliance, required for record keeping. 3NF: atomic.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification timestamp for audit/change tracking. Atomic, not pre-calculated.","nullable":false}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["enabled"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"aimall_backend_sections","description":"Section entity - Implements the requirement for UI/display content organization within channels. Sections are subdivisions (e.g., homepage banners, featured blocks) and strictly normalized. Channel_id is FK to channels, code is unique within channel. Soft deletion uses deleted_at. Used as a referencing entity for content/product/offer assignment modules in other domains. No denormalized data, all fields atomic. 3NF compliant.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies each section in the system."},"foreignFields":[{"name":"channel_id","type":"uuid","description":"Belonged channel's {@link aimall_backend_channels.id}. Links section to a specific channel. This ensures clear channel/section-scoping. Non-nullable for data integrity.","relation":{"name":"fk_aimall_backend_sections_channel_id","fields":["channel_id"],"references":["id"],"targetModel":"aimall_backend_channels","onDelete":"Restrict","onUpdate":"Cascade"},"unique":false,"nullable":false}],"plainFields":[{"name":"code","type":"string","description":"Section code, unique within channel, e.g., 'BANNER', 'DEALS'. Atomic value; fully 3NF; no repetition.","nullable":false},{"name":"name","type":"string","description":"Section display name: human readable, for admin/UI. Atomic data, normalized.","nullable":false},{"name":"display_order","type":"int","description":"Numeric order for display, atomic field, 3NF. Used for admin/UI ordering and rendering control.","nullable":false},{"name":"enabled","type":"boolean","description":"If true, section is active/visible; admin toggle/control for soft suppressing/activating sections. 3NF, atomic field.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp for audit/logical tracing, no denormalization.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last change timestamp for auditing. No pre-calculation, atomic field. 3NF.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Logical deletion field: soft delete with timestamp, null if alive. Used for logical retention and audit. Nullable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["channel_id","code"],"unique":true}],"plainIndexes":[{"fieldNames":["enabled"]},{"fieldNames":["channel_id","display_order"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"aimall_backend_configurations","description":"System Configuration entity - Implements requirement for global, channel, or section-scoped setting storage. Each configuration represents a setting (key/value) optionally scoped to channel or section. Used for feature toggles, platform-wide or channel-specific behaviors. Fully 3NF: no duplicated/denormalized/calculated fields, all settings atomic and change-tracked. Key+channel_id+section_id combination is unique to avoid overlap. All relationships are optional (global = both null).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique record id. Each config is a standalone setting."},"foreignFields":[{"name":"channel_id","type":"uuid","description":"Optional foreign key to {@link aimall_backend_channels.id}. Null = global config; for channel-level settings. Ensures normalized design. Soft constraint; referenced channel must exist if used.","relation":{"name":"fk_aimall_backend_configurations_channel_id","fields":["channel_id"],"references":["id"],"targetModel":"aimall_backend_channels","onDelete":"SetNull","onUpdate":"Cascade"},"unique":false,"nullable":true},{"name":"section_id","type":"uuid","description":"Optional FK to {@link aimall_backend_sections.id}. Null = applies at global or channel settings; non-null = conf applies to given section. Retains 3NF, atomic references.","relation":{"name":"fk_aimall_backend_configurations_section_id","fields":["section_id"],"references":["id"],"targetModel":"aimall_backend_sections","onDelete":"SetNull","onUpdate":"Cascade"},"unique":false,"nullable":true}],"plainFields":[{"name":"key","type":"string","description":"Configuration key for setting, e.g., 'site_maintenance'. Atomic string key, unique per channel+section. No denormalization, single data point.","nullable":false},{"name":"value","type":"string","description":"Setting value in string form, to allow flexible data types (bool/int/JSON all as strings). Pure field, 3NF, atomic.","nullable":false},{"name":"description","type":"string","description":"Optional text explaining the configuration for admins, nullable. Used for documentation and operational clarity. No constraint; normalized; not required.","nullable":true},{"name":"created_at","type":"datetime","description":"Row created time for compliance/auditability. Not null; not derived.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last change timestamp. 3NF: atomic field, not precomputed or denormalized.","nullable":false}],"uniqueIndexes":[{"fieldNames":["key","channel_id","section_id"],"unique":true}],"plainIndexes":[{"fieldNames":["channel_id"]},{"fieldNames":["section_id"]}],"ginIndexes":[{"fieldName":"key"}]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"aimall_backend_customers","description":"Customer account data - This implements the core customer entity requirement from the Customer System requirements document. This model represents end-users who engage in shopping, use personalized features, and manage their own profiles, providing the anchor for all customer-centric activities. Maintains 3NF by separating identity and behavioral data. For example, referenced in orders, addresses, reviews, and behavior logs. Key relationships: links to external accounts, addresses, behavioral tracking. Special behaviors: unique constraints on identity; deletion triggers anonymization except for compliance logs.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","description":"The customer's primary email address - Implements identity requirement. Used for authentication and notifications. Enforces normalization by not duplicating across other tables. For example: unique login/email mapping. Must be unique.","nullable":false},{"name":"phone","type":"string","description":"Customerâ€™s primary phone number. Implements alternative contact requirement. Kept atomic. Used for SMS notification and verification flows. Example: profile edit, password reset.","nullable":false},{"name":"password_hash","type":"string","description":"Secure hashed password for the customer. Implements authentication requirement. Ensures security by never storing plain text. Used during login. Null for external-only accounts.","nullable":true},{"name":"status","type":"string","description":"Account status (e.g., active, suspended, pending, deleted). Implements status tracking. Maintains normalization as atomic code. Example usage: onboarding approval, account lock.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of account creation. Implements audit trail. Kept atomic and fully normalized. Used for registration analytics.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last profile update. Implements audit and integrity requirement. Tracked for compliance/logging.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true},{"fieldNames":["phone"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"aimall_backend_sellers","description":"Seller account record - Implements the seller onboarding and management requirement from the Seller System requirements. Each record represents a merchant business identity for listing, inventory management, and analytics. Maintains 3NF by storing only atomic seller-level data. Related to permissions for advanced controls. Example: referenced when tracking seller performance or auditing onboarding. Key relationships: may reference granular permission entity. Special behaviors: Verification/check/audit status handled via status field.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"business_name","type":"string","description":"Sellerâ€™s registered business name. Implements business profile requirement. Normalized to avoid duplication in product or order records. Used for display and compliance checks.","nullable":false},{"name":"email","type":"string","description":"Sellerâ€™s business contact email. Used for onboarding, notification, and login if allowed. Maintains uniqueness and normalization. For example: used in seller sign-up, password reset.","nullable":false},{"name":"contact_phone","type":"string","description":"Sellerâ€™s primary contact phone. Implements communication and verification requirement. Purely atomic and for contact purposes.","nullable":false},{"name":"status","type":"string","description":"Onboarding and operational status (pending, approved, rejected, suspended). Used for permission logic and admin review flows. Example: audit transitions, dashboard access.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of seller account creation. For audit and compliance. Example: onboarding analytics.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last seller account update. For audit, change tracking.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"business_name"}]},{"name":"aimall_backend_administrators","description":"Platform administrator entity - Implements the administrator user management and permission assignment requirement. Stores atomic data for each admin-level user with assigned permissions. Maintains 3NF by not mixing with seller/customer logic. Used for full or scoped admin access, activity logging, and audit traceability. Example: System operator signs in and manages sellers. Key relationships: references permissions entity for role assignments.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"permission_id","type":"uuid","description":"References {@link aimall_backend_permissions.id} for assigned admin permission set. Enables hierarchical controls. For example: super admin vs. support admin.","relation":{"name":"admin_permission","model":"aimall_backend_permissions","targetModel":"aimall_backend_permissions","referenceField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"email","type":"string","description":"Administratorâ€™s email address. Used for sign-in and notification. Must be unique. Normalized.","nullable":false},{"name":"name","type":"string","description":"Administrator display name. Implements admin user naming requirement. Used for dashboard, audit logs. Kept atomic and normalized, not duplicated elsewhere.","nullable":false},{"name":"status","type":"string","description":"Operational status (active, suspended, pending). Used for access gating and audit flows.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation date for admin account. Used for join analysis, audit trace.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp.","nullable":false}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"aimall_backend_permissions","description":"Permission/role definition entity - Implements fine-grained and role-based permission requirements for sellers and administrators. Enables maintainable, extendable, reusable access control lists. Maintains full normalization; only the permission identity and description live here. Example: support admin, super admin, seller-inventory. Used as assignment in admin and seller models. Special behaviors: If altered, triggers audit trail. Relationship: referenced by administrator or seller for role mapping.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Unique code or name for this permission/role (e.g., super_admin, seller_product_manager). Implements unique constraint for RBAC mapping. Maintains normalization; referenced only as foreign key.","nullable":false},{"name":"display_name","type":"string","description":"Display name for UI/analytics. Used on dashboards. Not necessarily unique. Maintained separately from permission code for localization/flexibility.","nullable":false},{"name":"description","type":"string","description":"Detailed explanation of what this permission grants. Used for system documentation, admin UX. Maintains atomicity by avoiding embedded business logic.","nullable":false},{"name":"created_at","type":"datetime","description":"Permission definition created timestamp. Used for audit trail and change tracking.","nullable":false}],"uniqueIndexes":[{"fieldNames":["name"],"unique":true}],"plainIndexes":[],"ginIndexes":[{"fieldName":"display_name"}]},{"name":"aimall_backend_external_accounts","description":"External identity account link - Implements federated login/OAuth requirements by tracking external provider identities (Google, Kakao, Apple, etc.) linked to primary AIMall customer accounts. Maintains strict normalization: all external linkage data is atomic and sits in this model, referenced from customers. Example: Single customer, multiple federated logins. Relationships: FK to aimall_backend_customers. Special behaviors: If deleted, only impacts authentications via provider.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Belonged customerâ€™s {@link aimall_backend_customers.id}. Links this external account to the internal primary customer.","relation":{"name":"external_account_customer","model":"aimall_backend_customers","targetModel":"aimall_backend_customers","referenceField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"provider","type":"string","description":"Identity provider code (e.g., google, kakao, apple). Enforces normalized provider codes for robust branching and validation. For example: login flow decision logic. Critical for OAuth mapping.","nullable":false},{"name":"external_user_id","type":"string","description":"External providerâ€™s user ID string. Used to correlate federated identities. Example: store Google sub or Kakao id. Always atomic and never repeated.","nullable":false},{"name":"linked_at","type":"datetime","description":"Timestamp of account linkage. Enables audit trail for identity events. Used for UX (showing when account was linked).","nullable":false}],"uniqueIndexes":[{"fieldNames":["provider","external_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["customer_id"]}],"ginIndexes":[]},{"name":"aimall_backend_behavior_trackings","description":"Per-customer behavioral tracking - Implements the session/activity tracking requirement. Stores API-driven customer events, preferences, and actions for AI, analytics, compliance. Ensures 3NF by isolating behavioral actions from static identity data. Example usage: shopping session event logs, personalization input. Relationship: links to customer. Special behaviors: May be periodically purged/anonymized for compliance. Used only for analytics/AIOps, never for business-critical identities.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Related customerâ€™s {@link aimall_backend_customers.id}. Logs which customer generated the behavior.","relation":{"name":"behavior_tracking_customer","model":"aimall_backend_customers","targetModel":"aimall_backend_customers","referenceField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"event_type","type":"string","description":"What user activity/event is being tracked (e.g., login, view_product, add_cart, checkout, search, recommend_click). Implements event-type requirement. Kept atomic as string code; normalization enforced. Used in analytics pipeline for behavior modeling.","nullable":false},{"name":"event_data","type":"string","description":"Serialized payload describing the event more fully (JSON or similar). Contains atomic data, avoids schema transitive dependency. For example: product IDs, referer, AB test cohort.","nullable":false},{"name":"occurred_at","type":"datetime","description":"Timestamp the event was logged. Implements audit and analytics timing. Used in analytics; always atomic.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["customer_id","occurred_at"]}],"ginIndexes":[]},{"name":"aimall_backend_addresses","description":"Customer delivery addresses - Implements the address management requirement, storing normalized and per-customer-linked delivery location data. Ensures all address data is atomic (split lines, etc) in full compliance with 3NF. Used for checkout, shipments, address book UX. Relationships: links customer. Special behaviors: Customers can have multiple addresses, with optional default flag. Deletion disables only for this customer.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Owner customerâ€™s {@link aimall_backend_customers.id}. Allows associating multiple addresses per account, and enables easy lookup for checkout flows and address book UX.","relation":{"name":"address_customer","model":"aimall_backend_customers","targetModel":"aimall_backend_customers","referenceField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"alias","type":"string","description":"User-defined label for quick selection (e.g., 'Home', 'Office'). Implements per-customer usability. Fully atomic; not duplicated across tables. Used in address picker UX.","nullable":false},{"name":"recipient_name","type":"string","description":"Address recipient name (can differ from customer profile). Fulfills logistics requirement. Used when generating shipping labels. Always atomic.","nullable":false},{"name":"phone","type":"string","description":"Phone number for this address/recipient. Meets delivery carrier and communication needs. Fully atomic.","nullable":false},{"name":"address_line1","type":"string","description":"Main line of street address/location. Split for normalization; no embedded logic. Used in shipping and verification.","nullable":false},{"name":"address_line2","type":"string","description":"Second line (optional, e.g., apartment/suite). Split for normalization; not duplicated. Optional for UX.","nullable":true},{"name":"city","type":"string","description":"City of the address. Used for logistics analysis; atomic for filtering/aggregation.","nullable":false},{"name":"postal_code","type":"string","description":"Postal/ZIP code. Maintains normalization, index for geo lookup.","nullable":false},{"name":"country","type":"string","description":"Country code or name. Normalized string for international handling; used for compliance/shipping.","nullable":false},{"name":"is_default","type":"boolean","description":"True if this is the primary/default address for the customer. Implements default selection UX. Only one per customer can be true. Constraint enforced by application logic.","nullable":false},{"name":"updated_at","type":"datetime","description":"When this address was last modified. Used for audit trail and UX.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["customer_id"]}],"ginIndexes":[]}]},{"filename":"schema-03-products.prisma","namespace":"Products","models":[{"name":"aimall_backend_products","description":"Product master (core SKU/group) - This implements the comprehensive product catalog requirement from the Product Management document. Central record for all products listed across the platform. Holds product metadata, primary relationships (category, seller), and references to options and bundles. Maintains 3NF by not duplicating inventory, option, or category data â€“ all relationships via foreign keys. For example, sellers define products here, and inventory or options are in linked tables. Key relationships: links to aimall_backend_sellers (already created table) and aimall_backend_categories. Special behaviors: Only normalized product master data; no precomputed inventory, price, or reviews.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies each product."},"foreignFields":[{"name":"category_id","type":"uuid","description":"Category's {@link aimall_backend_categories.id}. References which category this product belongs to.","relation":{"name":"fk_aimall_backend_products_category_id","targetModel":"aimall_backend_categories","targetField":"id"},"unique":false,"nullable":false},{"name":"seller_id","type":"uuid","description":"Seller's {@link aimall_backend_sellers.id} - Who owns this product (from Actors domain; reference only).","relation":{"name":"fk_aimall_backend_products_seller_id","targetModel":"aimall_backend_sellers","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Product title - Implements product listing requirement. Human-readable product name. Ensures normalization as only master copy here. Example: 'Apple AirPods Pro 2'.","nullable":false},{"name":"description","type":"string","description":"Product detail/description - Implements product content requirement. Long text explaining features. Normalized; not duplicated elsewhere. Example: 'Latest model, improved noise cancellation.'","nullable":true},{"name":"main_thumbnail_uri","type":"uri","description":"Main thumbnail image URI - Implements image management requirement. Single main image URI. Only stored here, not duplicated in options. Example: 'https://cdn/airpods2-thumb.jpg'.","nullable":true},{"name":"status","type":"string","description":"Status of product (active, inactive, out_of_stock, deleted) - Tracks whether product is available. Normalized field. Example: 'active'.","nullable":false},{"name":"created_at","type":"datetime","description":"Created timestamp - Implements audit and snapshot needs. Creation datetime. Example: 2024-05-01T10:00:00Z.","nullable":false},{"name":"updated_at","type":"datetime","description":"Updated timestamp. To support change and audit needs. Example: 2024-05-02T15:10:00Z.","nullable":false}],"uniqueIndexes":[{"fieldNames":["seller_id","title"],"unique":true}],"plainIndexes":[{"fieldNames":["category_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"aimall_backend_product_options","description":"Product options (variant definitions) - Implements the SKU/variant requirement in the Product Management and ERD. Stores all option variants for products (e.g., color, size). Maintains 3NF by only referencing products and not duplicating inventory or price. For example, 'Color: Black', 'Size: M' for given product. Key relationships: links to aimall_backend_products. Special behaviors: One record per option value; combinations for full SKU are stored in aimall_backend_skus.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique per product option."},"foreignFields":[{"name":"product_id","type":"uuid","description":"Product's {@link aimall_backend_products.id} - Which product this option belongs to.","relation":{"name":"fk_aimall_backend_product_options_product_id","targetModel":"aimall_backend_products","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"name","type":"string","description":"Option name (e.g., Color, Size) - Implements option specification requirement. Atomic; not duplicated. For example, 'Color'.","nullable":false},{"name":"value","type":"string","description":"Option value (e.g., Red, Large) - Option value per option type. Ensures full normalization. For example, 'Black'.","nullable":false}],"uniqueIndexes":[{"fieldNames":["product_id","name","value"],"unique":true}],"plainIndexes":[{"fieldNames":["product_id"]}],"ginIndexes":[{"fieldName":"name"},{"fieldName":"value"}]},{"name":"aimall_backend_product_bundles","description":"Product bundles (set/group of products) - Implements the bundle/package product requirement from Product Management. Defines relationships between products that are sold together as bundles. Strictly normalized: just references to master products and role (main vs component). Never includes precomputed price or stock. For example, 'Gift Set' containing three products. Key relationships: links to main product and bundled product (both aimall_backend_products). Special behaviors: For M:N bundles, each row links a bundle and a bundled component.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique per bundle-member relation."},"foreignFields":[{"name":"bundle_product_id","type":"uuid","description":"Main bundle product's {@link aimall_backend_products.id}. Represents the product that is a bundle group/master.","relation":{"name":"fk_aimall_backend_product_bundles_bundle_product_id","targetModel":"aimall_backend_products","targetField":"id","mappingName":"aimall_backend_product_bundles_of_bundle_product_id"},"unique":false,"nullable":false},{"name":"component_product_id","type":"uuid","description":"Bundled component product's {@link aimall_backend_products.id}. Represents the directly included (child) product.","relation":{"name":"fk_aimall_backend_product_bundles_component_product_id","targetModel":"aimall_backend_products","targetField":"id","mappingName":"aimall_backend_product_bundles_of_component_product_id"},"unique":false,"nullable":false}],"plainFields":[{"name":"is_required","type":"boolean","description":"Indicates if the component is required for the bundle - Implements bundle rule requirement. For example, requiring all components for fixed set; false for optional (e.g., gift add-on).","nullable":false},{"name":"quantity","type":"int","description":"Quantity of this component in the bundle - How many units included per bundle. Maintains normalization by not duplicating product details. Example: 2 means two of this item per bundle.","nullable":false}],"uniqueIndexes":[{"fieldNames":["bundle_product_id","component_product_id"],"unique":true}],"plainIndexes":[{"fieldNames":["bundle_product_id"]}],"ginIndexes":[]},{"name":"aimall_backend_categories","description":"Product categories (taxonomy) - Implements category management and classification from Product Management. Defines the product taxonomy hierarchy (main/sub/section levels). Maintains 3NF â€“ only category data; no product fields here. For example, 'Electronics > Phones > Accessories'. Key relationships: can be hierarchical via parent_id (self-reference); products reference categories. Special behaviors: Hierarchical nesting is optional (nullable parent_id); root categories have null parent_id.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique per category."},"foreignFields":[{"name":"parent_id","type":"uuid","description":"Parent category's {@link aimall_backend_categories.id}. Hierarchical parent, or null for root categories.","relation":{"name":"fk_aimall_backend_categories_parent_id","targetModel":"aimall_backend_categories","targetField":"id","mappingName":"recursive"},"unique":false,"nullable":true}],"plainFields":[{"name":"name","type":"string","description":"Category name - Implements taxonomy labeling. Atomic; no category hierarchy in this field. For example: 'Electronics'.","nullable":false},{"name":"depth","type":"int","description":"Hierarchy depth - Root=1, increasing with subcategories. Implements hierarchy requirement. For example, 2 for subcategory.","nullable":false}],"uniqueIndexes":[{"fieldNames":["parent_id","name"],"unique":true}],"plainIndexes":[{"fieldNames":["parent_id"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"aimall_backend_skus","description":"SKU master (variant combinations) - Implements complete variant/SKU specification from Product Management. Defines each purchasable SKU (combination of product + options), with references to all option values selected. Fully normalized: no pricing, inventory, or calculated data; only references and atomic SKU codes. For example, a unique SKU for 'AirPods Pro 2, Color: Black, Case: Yes'. Key relationships: links to product and all relevant options. Special behaviors: Unique per product and option combination.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique per SKU."},"foreignFields":[{"name":"product_id","type":"uuid","description":"Product's {@link aimall_backend_products.id} for which this SKU is defined.","relation":{"name":"fk_aimall_backend_skus_product_id","targetModel":"aimall_backend_products","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"sku_code","type":"string","description":"Platform-unique SKU code - Implements SKU referencing. Example: 'APPRO2-BLK-CASEY'.","nullable":false}],"uniqueIndexes":[{"fieldNames":["sku_code"],"unique":true}],"plainIndexes":[{"fieldNames":["product_id"]}],"ginIndexes":[]},{"name":"aimall_backend_inventory_snapshots","description":"Inventory snapshot logger - Implements inventory audit trail, atomicity, and change tracking from Product Management. Records all changes to inventory for audit and temporal reconstruction. Fully normalized: references the SKU, never precomputes total inventory. For example, logs each change when inventory is updated due to sales, restock, or manual adjustment. Key relationships: links to SKUs and products. Special behaviors: Can reconstruct point-in-time inventory by aggregating snapshots for a SKU/product.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique per inventory change event."},"foreignFields":[{"name":"sku_id","type":"uuid","description":"SKU's {@link aimall_backend_skus.id} for which inventory was changed.","relation":{"name":"fk_aimall_backend_inventory_snapshots_sku_id","targetModel":"aimall_backend_skus","targetField":"id"},"unique":false,"nullable":false},{"name":"product_id","type":"uuid","description":"Product's {@link aimall_backend_products.id} (denormalized FK for easier audit).","relation":{"name":"fk_aimall_backend_inventory_snapshots_product_id","targetModel":"aimall_backend_products","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"change_type","type":"string","description":"Type of inventory change - Implements stock mutation requirement. Examples: 'sale', 'restock', 'manual_adjust'.","nullable":false},{"name":"change_quantity","type":"int","description":"Quantity of change (positive/negative) - Atomic per event. For example, -1 for sale, +5 for restock.","nullable":false},{"name":"changed_by","type":"uuid","description":"Actor's user id (e.g. admin or seller) - Who caused the change. Ensures proper audit trail. Example: seller UUID.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when snapshot created. Implements audit/compliance.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["sku_id"]},{"fieldNames":["product_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"aimall_backend_channel_assignments","description":"Channel assignment for product listing - Implements cross-channel management from Product Management. Records product's registration and mapping to multiple channels (e.g. online store, section, marketplace). Maintains 3NF by only referencing IDs. Example: A product may be listed on two channels; each row here for a channel. No pricing or denormalized status fields. Key relationships: links to aimall_backend_products and already created aimall_backend_channels. Special behaviors: Each tuple is unique: a product appears at most once per channel.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique per product/channel tuple."},"foreignFields":[{"name":"product_id","type":"uuid","description":"Product's {@link aimall_backend_products.id} for this listing.","relation":{"name":"fk_aimall_backend_channel_assignments_product_id","targetModel":"aimall_backend_products","targetField":"id"},"unique":false,"nullable":false},{"name":"channel_id","type":"uuid","description":"Channel's {@link aimall_backend_channels.id} (already implemented in Systematic domain).","relation":{"name":"fk_aimall_backend_channel_assignments_channel_id","targetModel":"aimall_backend_channels","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"assigned_at","type":"datetime","description":"Assignment timestamp - When product was listed on this channel. Maintains correct timeline for audit/rollback. Example: 2024-05-02T13:20:00Z.","nullable":false}],"uniqueIndexes":[{"fieldNames":["product_id","channel_id"],"unique":true}],"plainIndexes":[{"fieldNames":["channel_id"]}],"ginIndexes":[]}]},{"filename":"schema-04-community.prisma","namespace":"Community","models":[{"name":"aimall_backend_posts","description":"Community Post Entity â€“ Implements community post requirements from '06_aimall-backend_bulletin-board-and-community.md'.\n\nThis model represents bulletin board posts (questions, articles, announcements) by customers, sellers, or administrators. Maintains 3NF by separating atomic fields and delegating denormalized/aggregated data to materialized views if needed. Example: User creates a Q&A entry, product question, or system announcement.\n\nKey relationships: References actor via foreign key (customer/seller/administrator via polymorphic pattern by referencing only customer for now, or 'actor_id' if polymorphism were implemented). May be linked to multiple comments and attachments. Product review posts are modelled in 'aimall_backend_reviews'.\nSpecial behaviors: Only atomic, normalized data, status/visibility managed via fields (no pre-calculated counters).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for the post record."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Belonged customer's {@link aimall_backend_customers.id}. Links post to the creating customer. Nullable for posts by seller/admin (future extension).","relation":{"name":"fk_posts_customer","targetModel":"aimall_backend_customers","sourceField":"customer_id","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"title","type":"string","description":"Post title â€“ Implements post composition requirements. The headline users see in boards or feeds. Maintains normalization by storing each post's title only once. Example: 'How do AI coupons work?'.","nullable":false},{"name":"body","type":"string","description":"Post content â€“ Implements discussion body requirement. The main textual content. Fully normalized and searchable. Example: 'You can redeem AI coupons every Friday...'.","nullable":false},{"name":"is_private","type":"boolean","description":"Whether the post is private â€“ Controls visibility per requirements. Ensures that private/public settings are not duplicated elsewhere. Example: A seller-customer product Q&A marked as private.","nullable":false},{"name":"view_count","type":"int","description":"Post view count â€“ For tracking read frequency, enabling moderation or analytics. Not pre-aggregated; raw counter updated per view (always atomic). Example: 12 views.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp â€“ Implements system recording and audit requirements. Atomic record of creation. Example: 2025-07-29T15:45:40Z.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification timestamp. Timestamp for auditing edits. Example: 2025-07-29T15:45:40Z.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Allows for compliant redaction/restore. Null if not deleted. Example: null or 2025-07-29T16:00:00Z.","nullable":true}],"uniqueIndexes":[{"fieldNames":["customer_id","title"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["deleted_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"aimall_backend_comments","description":"Community Comment Entity â€“ Implements content/comment system from '06_aimall-backend_bulletin-board-and-community.md'.\n\nStores user comments/replies attached to posts, reviews, or announcements while normalizing structure (3NF). Each comment belongs to a post or review via foreign key. Maintains strict normalization by holding only atomic, per-comment data.\nExample: User adds a reply to a Q&A, review, or announcement.\nKey relationships: Links to aimall_backend_posts, aimall_backend_reviews, and optionally to parent comments for threads.\nSpecial behaviors: Soft deletion supported by nullable timestamp; content removed only on explicit deletion for audit.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for the comment record."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Target post's {@link aimall_backend_posts.id}. Links comment to a post entry.","relation":{"name":"fk_comments_post","targetModel":"aimall_backend_posts","sourceField":"post_id","targetField":"id"},"unique":false,"nullable":true},{"name":"review_id","type":"uuid","description":"Target review's {@link aimall_backend_reviews.id}. Allows comments on reviews as per requirements.","relation":{"name":"fk_comments_review","targetModel":"aimall_backend_reviews","sourceField":"review_id","targetField":"id"},"unique":false,"nullable":true},{"name":"parent_id","type":"uuid","description":"Parent comment's {@link aimall_backend_comments.id}. Enables comment/reply threading. Null for top-level comments.","relation":{"name":"fk_comments_parent","targetModel":"aimall_backend_comments","sourceField":"parent_id","targetField":"id","mappingName":"recursive"},"unique":false,"nullable":true},{"name":"customer_id","type":"uuid","description":"Comment author's {@link aimall_backend_customers.id}. Links comment to originating customer (nullable for polymorphic future extension).","relation":{"name":"fk_comments_customer","targetModel":"aimall_backend_customers","sourceField":"customer_id","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"body","type":"string","description":"Comment content. Main discussion text. Fully normalized; all comments stored atomically. Example: 'Great post, thank you!'","nullable":false},{"name":"is_private","type":"boolean","description":"Is the comment private? Controls visibility per business rules. Example: true for seller/private thread, false for public comments.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp â€“ for full audit trail and recency sorting.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last mod time â€“ modified for each comment edit as audit record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Null if active; otherwise marks as deleted for compliance/audit.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["review_id"]},{"fieldNames":["parent_id"]}],"ginIndexes":[{"fieldName":"body"}]},{"name":"aimall_backend_reviews","description":"Product Review Entity â€“ Implements review, rating, and moderation features from '06_aimall-backend_bulletin-board-and-community.md'.\n\nStores atomic product reviews with ratings, authored by customers. Maintains strict 3NF with one record per review. Example: Customer reviews a recently delivered product.\nKey relationships: Links to customer (author) and product (target), both via foreign key referencing respective models in other domains. Review-specific attachments stored separately in aimall_backend_attachments.\nSpecial behaviors: Supports soft deletion. Moderation handled externally (status flag can be added for further workflows).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for the review record."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Reviewing customer's {@link aimall_backend_customers.id}. Authorship for reference and audit.","relation":{"name":"fk_reviews_customer","targetModel":"aimall_backend_customers","sourceField":"customer_id","targetField":"id"},"unique":false,"nullable":false},{"name":"product_id","type":"uuid","description":"Target product's {@link aimall_backend_products.id}. The product reviewed in this entry.","relation":{"name":"fk_reviews_product","targetModel":"aimall_backend_products","sourceField":"product_id","targetField":"id"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Review title. Concise headline for the review. Normalized by review. Example: 'Super fast delivery!'","nullable":false},{"name":"body","type":"string","description":"Review content text. Main review message from reviewer. Example: 'I received the item within one day; packaging was good.'","nullable":false},{"name":"rating","type":"int","description":"Star rating (1â€“5) as required by product review features. Integer, enforced by input layer. Example: 4","nullable":false},{"name":"created_at","type":"datetime","description":"Review creation timestamp for audit/history/personalization.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp for last review edit. Used for moderation/logging.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp; null for active, otherwise signals redaction/restoration window.","nullable":true}],"uniqueIndexes":[{"fieldNames":["customer_id","product_id"],"unique":true}],"plainIndexes":[{"fieldNames":["product_id"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"aimall_backend_attachments","description":"Community Attachment Entity â€“ Implements attachment/media requirements from '06_aimall-backend_bulletin-board-and-community.md'.\n\nAtomic representation of file/image/video/document attached to post, comment, or review. Maintains 3NF by separating main content and attachment storage. Example: User uploads a photo for a review or Q&A.\nKey relationships: Attachments link to posts, comments, or reviews via foreign keys (only one set at a time, reflecting context).\nSpecial behaviors: All files are stored externally and referenced by URI for privacy/compliance.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for the attachment record."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Belonged post's {@link aimall_backend_posts.id}. Nullable; links file to a post if set.","relation":{"name":"fk_attachments_post","targetModel":"aimall_backend_posts","sourceField":"post_id","targetField":"id"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Belonged comment's {@link aimall_backend_comments.id}. Nullable; file attached to a comment.","relation":{"name":"fk_attachments_comment","targetModel":"aimall_backend_comments","sourceField":"comment_id","targetField":"id"},"unique":false,"nullable":true},{"name":"review_id","type":"uuid","description":"Belonged review's {@link aimall_backend_reviews.id}. Nullable; attaches to review media.","relation":{"name":"fk_attachments_review","targetModel":"aimall_backend_reviews","sourceField":"review_id","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"file_uri","type":"uri","description":"File URI â€“ Implements external reference for uploaded files by compliance. Atomic URI field only. Example: 's3://bucket/folder/uuid-filename.jpg'","nullable":false},{"name":"file_type","type":"string","description":"File type (image, video, doc) to support moderation. Example: 'image/jpeg'","nullable":false},{"name":"file_size","type":"int","description":"File size in bytes. Enables size filtering and compliance. Example: 328914","nullable":false},{"name":"created_at","type":"datetime","description":"File creation/upload timestamp.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["post_id"]},{"fieldNames":["comment_id"]},{"fieldNames":["review_id"]}],"ginIndexes":[]},{"name":"aimall_backend_snapshots","description":"Community Snapshot Entity â€“ Implements the snapshot/photo-sharing feature from '06_aimall-backend_bulletin-board-and-community.md'.\n\nUsed to store user image/photo/short-video moments optionally linked to products or posts for the social timeline. Maintains strict normalization (each row = one snapshot). Example: Photo tagged to a product or post for trending feed.\nKey relationships: Foreign keys to products, posts, and customers per context.\nSpecial behaviors: No denormalized trends/cache; all aggregated/denormalized data resides in views.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for the snapshot record."},"foreignFields":[{"name":"product_id","type":"uuid","description":"Tagged product's {@link aimall_backend_products.id}. Link snapshot to a product for timeline, searchable by product.","relation":{"name":"fk_snapshots_product","targetModel":"aimall_backend_products","sourceField":"product_id","targetField":"id"},"unique":false,"nullable":true},{"name":"post_id","type":"uuid","description":"Tagged post's {@link aimall_backend_posts.id}. Enables photo-to-post association.","relation":{"name":"fk_snapshots_post","targetModel":"aimall_backend_posts","sourceField":"post_id","targetField":"id"},"unique":false,"nullable":true},{"name":"customer_id","type":"uuid","description":"Creator customer's {@link aimall_backend_customers.id}. Snapshot author/reference. Nullable for anonymous posts.","relation":{"name":"fk_snapshots_customer","targetModel":"aimall_backend_customers","sourceField":"customer_id","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"media_uri","type":"uri","description":"Media file URI â€“ integrity-persistent link to external image/video for compliance. Atomic per snapshot. Example: 's3://bucket/path/snap-uuid.jpg'","nullable":false},{"name":"caption","type":"string","description":"Short caption for post context or social feeds. Example: 'Spring Fashion 2025 - Trending Looks'","nullable":true},{"name":"created_at","type":"datetime","description":"Moment creation/upload timestamp.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["product_id"]},{"fieldNames":["post_id"]}],"ginIndexes":[{"fieldName":"caption"}]}]},{"filename":"schema-05-carts.prisma","namespace":"Carts","models":[{"name":"aimall_backend_carts","description":"Cart entity for persistent session/account shopping cart, per 07_aimall-backend_cart-system.md. Implements shopping cart ownership and lifecycle, supporting both account-linked and guest session carts. Ensures 3NF by only containing ownership/session metadata and maintaining relations to items. Enforces business logic for one active cart per customer/session via unique constraints. Primary use: container for items prior to purchase/order creation.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies the cart instance."},"foreignFields":[{"name":"aimall_backend_customer_id","type":"uuid","description":"Owned account's {@link aimall_backend_customers.id}. Nullable for anonymous/guest carts. Implements account-tied cart merging requirement.","relation":{"name":"customer","type":"foreign","targetModel":"aimall_backend_customers","targetField":"id"},"unique":true,"nullable":true}],"plainFields":[{"name":"session_token","type":"string","description":"Session or device token for anonymous carts; one of this or aimall_backend_customer_id should be present. Allows unique cart per session. Nullable for account-tied carts.","nullable":true},{"name":"created_at","type":"datetime","description":"Cart creation timestamp. For auditing, recovery, and analytics use cases.","nullable":false},{"name":"updated_at","type":"datetime","description":"Cart update timestamp. For sync, concurrent editing, and recovery. Always required.","nullable":false}],"uniqueIndexes":[{"fieldNames":["aimall_backend_customer_id"],"unique":true},{"fieldNames":["session_token"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]},{"name":"aimall_backend_cart_items","description":"Cart item entity for individual products/options/SKUs attached to a cart, per 07_aimall-backend_cart-system.md. Strictly normalized to 3NF: each row references only atomic, business-level selections for one cart, product, option, and SKU. No pre-calculated or denormalized data: totals and calculations only in order or reporting models. Guarantees item distinction via composite unique key and references only valid products/SKUs/options across domains.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Identifies the cart item row uniquely."},"foreignFields":[{"name":"aimall_backend_cart_id","type":"uuid","description":"The cart's {@link aimall_backend_carts.id} this item is attached to. Implements cart containment. Required always.","relation":{"name":"cart","type":"foreign","targetModel":"aimall_backend_carts","targetField":"id"},"unique":false,"nullable":false},{"name":"aimall_backend_product_id","type":"uuid","description":"The product's {@link aimall_backend_products.id} for this item. Implements product line selection requirement.","relation":{"name":"product","type":"foreign","targetModel":"aimall_backend_products","targetField":"id"},"unique":false,"nullable":false},{"name":"aimall_backend_product_option_id","type":"uuid","description":"The product option's {@link aimall_backend_product_options.id} (size, color, etc). Nullable if product has no options. Implements variant selection.","relation":{"name":"product_option","type":"foreign","targetModel":"aimall_backend_product_options","targetField":"id"},"unique":false,"nullable":true},{"name":"aimall_backend_sku_id","type":"uuid","description":"The SKU's {@link aimall_backend_skus.id} representing the selected product variant. Nullable for unkeyed SKUs. Validates inventory/restrictions at checkout.","relation":{"name":"sku","type":"foreign","targetModel":"aimall_backend_skus","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"quantity","type":"int","description":"Requested quantity. Implements unit selection policy, always positive integer. No pre-calculation, strictly atomic. Normalized per 3NF.","nullable":false},{"name":"unit_price_snapshot","type":"double","description":"Unit price snapshot at time of addition. Fulfills price/discount audit requirement. Must not be pre-calculated for totals, normalization preserved.","nullable":false},{"name":"discount_snapshot","type":"double","description":"Discount value per item at time of assignment. Captures promo logic at item addition. Nullable if no discount applied. Calculation delegated to reporting/views.","nullable":true},{"name":"selected_name_display","type":"string","description":"Optional UI-friendly product+option name for easier display in UI/cart. Optional, not required for backend operation.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp: item creation. For lifecycle/audit tracking. Required.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp: item update. Required for change tracking.","nullable":false}],"uniqueIndexes":[{"fieldNames":["aimall_backend_cart_id","aimall_backend_product_id","aimall_backend_product_option_id","aimall_backend_sku_id"],"unique":true}],"plainIndexes":[{"fieldNames":["aimall_backend_cart_id"]},{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]}]},{"filename":"schema-06-orders.prisma","namespace":"Orders","models":[{"name":"aimall_backend_orders","description":"Order master record - This implements the foundational requirement from the Order and Delivery System for robust, scalable handling of customer orders from placement to fulfillment (Section 8/Order and Delivery). \n\nTracks primary order business data for each customer order including status, seller linkage, total amounts, and audit timestamps. Maintains 3NF normalization by breaking out order items, payments, and shipments into separate tables. For example, one entry per completed order. \n\nKey relationships: links to customer (already in Actors), ships to one address, references associated order snapshots. Special behaviors: immutable after archival; only modifiable in allowed statuses; supports audit trail.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Belonged customer's {@link aimall_backend_customers.id}. Used to attribute each order to its owner in the Actors domain.","relation":{"fields":["customer_id"],"references":["id"],"targetModel":"aimall_backend_customers","onDelete":"Restrict","name":"customer_to_orders"},"unique":false,"nullable":false},{"name":"seller_id","type":"uuid","description":"Owning seller's {@link aimall_backend_sellers.id} for multi-vendor order scenarios.","relation":{"fields":["seller_id"],"references":["id"],"targetModel":"aimall_backend_sellers","onDelete":"Restrict","name":"seller_to_orders"},"unique":false,"nullable":false},{"name":"address_id","type":"uuid","description":"Delivery address for the order. References {@link aimall_backend_addresses.id} from Actors domain.","relation":{"fields":["address_id"],"references":["id"],"targetModel":"aimall_backend_addresses","onDelete":"Restrict","name":"order_to_address"},"unique":false,"nullable":false}],"plainFields":[{"name":"order_number","type":"string","description":"Unique, business-facing order number. Implements requirement for order tracking, customer communication, and admin search. Ensures normalization by keeping system-int/uuid as primary and a unique business string for reference. For example: 'ORD-20250729-0001'. Constraint: uniquely indexed.","nullable":false},{"name":"order_status","type":"string","description":"Current order status (e.g., 'pending', 'paid', 'processing', 'shipped', 'delivered', 'cancelled', 'returned'). Implements fulfillment state machine; ensures normalization by using enumerative string. For example: 'paid'.","nullable":false},{"name":"total_amount","type":"double","description":"Total order amount at placement (snapshot of the customer-facing amount). Implements requirement for payment, reporting, and analysis. No auto-calc in table (all raw amounts). For example: 125000.00. Constraint: always >= 0.","nullable":false},{"name":"currency","type":"string","description":"Order currency code (e.g., 'KRW', 'USD'). Implements requirement to support multi-currency orders. Ensures normalization by storing ISO currency code. For example: 'KRW'. Applies to all order flows.","nullable":false},{"name":"created_at","type":"datetime","description":"Order creation timestamp. Implements requirement for auditability, KPI (order intake rate). Normalization is maintained as each event is atomic; non-derived. Example: '2025-07-29T15:45:40Z'.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification time for the order record. Implements audit and monitoring requirements. Usage: admin tracking, compliance. Not derived, always updated in place. Example: '2025-07-29T17:01:10Z'.","nullable":false},{"name":"archived_at","type":"datetime","description":"Timestamp when this order was marked as immutable/archived. Implements audit and compliance feature for order records lifecycle. Null if not archived. For example: null or '2025-07-30T10:37:20Z'.","nullable":true}],"uniqueIndexes":[{"fieldNames":["order_number"],"unique":true}],"plainIndexes":[{"fieldNames":["customer_id","created_at"]},{"fieldNames":["seller_id"]},{"fieldNames":["order_status"]}],"ginIndexes":[]},{"name":"aimall_backend_order_items","description":"Order item line - This implements the detail breakdown for each product in an order, per the requirement that orders can contain multiple items (Section 8: multi-item, multi-seller order scenarios). \n\nEach record represents one product (SKU/option/bundle) purchased in the order, allowing for complete normalization without pre-aggregated data. Maintains 3NF: all variant, quantity, and item price data atomic. For example: an order with 2 different goods results in 2 rows here.\n\nKey relationships: Belongs to an order, references a product and option from Products domain. Special behaviors: immutable after order is archived.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"order_id","type":"uuid","description":"Parent order's {@link aimall_backend_orders.id}. Enforces relationship between line item and master order.","relation":{"fields":["order_id"],"references":["id"],"targetModel":"aimall_backend_orders","onDelete":"Cascade","name":"order_to_order_items"},"unique":false,"nullable":false},{"name":"product_id","type":"uuid","description":"Purchased product's {@link aimall_backend_products.id} in Products domain. Ensures normalized reference.","relation":{"fields":["product_id"],"references":["id"],"targetModel":"aimall_backend_products","onDelete":"Restrict","name":"product_to_order_items"},"unique":false,"nullable":false},{"name":"product_option_id","type":"uuid","description":"Ordered product option's {@link aimall_backend_product_options.id}. Supports SKU/variant distinctions. Null if none (e.g. for base products).","relation":{"fields":["product_option_id"],"references":["id"],"targetModel":"aimall_backend_product_options","onDelete":"SetNull","name":"option_to_order_items"},"unique":false,"nullable":true}],"plainFields":[{"name":"item_name","type":"string","description":"Display name of item at time of purchase. Implements snapshot of purchase detail per order, used for support, returns, and analytics. For example: 'AI Smart Speaker' (not a calc field, denormalized to support legal compliance on order receipts).","nullable":false},{"name":"quantity","type":"int","description":"Ordered quantity for this item. Business meaning: inventory deduction, analytics, returns processing. For example: 2. Always positive integer.","nullable":false},{"name":"unit_price","type":"double","description":"Unit price snapshot at purchase time. Fulfills critical requirement for audit trail, analytics, claims. Not a calc fieldâ€”this field preserves item price history. For example: 59000.0.","nullable":false},{"name":"total_price","type":"double","description":"Total price = unit_price * quantity at time of order. Snapshot requirement for precise reconciliation. Not a pre-calculated aggregate (single-item only). For example: 118000.0.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["order_id"]},{"fieldNames":["product_id"]}],"ginIndexes":[]},{"name":"aimall_backend_payments","description":"Order payment transaction - Implements requirement for flexible, auditable order payments (Section 8 & Discount/Loyalty). Records each payment event tied to an order, including multiple forms (split payment, coupon, points). Maintains 3NF by itemizing each transaction event, never aggregating in-line to regular order tables. For example: an order with cash + points records two entries here. Key relationships: to order, and optionally, coupon/loyalty/discount entities in other domains. Special behaviors: amount integrity, immutable after completion, joinable via order_id.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"order_id","type":"uuid","description":"The order this payment is associated with. References {@link aimall_backend_orders.id}.","relation":{"fields":["order_id"],"references":["id"],"targetModel":"aimall_backend_orders","onDelete":"Cascade","name":"order_to_payments"},"unique":false,"nullable":false}],"plainFields":[{"name":"payment_method","type":"string","description":"Payment channel/type used (e.g., 'credit_card', 'deposit', 'coupon', 'loyalty_points', 'virtual_account'). Implements requirement for multi-mode payments per order. Not a calculated or enum field, but controlled by business logic.","nullable":false},{"name":"amount","type":"double","description":"Amount paid via this transaction. Implements requirement for sum-to-total integrity for each order. Use for audit/reconciliation. For example: 59100.0.","nullable":false},{"name":"currency","type":"string","description":"Payment currency code such as 'KRW', 'USD'. Implements multi-currency flexibility, maintains normalization. For example: 'KRW'.","nullable":false},{"name":"transaction_id","type":"string","description":"External payment processor's transaction or confirmation code. Implements traceability/chargebacks. May be nullable for internal balance, coupon cases. For example: 'PAY2025072900023'.","nullable":true},{"name":"paid_at","type":"datetime","description":"Timestamp when this payment event was processed and confirmed. Auditable event. Example: '2025-07-29T16:44:51Z'.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["order_id"]},{"fieldNames":["transaction_id"]}],"ginIndexes":[]},{"name":"aimall_backend_shipments","description":"Shipment record for an order - Implements requirement for real-time order/delivery tracking and logistics integration (Section 8). Each record denotes shipment and delivery event for a part/all of an order. Maintains 3NF by separating shipment events from orders, allowing for multi-seller/partial-ship. For example: two shipments for split orders, or replacements. Key relationships: references order, shipment address (Actors), and shipper; can be joined via order_id for fulfillment queries. Special behaviors: immutable after delivery except for tracking updates.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"order_id","type":"uuid","description":"Linked order's {@link aimall_backend_orders.id}. Enforces relationship with primary order record.","relation":{"fields":["order_id"],"references":["id"],"targetModel":"aimall_backend_orders","onDelete":"Cascade","name":"order_to_shipments"},"unique":false,"nullable":false},{"name":"shipment_address_id","type":"uuid","description":"Target delivery address for this shipment. References {@link aimall_backend_addresses.id}.","relation":{"fields":["shipment_address_id"],"references":["id"],"targetModel":"aimall_backend_addresses","onDelete":"Restrict","name":"shipment_to_address"},"unique":false,"nullable":false}],"plainFields":[{"name":"carrier","type":"string","description":"Shipping carrier nameâ€”recorded for handoff, customer service, compliance. Not a lookup or derived type; can be any contracted vendor name. For example: 'CJ Logistics'.","nullable":false},{"name":"tracking_number","type":"string","description":"Carrier-provided tracking code. Key for customer tracking and support, audit logs. For example: '1Z9999Y70200370006', can be null for in-process or non-tracked deliveries.","nullable":true},{"name":"shipment_status","type":"string","description":"Current fulfillment status ('pending', 'shipped', 'delivered', etc.). Implements state machine for delivery steps.","nullable":false},{"name":"shipped_at","type":"datetime","description":"Shipment departure timestamp from warehouse. Used for fulfillment metrics. Null if not shipped.","nullable":true},{"name":"delivered_at","type":"datetime","description":"Final delivery confirmation timestamp. Used for SLAs, customer comms, audit trails. Null if not delivered yet.","nullable":true},{"name":"created_at","type":"datetime","description":"Record creation timestamp for shipment event. For audit trail and logistics management. For example: '2025-07-29T16:32:00Z'.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["order_id"]}],"ginIndexes":[]},{"name":"aimall_backend_order_snapshots","description":"Order state snapshot/audit trail - Implements snapshot-based pattern for order/invoice auditing and rollback (Section 8, System Overview, Technical+Compliance). Each entry is a full serialized snapshot of the orderâ€™s business state at a critical event (placement, modification, cancelation). Maintains 3NF by storing atomic, versioned snapshots tied to an order (never redundant calc/agg fields in main tables). For example: one entry at order creation, another on update/cancel. Key relationships: references order; supports audit/compliance. Special behaviors: append-only, never mutable/deletable except under strict retention policies.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"order_id","type":"uuid","description":"The underlying order being snapshotted {@link aimall_backend_orders.id}.","relation":{"fields":["order_id"],"references":["id"],"targetModel":"aimall_backend_orders","onDelete":"Cascade","name":"order_to_snapshots"},"unique":false,"nullable":false}],"plainFields":[{"name":"snapshot_type","type":"string","description":"Categorizes snapshot event ('created', 'modified', 'cancelled', 'fulfilled', etc.). Used for auditability and compliance. For example: 'created'.","nullable":false},{"name":"snapshot_data","type":"string","description":"Serialized JSON string of the full order record and related items/payments/shipments at this point in time. Implements snapshot/audit trail requirement. For example: '{...}' (not directly queryable fields; used for rollback/forensics).","nullable":false},{"name":"snapshot_at","type":"datetime","description":"Time at which the snapshot was taken. Ensures correct event ordering (audit). For example: '2025-07-29T17:03:11Z'.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["order_id"]},{"fieldNames":["snapshot_type"]}],"ginIndexes":[]}]},{"filename":"schema-07-coupons.prisma","namespace":"Coupons","models":[{"name":"aimall_backend_coupons","description":"Coupon entity - This implements the requirements for coupon management and tracking as described in section 4 of the Discount & Loyalty System requirements.\n\nCoupons are digital vouchers that can be issued system-wide or user-specific, usable for eligible orders and products. All instances of coupon issuance, unique code storage, status (issued, redeemed, expired, invalidated), and usage constraints are strictly tracked at this entity. Maintains 3NF compliance by referencing related campaigns or users via IDs, with no redundant storage or pre-computation. For example, the system records a unique row per issued coupon, capturing its single-use or multi-use state for audit and abuse prevention.\n\nKey relationships: References the discount campaign and customer/user (from external actors) as the owner. May link to specific products or categories via foreign keys if necessary.\nSpecial behaviors: Unique coupon codes, strict status enumeration, and time-based validity are centrally enforced. No aggregate or computed fields, per normalization rules.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies the coupon."},"foreignFields":[{"name":"discount_campaign_id","type":"uuid","description":"Belonged campaign's {@link aimall_backend_discount_campaigns.id}. Links coupon to its issuing campaign for rule tracking and analytics.","relation":{"name":"campaign_coupons","targetModel":"aimall_backend_discount_campaigns","targetField":"id"},"unique":false,"nullable":false},{"name":"customer_id","type":"uuid","description":"Belonged customer's {@link aimall_backend_customers.id}. Tracks coupon assignment, redemption, and user-level eligibility. References already-existing customer entity in the actors domain.","relation":{"name":"customer_coupons","targetModel":"aimall_backend_customers","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"code","type":"string","description":"Coupon code - Implements the requirement for per-coupon identification.\n\nA unique code assigned to each coupon, which users enter or that are validated automatically in checkout flows. Ensures normalization by storing only the code, not related details. Example: ABCD1234, UNIV2025. Uniqueness enforced at the database with a unique index.","nullable":false},{"name":"status","type":"string","description":"Coupon status - Implements redemption and state-based business logic.\n\nBusiness meaning: Whether coupon is 'issued', 'redeemed', 'expired', or 'invalidated'. Ensures normalization: actual event details elsewhere. Example: Only one status value per coupon at any moment. Constraint: Acceptable values ('issued', 'redeemed', 'expired', 'invalidated') set by application logic.","nullable":false},{"name":"issued_at","type":"datetime","description":"Timestamp coupon was issued. Implements the issuance tracking part of requirements for audit. For example, tracks when the coupon became available. Required; not nullable.","nullable":false},{"name":"expires_at","type":"datetime","description":"Expiration timestamp - Implements the expiry control from coupon requirements.\n\nDefines when the coupon is no longer valid. For example, all redemptions after this point are denied. Ensures normalization by placing only atomic expiry data here.","nullable":false},{"name":"redeemed_at","type":"datetime","description":"Timestamp coupon was redeemed, if applicable - Implements requirement to audit all coupon lifecycle events.\n\nExample: Null until coupon is redeemed; filled when redeemed for traceability. Nullable as not all coupons will be redeemed.","nullable":true}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["discount_campaign_id"]},{"fieldNames":["customer_id"]},{"fieldNames":["status"]},{"fieldNames":["expires_at"]}],"ginIndexes":[]},{"name":"aimall_backend_discount_campaigns","description":"Discount Campaign entity - Implements discount rule and campaign management requirements described in section 4 of the Discount & Loyalty System requirements.\n\nDiscount campaigns group together sets of logic for applying discounts, coupon issuance parameters, stacking rules, and analytic tracking. A normalized (3NF) representation encapsulating start/end dates, rule definitions, stacking, and status but without summary/aggregate data.\n\nFor example, a campaign row controls: scope (order, product), stackable limit, usage limits, priority, etc. Campaign can be referenced by many coupons or redemptions but stores no pre-aggregated value.\n\nKey relationships: One-to-many with coupons and redemptions.\nSpecial behaviors: Unique code and priority enforcement; snapshot references for rule versioning if changed.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies the discount campaign."},"foreignFields":[],"plainFields":[{"name":"name","type":"string","description":"Discount campaign name - Implements business-facing identification of campaigns.\n\nClear, human-readable name for management and analytics. 3NF compliance: No description duplication. Example: 'New Year Sale 2025'.","nullable":false},{"name":"code","type":"string","description":"Campaign code - Implements unique, system-handled identifier for programmatic logic and analytics.\n\nUnique string (often uppercase/slug) used for campaign referencing, stacking, and analytics. 3NF: No duplication. Example: 'NEWYEAR2025'. Database uniqueness enforced.","nullable":false},{"name":"type","type":"string","description":"Campaign type - Implements logic for order/product scope and analytic reporting.\n\nBusiness meaning: whether discount is 'order', 'product', or other (application logic enumerates). Maintains normalization: actual logic flows elsewhere. Example value: 'order'.","nullable":false},{"name":"status","type":"string","description":"Campaign status - Enables active/inactive flag and clean campaign lifecycle management.\n\nExamples: 'active', 'inactive', 'ended', etc. Maintains 3NF by not mixing with actual events.","nullable":false},{"name":"stackable","type":"boolean","description":"Whether campaign can be stacked with others - Implements stacking/combination logic from requirements.\n\nTrue when combinable with other discounts, respecting stacking rules at checkout.","nullable":false},{"name":"start_at","type":"datetime","description":"Campaign start timestamp - Marks campaign activation for eligibility and analytics.\n\nDefines first moment of campaign eligibility for coupons/discounts. Required; not nullable. For example: '2025-01-01T00:00:00Z'.","nullable":false},{"name":"end_at","type":"datetime","description":"Campaign end timestamp - Marks campaign deactivation point and eligibility.\n\nDefines the last valid moment for coupon redemptions/discount application; no events after this point. Ensures correct time-bound logic.","nullable":false},{"name":"max_uses_per_user","type":"int","description":"Maximum number of allowed uses per user - Implements usage limit logic per requirements.\n\nInteger; 0 or null means unlimited. Normalization: Only the atomic usage parameter, not aggregates. Example: 1 for single-use campaigns, 0 for unlimited. Application logic enforces the rule.","nullable":true},{"name":"priority","type":"int","description":"Priority value - Implements campaign precedence in case of rule conflicts per requirements.\n\nHigher integer wins precedence; determines stacking/order during application. Normalized as atomic value only.","nullable":false},{"name":"description","type":"string","description":"Long-form description for business or admin guidance - Implements documentation and operational guidance requirements.\n\nExample: 'Order-level campaign for new users; stackable with product level'. Not used for display to end customers. Nullable for minimal campaigns.","nullable":true}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["start_at","end_at"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"aimall_backend_coupon_redemptions","description":"Coupon Redemption entity - Implements detailed redemption/audit requirements in section 4 of Discount & Loyalty System, and supports full traceability and fraud prevention.\n\nEach redemption row captures a single coupon redemption event (including success/failure), strictly separated from the coupon itself for normalization. Data here supports auditing, anti-abuse monitoring, and rollback processes.\n\nFor example, a redemption is recorded for each attempt (success/failure), including who attempted, what order/product was targeted, and timestamp of the attempt. Snapshots of this table support fraud trend analytics.\n\nKey relationships: Coupon being redeemed, campaign involved (if applicable), customer performing redemption (actors).\nSpecial behaviors: No aggregate fields; atomic, one-event-per-row, supporting strict normalization.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies each coupon redemption event."},"foreignFields":[{"name":"coupon_id","type":"uuid","description":"Redeemed coupon's {@link aimall_backend_coupons.id}.\n\nDefines which coupon was redeemed, ensuring referential integrity and enabling full redemption tracking.","relation":{"name":"coupon_coupon_redemptions","targetModel":"aimall_backend_coupons","targetField":"id"},"unique":false,"nullable":false},{"name":"customer_id","type":"uuid","description":"Customer who performed redemption: references {@link aimall_backend_customers.id} in actors.\n\nEnables audit and anti-abuse analytics, linking redemptions to external users.","relation":{"name":"customer_coupon_redemptions","targetModel":"aimall_backend_customers","targetField":"id"},"unique":false,"nullable":false},{"name":"discount_campaign_id","type":"uuid","description":"Referenced campaign for reporting context: links to {@link aimall_backend_discount_campaigns.id}.\n\nSupports cases where redemption logic is context-sensitive to campaign rules.","relation":{"name":"campaign_coupon_redemptions","targetModel":"aimall_backend_discount_campaigns","targetField":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"redeemed_at","type":"datetime","description":"Timestamp that redemption was attempted.\n\nSupports audit and anti-fraud logics; expected to be used in analytic materialized views. Required; not nullable.","nullable":false},{"name":"redemption_status","type":"string","description":"Status of redemption attempt (success, failed, invalid, etc).\n\nImplements requirement to record all outcomes. Normalized by putting only status text, not aggregation. Application logic enumerates allowed values.","nullable":false},{"name":"order_id","type":"uuid","description":"Order against which coupon was redeemed.\n\nUse case: anti-fraud, analytic tracking, rollback. Atomic data, normalization maintained. Can be null if redemption not tied to an order.","nullable":true},{"name":"product_id","type":"uuid","description":"Product against which coupon was redeemed.\n\nUsed in single-product redemption scenarios. Nullable to allow broad campaign use; normalization kept by not mirroring product data here.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["coupon_id","customer_id","redeemed_at"]}],"ginIndexes":[]}]},{"filename":"schema-08-coins.prisma","namespace":"Coins","models":[{"name":"aimall_backend_loyalty_transactions","description":"Loyalty Transaction Entity - Implements the loyalty point/mileage tracking and auditing requirements from the Discount & Loyalty System document. Each record is a normalized atomic transaction (accrual, redemption, expiration, or reversal), ensuring 3NF by not holding computed balances. Strong auditability for compliance and fraud prevention. References Customers (required), Orders (optional), Coupons (optional). Example: accrual for order completion, burning for redemption, reversal for refund.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for each loyalty transaction record."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Associated customer's {@link aimall_backend_customers.id}. Links this transaction to the user who earned or used mileage/points.","relation":{"name":"customer","targetModel":"aimall_backend_customers"},"unique":false,"nullable":false},{"name":"order_id","type":"uuid","description":"Associated order's {@link aimall_backend_orders.id}; set if triggered by an order (e.g. purchase, refund, etc).","relation":{"name":"order","targetModel":"aimall_backend_orders"},"unique":false,"nullable":true},{"name":"coupon_id","type":"uuid","description":"Associated coupon's {@link aimall_backend_coupons.id}, if transaction was triggered by coupon redemption or benefit.","relation":{"name":"coupon","targetModel":"aimall_backend_coupons"},"unique":false,"nullable":true}],"plainFields":[{"name":"amount","type":"double","description":"Net change in user's mileage or loyalty points. Positive for accrual/awards, negative for redemption/expiration. Atomic value, not a running balance.","nullable":false},{"name":"type","type":"string","description":"Type of this transaction e.g. 'accrual', 'redemption', 'expiration', 'refund_reversal'. Business event code for this record.","nullable":false},{"name":"description","type":"string","description":"Operator/user-facing context reason (e.g. 'Order 0001 redemption', 'Sign-up bonus', 'Points expired', etc). May be null for system-generated entries.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of transaction creation. Used for audit, expiry, ordering, and analytics.","nullable":false},{"name":"expired_at","type":"datetime","description":"If this transaction caused point expiration, the timestamp of expiry. Nullable - not all transactions expire points.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["customer_id","created_at"]},{"fieldNames":["order_id"]}],"ginIndexes":[]},{"name":"aimall_backend_abuse_incidents","description":"Abuse Incident Entity - Each record is a single system- or admin-detected abuse/fraud event related to loyalty/discount/coupon/points usage. Normalized (3NF): only atomic events here. Examples: self-referral, rapid stacking, velocity anomalies. Used for AI/analytics, compliance, and admin investigation. References: customer, order, coupon, discount campaign when applicable.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for this abuse incident record."},"foreignFields":[{"name":"customer_id","type":"uuid","description":"Suspected or affected customer's {@link aimall_backend_customers.id}. Nullable if systemic (not user-specific).","relation":{"name":"customer","targetModel":"aimall_backend_customers"},"unique":false,"nullable":true},{"name":"order_id","type":"uuid","description":"Associated order's {@link aimall_backend_orders.id}. Nullable if not order-based.","relation":{"name":"order","targetModel":"aimall_backend_orders"},"unique":false,"nullable":true},{"name":"coupon_id","type":"uuid","description":"Associated coupon's {@link aimall_backend_coupons.id}. Nullable if incident not coupon-based.","relation":{"name":"coupon","targetModel":"aimall_backend_coupons"},"unique":false,"nullable":true},{"name":"discount_campaign_id","type":"uuid","description":"Related campaign's {@link aimall_backend_discount_campaigns.id}. Nullable if not campaign-linked.","relation":{"name":"discount_campaign","targetModel":"aimall_backend_discount_campaigns"},"unique":false,"nullable":true}],"plainFields":[{"name":"type","type":"string","description":"Nature/type of abuse e.g. 'self_referral', 'coupon_stacking', 'velocity_anomaly', 'systemwide_policy'. Root cause/event code.","nullable":false},{"name":"details","type":"string","description":"Further context/notes (e.g. IDs, context, admin note). Nullable if covered by other fields or not applicable.","nullable":true},{"name":"detected_at","type":"datetime","description":"Timestamp when system or admin detected (flagged) this event.","nullable":false},{"name":"resolved","type":"boolean","description":"Incident status: true if admin/AI confirmed and closed investigation, false if pending.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["customer_id","type","detected_at"]},{"fieldNames":["resolved","detected_at"]}],"ginIndexes":[]}]},{"filename":"schema-09-inquiries.prisma","namespace":"Inquiries","models":[{"name":"aimall_backend_support_tickets","description":"Support Ticket Entity - This implements the service support and inquiry feature requirements from the backend requirements analysis, particularly relating to customer service workflows and support escalation (see EARS statements about ticketing, AI escalation, and compliance logging). \nThis table models customer-initiated service requestsâ€”used for tracking issues, questions, and operational problems faced by customers, sellers, or administrators. It enables robust, auditable support workflows and links to related users by foreign keys (referencing pre-existing user tables). Maintains full 3NF normalization: All attribute data is atomic, and references are by foreign keys only. No pre-calculated or summary fields are present. Key relationships: links (via foreign keys) to users (customers, sellers, admins) in already-existing tables; referenced by audit/logging modules in other schemas. Special behaviors: status transitions (open, assigned, resolved, closed); fully audit-trailed via timestamp fields; supports escalation, categorization, and assignment. Sensitive information must be subject to compliance logging.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies each support ticket."},"foreignFields":[{"name":"requester_id","type":"uuid","description":"User's {@link aimall_backend_customers.id}, {@link aimall_backend_sellers.id}, or {@link aimall_backend_administrators.id} who created the support ticket. Enables reference to the actor initiating the ticket for compliance and support workflow.","relation":{"name":"fk_support_ticket_requester_id","targetModel":"aimall_backend_customers"},"unique":false,"nullable":false},{"name":"assignee_admin_id","type":"uuid","description":"Assigned admin's {@link aimall_backend_administrators.id}, if a ticket has been assigned to a staff member for handling. Tracks responsibility delegation in support workflow.","relation":{"name":"fk_support_ticket_assignee_admin_id","targetModel":"aimall_backend_administrators"},"unique":false,"nullable":true}],"plainFields":[{"name":"subject","type":"string","description":"Support ticket subject line - Implements the summary/short title requirement. Business meaning: customer-provided or system-generated one-line description for ticket triage (e.g., 'Order not received', 'Billing error'). Atomic, required for efficient ticket queue management.","nullable":false},{"name":"body","type":"string","description":"Support ticket full request detail - Implements the main description field. This is the message or inquiry provided by the user, containing all specifics of the case. Must be stored as a string (may contain markup/HTML). Strictly atomic and normalized.","nullable":false},{"name":"status","type":"string","description":"Ticket status - Implements the workflow state for tracking open, pending, resolved, or closed support requests. Suggested enum values: 'open', 'pending', 'resolved', 'closed', but allows string for forward-compatibility with workflow engines. Always atomic and only represents the current state, not calculated. Used for ticket queue filtering.","nullable":false},{"name":"priority","type":"string","description":"Priority flag (e.g., 'low','normal','high','urgent') - Implements support triage requirement. Indicates urgency for staff response and routing. Not calculated; strictly atomic and can be updated per ticket system business rules.","nullable":false},{"name":"category","type":"string","description":"Ticket category - Implements requirement for classification/tagging (e.g., 'payment', 'delivery', 'product', 'technical', 'account') for reporting, agent assignment, and workflow. Always atomic and reflects user/system selection upon ticket submission.","nullable":false},{"name":"created_at","type":"datetime","description":"Ticket creation timestamp - Implements requirement for audit trails, SLAs, and tracking. Indicates when the ticket was submitted. Not nullable per compliance requirements.","nullable":false},{"name":"updated_at","type":"datetime","description":"Ticket last update timestamp - Ensures audit log compliance and enables support workflow monitoring (e.g., for SLA violation, escalation checks). Updated on every atomic change to the ticket.","nullable":false}],"uniqueIndexes":[{"fieldNames":["requester_id","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]},{"fieldNames":["priority"]},{"fieldNames":["created_at"]},{"fieldNames":["assignee_admin_id"]}],"ginIndexes":[{"fieldName":"subject"},{"fieldName":"body"}]},{"name":"aimall_backend_faqs","description":"FAQ Entity - This implements the knowledge base/self-service feature from the requirements, enabling listing and maintaining frequently asked questions to improve user self-resolution and reduce support load (see EARS requirements for knowledge management and ticket deflection). Models a single FAQ record (question-answer pair), fully atomic and referenceable in a normalized fashion. Allows categorization and keyword search. There is no denormalization or calculated data. Example usage: customer accesses FAQ for 'Payment not processed', gets guided advice, reducing incoming support tickets. Key relationships: can be referenced from support tickets (for self-service deflection statistics), links only via reference IDs as required by normalized modeling guidelines. Special behaviors: supports category-tag filtering, allows soft update of content/visibility for compliance (e.g. hiding outdated answers).","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Uniquely identifies each FAQ entry."},"foreignFields":[],"plainFields":[{"name":"question","type":"string","description":"FAQ question - Implements requirement for FAQ knowledge base questions. Short, atomic, and searchable (used as main text for user lookup).","nullable":false},{"name":"answer","type":"string","description":"FAQ answer - Implements knowledge base content for most common inquiries. May contain rich/HTML content for effective guidance. Atomic, not calculated, and strictly normalized.","nullable":false},{"name":"category","type":"string","description":"FAQ category - Implements requirement for classification/tagging, enabling search and filtering over large FAQ databases. Examples: 'order', 'payment', 'product', 'account'. Strictly atomic and normalized.","nullable":false},{"name":"sort_order","type":"int","description":"Manual sort order for display - Implements the need for prioritized/ordered FAQ listing (e.g., order by popularity, admin-set priority). Atomic integer, not calculated.","nullable":false},{"name":"visible","type":"boolean","description":"Visibility flag - Implements soft hide/archive policy for outdated or admin hidden FAQs. If false, FAQ is hidden from customer view but still exists for audit/compliance records. Fully atomic, normalized.","nullable":false},{"name":"created_at","type":"datetime","description":"FAQ creation timestamp - For audit log compliance and historical analysis. Indicates when FAQ entry was created/published. Always required; never nullable per compliance tracing.","nullable":false},{"name":"updated_at","type":"datetime","description":"FAQ last updated timestamp - Maintains revision history compliance; updated on any change to the question or answer. Atomic, not calculated, strictly normalized.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["category"]},{"fieldNames":["sort_order"]},{"fieldNames":["visible"]}],"ginIndexes":[{"fieldName":"question"},{"fieldName":"answer"}]}]},{"filename":"schema-10-analytics.prisma","namespace":"Analytics","models":[{"name":"aimall_backend_analytics_dashboards","description":"[Analytics Dashboard] - This implements the requirement for centralized analytics dashboards as referenced in the technical architecture and analytics/monitoring requirements documents. This normalized entity represents configuration records for admin-customizable analytics dashboards (e.g., KPIs, fraud monitors). It ensures 3NF by only storing dashboard config dataâ€”not pre-aggregated or denormalized metric results. Example use: an admin creates a 'fraud monitoring' dashboard; access rights are managed externally. Supports audit linkage for change tracking via other tables.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for the analytics dashboard."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","description":"[Dashboard Code] - Unique symbolic identifier for this dashboard (e.g., 'sales-kpi-main'). Used in lookup and linking; ensures no aggregate types are mixed here. Example: Used by admin UI to load dashboard definition by code.","nullable":false},{"name":"title","type":"string","description":"[Dashboard Title] - Human-readable dashboard name for UI display (e.g., 'Sales Overview'). Atomic string for normalized structure. Example: Appears in dashboard selectors.","nullable":false},{"name":"description","type":"string","description":"[Dashboard Description] - Optional detailed explanation of dashboard purpose. Example: Used for admin UI tooltips/documentation; null allowed.","nullable":true},{"name":"config_json","type":"string","description":"[Dashboard Config JSON] - Serialized JSON (as string) storing dashboard widget/layout/metrics config. Only configuration is stored here, never calculated results. Example: '{\"widgets\":[{\"type\":\"chart\",\"metric\":\"orders_daily\"}]}'","nullable":true},{"name":"created_at","type":"datetime","description":"[Created At] - Creation timestamp. Used for sorting/audit; enforced at insert.","nullable":false},{"name":"updated_at","type":"datetime","description":"[Updated At] - Last modification timestamp for change tracking/audit trail.","nullable":false}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"aimall_backend_audit_logs","description":"[Audit Log Entity] - Implements the technical/compliance requirement for all key admin/user/system actions and system events. Normalized append-only entity supporting traceable, regulatory-compliant audit trails for the platform (e.g., admin actions, config changes). Each row represents a single event, consistent with 3NFâ€”no aggregates or summaries. Example usage: storing admin logins, permission changes, dashboard edits; deletion/updates forbidden. Relations to actors in otherComponents via actor_id foreign key. Supports full-text search on core event fields.","material":false,"primaryField":{"name":"id","type":"uuid","description":"Primary Key. Unique identifier for the audit log event."},"foreignFields":[{"name":"actor_id","type":"uuid","description":"[Actor Reference] - Foreign key referencing the administrator/user (from aimall_backend_administrators) responsible for the event. Key for audit traceability. Allows null for system/automated events. Maintains normalization by reference only, not denormalized actor info.","relation":{"name":"administrator","model":"aimall_backend_administrators","targetModel":"aimall_backend_administrators","field":"id"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"[Event Type] - Categorical string for the class of event ('LOGIN','PERMISSION_CHANGE','DASHBOARD_UPDATE', etc). Maintains 3NF by only storing atomic type.","nullable":false},{"name":"event_target","type":"string","description":"[Event Target] - Resource/entity impacted (e.g., dashboard code, configuration key, resource ID). 3NF by only storing atomic identifier, not summary/result.","nullable":true},{"name":"ip_address","type":"string","description":"[IP Address] - IP the event originated from; atomic string for auditing/admin compliance.","nullable":true},{"name":"outcome","type":"string","description":"[Event Outcome] - Result state of action (e.g., 'SUCCESS', 'FAILED', 'DENIED'). Only stores normalized atomic event outcome.","nullable":false},{"name":"detail_json","type":"string","description":"[Event Detail (JSON)] - Optional raw JSON string (text) giving extended context for the event; not pre-aggregated. E.g., '{\"previous_role\":\"user\",\"new_role\":\"admin\"}'. Null allowed for minimal records.","nullable":true},{"name":"created_at","type":"datetime","description":"[Event Timestamp] - When this log row was created; used for filtering/reporting. 3NF as atomic event record.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["event_type","created_at"]},{"fieldNames":["actor_id","created_at"]}],"ginIndexes":[{"fieldName":"event_type"},{"fieldName":"event_target"}]}]}]}
/// [Analytics Dashboard] - This implements the requirement for centralized analytics dashboards as referenced in the technical architecture and analytics/monitoring requirements documents. This normalized entity represents configuration records for admin-customizable analytics dashboards (e.g., KPIs, fraud monitors). It ensures 3NF by only storing dashboard config data—not pre-aggregated or denormalized metric results. Example use: an admin creates a 'fraud monitoring' dashboard; access rights are managed externally. Supports audit linkage for change tracking via other tables.
///
/// @namespace Analytics
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model aimall_backend_analytics_dashboards {
  //----
  // COLUMNS
  //----
  /// Primary Key. Unique identifier for the analytics dashboard.
  id String @id
  
  /// [Dashboard Code] - Unique symbolic identifier for this dashboard (e.g., 'sales-kpi-main'). Used in lookup and linking; ensures no aggregate types are mixed here. Example: Used by admin UI to load dashboard definition by code.
  code String
  
  /// [Dashboard Title] - Human-readable dashboard name for UI display (e.g., 'Sales Overview'). Atomic string for normalized structure. Example: Appears in dashboard selectors.
  title String
  
  /// [Dashboard Description] - Optional detailed explanation of dashboard purpose. Example: Used for admin UI tooltips/documentation; null allowed.
  description String?
  
  /// [Dashboard Config JSON] - Serialized JSON (as string) storing dashboard widget/layout/metrics config. Only configuration is stored here, never calculated results. Example: '{"widgets":[{"type":"chart","metric":"orders_daily"}]}'
  config_json String?
  
  /// [Created At] - Creation timestamp. Used for sorting/audit; enforced at insert.
  created_at DateTime
  
  /// [Updated At] - Last modification timestamp for change tracking/audit trail.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  @@unique([code])
  @@index([created_at])
  @@index([updated_at])
}

/// [Audit Log Entity] - Implements the technical/compliance requirement for all key admin/user/system actions and system events. Normalized append-only entity supporting traceable, regulatory-compliant audit trails for the platform (e.g., admin actions, config changes). Each row represents a single event, consistent with 3NF—no aggregates or summaries. Example usage: storing admin logins, permission changes, dashboard edits; deletion/updates forbidden. Relations to actors in otherComponents via actor_id foreign key. Supports full-text search on core event fields.
///
/// @namespace Analytics
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model aimall_backend_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key. Unique identifier for the audit log event.
  id String @id
  
  /// [Actor Reference] - Foreign key referencing the administrator/user (from aimall_backend_administrators) responsible for the event. Key for audit traceability. Allows null for system/automated events. Maintains normalization by reference only, not denormalized actor info.
  actor_id String?
  
  /// [Event Type] - Categorical string for the class of event ('LOGIN','PERMISSION_CHANGE','DASHBOARD_UPDATE', etc). Maintains 3NF by only storing atomic type.
  event_type String
  
  /// [Event Target] - Resource/entity impacted (e.g., dashboard code, configuration key, resource ID). 3NF by only storing atomic identifier, not summary/result.
  event_target String?
  
  /// [IP Address] - IP the event originated from; atomic string for auditing/admin compliance.
  ip_address String?
  
  /// [Event Outcome] - Result state of action (e.g., 'SUCCESS', 'FAILED', 'DENIED'). Only stores normalized atomic event outcome.
  outcome String
  
  /// [Event Detail (JSON)] - Optional raw JSON string (text) giving extended context for the event; not pre-aggregated. E.g., '{"previous_role":"user","new_role":"admin"}'. Null allowed for minimal records.
  detail_json String?
  
  /// [Event Timestamp] - When this log row was created; used for filtering/reporting. 3NF as atomic event record.
  created_at DateTime
  
  //----
  // RELATIONS
  //----
  administrator aimall_backend_administrators? @relation(fields: [actor_id], references: [id], onDelete: Cascade)
  
  @@index([event_type, created_at])
  @@index([actor_id, created_at])
}
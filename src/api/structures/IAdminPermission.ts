import { tags } from "typia";

/**
 * 관리자 RBAC 권한 한 개를 표현하는 메인 타입입니다.
 *
 * 이 타입은 'admin_permissions' Prisma 테이블에 정의된 모든 컬럼을 포함하며, 각 필드는 엄격히 atomic/유일하며,
 * 관리 기능 설계, 감사, 정책 설명에 적합하도록 코멘트 및 단락식 설명이 부여됩니다.
 *
 * 식별자, 권한 코드, 이름, 상세 설명, 내장 플래그, 생성/수정 시각을 모두 다룹니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAdminPermission = {
  /**
   * 고유 식별자(UUID).
   *
   * Prisma 스키마 admin_permissions.id와 1:1 매칭.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 권한 코드. 시스템 전체에서 유일해야 하며, RBAC 엔진에서 권한을 참조할 때 사용됩니다.
   *
   * 예: 'manage_users', 'order_create'.
   *
   * Prisma admin_permissions.code와 일치.
   */
  code: string;

  /**
   * 권한의 명칭. 관리 UI/문서 등에 표시되는 사용자 가독성 목적입니다.
   *
   * 예: '사용자 관리', '주문 생성'.
   *
   * Prisma admin_permissions.name 컬럼 참조.
   */
  name: string;

  /**
   * 권한의 상세 설명. 관리자가 권한을 쉽게 이해할 수 있도록 관리자 패널에 표시됩니다.
   *
   * 여러 문단으로 작성 가능. Prisma admin_permissions.description 문서 문구를 활용.
   */
  description?: string | null;

  /**
   * 시스템 기본 내장 권한 여부. true이면 시스템이 예약한/핵심 권한, false이면 관리자가 추가로 정의한 커스텀 권한.
   *
   * Prisma admin_permissions.is_builtin과 일치.
   */
  is_builtin: boolean;

  /**
   * 권한 정의 생성 시각 (RFC3339). 모든 변경 및 감사 기록의 기준.
   *
   * Prisma admin_permissions.created_at을 바로 반영.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * 이 권한의 마지막 수정 시각 (RFC3339). 실제 레코드 유지 및 감사 추적 목적으로 사용.
   *
   * Prisma admin_permissions.updated_at과 동등.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAdminPermission {
  /**
   * 관리자 권한(admin_permissions)의 목록, 검색, 페이징 요청을 위한 입력 데이터 구조입니다.
   *
   * 이 타입은 'admin_permissions' Prisma 테이블에서 고급 검색, 필터, 정렬, 페이지네이션을 지원하는 입력
   * 파라미터로 사용됩니다. 모든 필드는 atomic이며, 복잡한 필터나 정렬이 필요한 관리자/운영 대시보드에서 사용합니다.
   *
   * Prisma DB 테이블 및 타입코멘트를 참고하여 설계되었습니다.
   */
  export type IRequest = {
    /**
     * 검색 필터 객체입니다. admin 권한 코드, 이름, 기타 속성을 기준으로 고급 검색을 구성할 수 있습니다. Prisma
     * 스키마의 코멘트와 일치하도록 atomic 필드만 허용됩니다.
     *
     * 예시: { "code": "manage_users", "is_builtin": true }
     */
    filter?: {};

    /**
     * 정렬 항목 목록입니다. 예: ["created_at desc"] 등. 관리 UI, 분석 보드 및 감사 대시보드에서 관리
     * 사용자가 엔티티를 나열할 때 사용됩니다.
     *
     * Prisma 오브젝트 스키마의 created_at, code, name 등으로 정렬.
     */
    sort?: string[];

    /**
     * 페이지 번호 (기본값 1)
     *
     * 대량 쿼리 및 목록의 효율적인 스크롤을 지원하기 위함입니다.
     */
    page?: number & tags.Type<"int32">;

    /**
     * 페이지 당 결과 제한 (기본값 20)
     *
     * 대규모 목록의 버퍼 및 스크롤 지원.
     */
    limit?: number & tags.Type<"int32">;
  };

  /**
   * 신규 관리자 권한(permissions) 레코드 생성용 요청 Body 타입입니다.
   *
   * Prisma admin_permissions 스키마의 DDL과 요구사항 분석 코멘트를 상세히 참고하여 설계되었으며, RBAC
   * 확장/정책 추가용 생성과정에서 사용됩니다.
   *
   * 각 필드는 목적, 제약 및 업무 규칙 설명을 제공합니다.
   */
  export type ICreate = {
    /** 생성할 권한에 대한 유일 코드. 시스템 전체에서 유일해야 하며, admin_permissions.code 스키마와 일치. */
    code: string;

    /**
     * 신규 권한의 사용자 가독성 명칭. 관리자 UI 및 정책 설정 화면에서 노출.
     *
     * Prisma admin_permissions.name 컬럼 설명 참조.
     */
    name: string;

    /**
     * 권한의 상세 설명. 신규 생성 시 정책 목적, 사용 범위, 부여 예시 등을 포함하는 자유 서술형 코멘트. 여러 단락 가능.
     * Prisma admin_permissions.description 참고.
     */
    description?: string | null;

    /**
     * 시스템 기본 내장 권한이면 true, 직접 정의하는 경우 false. 대부분 신규 생성은 false.
     *
     * Prisma admin_permissions.is_builtin 필드 설명과 동등.
     */
    is_builtin: boolean;
  };

  /**
   * 기존 관리자 권한(permissions) 레코드의 업데이트(수정)용 입력 데이터 타입입니다.
   *
   * Prisma admin_permissions 테이블 구조와 업무 규칙을 엄격히 준수하여, atomic/코드/이름/내장 플래그 등만
   * 허용합니다. 레코드 수정은 감사 및 정책 추적을 위해 상세하게 기록되어야 함을 명시합니다.
   */
  export type IUpdate = {
    /**
     * 수정할 권한 코드. 시스템 유일 코드로, 일반적으로 변경은 초소수 상황만 허용함. Prisma
     * admin_permissions.code.
     */
    code?: string;

    /** 권한 명칭. 정책명, UI출력 등에 사용. Prisma admin_permissions.name column. */
    name?: string;

    /**
     * 권한 설명. 정책 목적/범위/예시를 여러 단락으로 작성, 자유 기재. Prisma
     * admin_permissions.description 설명 참고.
     */
    description?: string | null;

    /**
     * 시스템 내장 권한 여부. 기본적으로 custom 권한은 false로. Prisma
     * admin_permissions.is_builtin.
     */
    is_builtin?: boolean;
  };
}

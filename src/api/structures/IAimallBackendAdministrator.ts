import { tags } from "typia";

/**
 * Full administrator/operator account (with permission FK).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendAdministrator = {
  /** Administrator user PK */
  id: string & tags.Format<"uuid">;

  /** Assigned RBAC permission/role */
  permission_id: string & tags.Format<"uuid">;

  /** Contact/admin email (unique) */
  email: string;

  /** Display name for operator/admin */
  name: string;

  /** Account status (active/pending/suspended) */
  status: string;

  /** Account creation datetime */
  created_at: string & tags.Format<"date-time">;

  /** Last update time */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAimallBackendAdministrator {
  /** Summarized admin/operator account (for listing, assignments, audit). */
  export type ISummary = {
    /** Admin primary key */
    id: string & tags.Format<"uuid">;

    /** Admin email/UID */
    email: string;

    /** Display name */
    name: string;

    /** Permission role FK */
    permission_id: string & tags.Format<"uuid">;

    /** Admin account status (active, suspended, pending) */
    status: string;

    /** Created datetime */
    created_at: string & tags.Format<"date-time">;
  };

  /** Search/paging for administrator accounts */
  export type IRequest = {
    /** Filter by assigned permission/role */
    permission_id?: string & tags.Format<"uuid">;

    /** Filter by admin email */
    email?: string;

    /** Filter by status (active, suspended, pending) */
    status?: string;

    /** Fuzzy search on name */
    name?: string;

    /** Created after/at this time */
    created_at_gte?: string & tags.Format<"date-time">;

    /** Created before/at this time */
    created_at_lte?: string & tags.Format<"date-time">;

    /** Page number */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Page size */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1>;
  };

  /** DTO for creating administrator/operator account */
  export type ICreate = {
    /** FK to assigned admin permission/role */
    permission_id: string & tags.Format<"uuid">;

    /** Contact/admin email (unique) */
    email: string;

    /** Name for display in audit/admin UIs */
    name: string;

    /** Initial account status (active/pending/etc) */
    status: string;
  };

  /** DTO for updating administrator/operator records (all relevant fields) */
  export type IUpdate = {
    /** Update the administrator's permission/role */
    permission_id: string & tags.Format<"uuid">;

    /** Updatable admin email */
    email: string;

    /** Update display name */
    name: string;

    /** Update account status (active/suspended/pending) */
    status: string;

    /** Mutation timestamp for audit */
    updated_at: string & tags.Format<"date-time">;
  };
}

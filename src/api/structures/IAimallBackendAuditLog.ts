import { tags } from "typia";

/**
 * Analytics(분석) 시스템의 감사 로그(Audit Log) 단일 엔터티 레코드. 이 타입은 플랫폼 내 모든 주요 관리자/시스템/자동화
 * 이벤트, 데이터 변화, 설정 변경, 접근 기록 등을 위한 정규화된 감사 이력을 제공합니다. 모든 데이터는 Prisma schema의
 * aimall_backend_audit_logs 를 완전히 반영하며, 데이터는 변경 불가(append-only, no update) 정책에
 * 사용됩니다.
 *
 * - Event_type: 이벤트 종류 ('LOGIN', 'PERMISSION_CHANGE', 'DASHBOARD_UPDATE' 등).
 * - Actor_id: 이벤트를 수행한 담당 관리자(actors domain).
 * - Event_target: 대상 엔티티 식별자(대시보드/설정키/외부자원 등).
 * - Ip_address: 접속 IP (nullable).
 * - Outcome: 'SUCCESS', 'FAILED', 'DENIED' 등 결과.
 * - Detail_json: 상세 context(Json직렬) (nullable).
 * - Created_at: 타임스탬프(UTC 및 ISO 8601, 생성시점 결과값 DB 입력됨).
 *
 * 보안/컴플라이언스적 신뢰성과 이력감사, 표준 감사/로그분석 기능 구현의 핵심 타입입니다. 모든 하위/상위 시스템의 Audit/AOP,
 * Dashboard, Admin 등에서 공통 사용합니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendAuditLog = {
  /** 감사 로그의 UUID 기본키. 레코드 1:1 고유 식별자. */
  id: string & tags.Format<"uuid">;

  /** 이벤트를 실행/주도한 관리자(actors/administrators)의 아이디. 시스템 프로세스/익명/백엔드인 경우 null 허용. */
  actor_id?: (string & tags.Format<"uuid">) | null;

  /**
   * 이벤트 종류(동작 구분) - 예: 'LOGIN', 'PERMISSION_CHANGE', 'DASHBOARD_UPDATE', etc.
   * 주요 Audit 구분자. 쉼표 없이 대문자/언더스코어 조합.
   */
  event_type: string;

  /**
   * 감사 이벤트의 대상 리소스/식별자. 예: dashboard code, config key, resource id 등. 없을 경우
   * null.
   */
  event_target?: string | null;

  /** 이벤트 발생 당시 IP 주소. 서버/시스템훅/자동화에서는 null. */
  ip_address?: string | null;

  /**
   * 결과 상태('SUCCESS', 'FAILED', 'DENIED' 등). 각 이벤트 outcome의 업무측 의미가 반드시 audit
   * 규정에 명시되어야 함.
   */
  outcome: string;

  /**
   * 이벤트 상세 context/증빙/추가 메타데이터(직렬화된 json string, nullable, 없음=필드생략). 예:
   * {"previous_role":"user","new_role":"admin"}, 첨부 등.
   */
  detail_json?: string | null;

  /** 감사 로그 이벤트가 기록된 시각(UTC, ISO 8601 완전체 지정), 시스템 입력 */
  created_at: string & tags.Format<"date-time">;
};
export namespace IAimallBackendAuditLog {
  /**
   * 요청 바디 타입은 감사 로그 목록, 필터링, 또는 감사 로그 상세 검색과 같은 복잡한 분석/필터링을 지원합니다. 이 타입은
   * analytics(분석) 시스템 내에서 로그 이벤트를 검색 및 정렬할 때 사용되며, 모든 필드는 atomic이며 Prisma
   * 스키마의 실 데이터에만 해당됩니다. 관리자 대시보드, 컴플라이언스(Audit) 흐름, 대규모 시스템 내 감사/사고 대응/운영상
   * 필수적입니다.
   *
   * - Event_type(이벤트 종류), actor_id(사건 담당자), event_target(대상 시스템/리소스),
   *   outcome(성공/실패 등), ip_address 등 다양한 필터가 지원됩니다.
   * - 페이지네이션 및 정렬 지원: 페이징 필드(page, limit), 정렬(sort), 검색어(keyword), 날짜
   *   범위(start_date, end_date) 등 필요 필드는 모두 정의되어야 합니다.
   * - 보안/컴플라이언스: 접근 권한에 따라 일부 속성은 마스킹/미출력될 수 있음.
   *
   * 이 타입은 IAimallBackendAuditLog 쿼리를 위한 요청 DTO로, 정규화된 필드만을 통해 고급 감사 로그 쿼리 및
   * 배포 시스템에서 사용됩니다.
   */
  export type IRequest = {
    /** 요청하는 페이지 번호 (1부터 시작). */
    page: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** 한 페이지당 조회할 로그 개수. 예시: 20, 50, 100 등. 시스템 정책 따라 제한될 수 있음. */
    limit: number & tags.Type<"int32"> & tags.Minimum<1>;

    /**
     * 조회하고자 하는 이벤트(동작) 타입 또는 그 패턴. 예: 'LOGIN', 'PERMISSION_CHANGE',
     * 'DASHBOARD_UPDATE', ...
     */
    event_type?: string | null;

    /** 사건을 일으킨 관리자 또는 사용자(actors/administrators)의 UUID. 없으면 null. */
    actor_id?: (string & tags.Format<"uuid">) | null;

    /** 감사 대상 리소스 식별자(대시보드 코드, config key, external resource id 등) */
    event_target?: string | null;

    /** 결과 상태 (예: 'SUCCESS', 'FAILED', 'DENIED'). */
    outcome?: string | null;

    /** 사건 발생 당시의 IP 주소. */
    ip_address?: string | null;

    /** 검색/필터링: 조회 기간 시작일시(ISO 8601) */
    start_at?: (string & tags.Format<"date-time">) | null;

    /** 검색/필터링: 조회 기간 종료일시(ISO 8601) */
    end_at?: (string & tags.Format<"date-time">) | null;

    /** 이벤트 타입, 대상, 세부정보 등의 Full-Text 검색 키워드 */
    keyword?: string | null;

    /** 정렬 키(및 방향). 예: 최신순(created_at 내림차순) = '-created_at'. 지원키 외 값 금지. */
    sort?: "created_at" | "-created_at" | "event_type" | "-event_type" | null;
  };
}

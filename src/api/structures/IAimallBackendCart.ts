import { tags } from "typia";

/**
 * 장바구니 개별 엔티티(aimall_backend_carts 테이블). 고객/게스트 구분, 생성/수정일시, 장바구니
 * 아이템수(cart_items_count) 등 포함.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendCart = {
  /** 장바구니 UUID(기본키) */
  id: string & tags.Format<"uuid">;

  /** 소유 고객 UUID(회원일경우) */
  aimall_backend_customer_id?: string & tags.Format<"uuid">;

  /** 게스트/비회원용 세션토큰. 회원 장바구니일 경우 null */
  session_token?: string;

  /** 장바구니 생성일시 */
  created_at: string & tags.Format<"date-time">;

  /** 최종수정일시 */
  updated_at: string & tags.Format<"date-time">;

  /** 장바구니 내 아이템 수 */
  cart_items_count?: number & tags.Type<"int32">;
};
export namespace IAimallBackendCart {
  /**
   * 쇼핑몰 장바구니 리스트/검색 요청 DTO. aimall_backend_customer_id(회원),
   * session_token(비회원/게스트) 중 하나를 반드시 제공.
   */
  export type IRequest = {
    /** 장바구니 소유 고객 UUID(회원식별) */
    aimall_backend_customer_id?: string & tags.Format<"uuid">;

    /** (게스트/비회원장바구니 등) 세션/단말 토큰 문자열. 하나만 사용해야 유효 */
    session_token?: string;

    /** 생성기간 시작일(검색범위) */
    created_from?: string & tags.Format<"date-time">;

    /** 생성기간 종료일(검색범위) */
    created_to?: string & tags.Format<"date-time">;

    /** 수정기간 시작일 */
    updated_from?: string & tags.Format<"date-time">;

    /** 수정기간 종료일 */
    updated_to?: string & tags.Format<"date-time">;

    /** 페이지 번호(Page) */
    page?: number & tags.Type<"int32">;

    /** 페이지당 최대 갯수 */
    limit?: number & tags.Type<"int32">;
  };

  /**
   * 장바구니 생성(body) DTO. 고객식별(회원) 또는 비회원용 세션 둘 중 하나 필수. 생성/수정일 입력은 생략시 서버자동
   * now.
   */
  export type ICreate = {
    /** (회원장바구니용) 소유고객 UUID */
    aimall_backend_customer_id?: string & tags.Format<"uuid">;

    /** (비회원/게스트 장바구니 용) 세션토큰 */
    session_token?: string;

    /** 생성일시(생략가능) */
    created_at?: string & tags.Format<"date-time">;

    /** 수정일시(생략가능) */
    updated_at?: string & tags.Format<"date-time">;
  };

  /**
   * Update DTO for shopping cart entity. Modifiable fields are session_token
   * and updated_at only. Follows atomic update pattern aligned with
   * aimall_backend_carts schema. Ownership and uniqueness constraints must be
   * enforced at the application layer, not here.
   */
  export type IUpdate = {
    /**
     * Session or device token for anonymous carts; must be unique among all
     * carts if provided.
     *
     * Allows updating the association between a cart and a particular
     * device/session. Required to be either null (for account-tied cart) or
     * a string value. Used for merging guest carts into accounts or
     * transferring between devices.
     */
    session_token?: string | null;

    /**
     * Timestamp when the cart was last modified. Always required for sync
     * and audit trail. Should be updated to the current time when the cart
     * is updated. Follows ISO 8601 format.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}

import { tags } from "typia";

/**
 * Full customer entity record (admin/internal endpoints only). WARNING: Never
 * expose password_hash in user-facing responses; SEC rule.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendCustomer = {
  /** Customer primary key (UUID). */
  id: string & tags.Format<"uuid">;

  /** Registered primary email address (unique system-wide). */
  email: string;

  /** Main contact number (unique, used for SMS verification). */
  phone: string;

  /**
   * Customer's securely stored password hash (if not null). NEVER returned in
   * frontend responses; present only in admin audit or creation flows. (SEC
   * policy: never expose to customer in normal flows).
   */
  password_hash?: string | null;

  /**
   * Account status - see table description and business rules. E.g.,
   * 'active', 'suspended', 'pending', 'deleted'.
   */
  status: string;

  /** Registration date/time (ISO8601). */
  created_at: string & tags.Format<"date-time">;

  /** Last update time (ISO8601). */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAimallBackendCustomer {
  /**
   * Summary customer information. No PII fields beyond email/phone of listing
   * account. Does not return password hash or security tokens by SEC
   * requirements.
   */
  export type ISummary = {
    /** Unique customer ID (UUID, matches primary key in database). */
    id: string & tags.Format<"uuid">;

    /** Customer's primary email address. Required and unique. */
    email: string;

    /** Customer's main phone number. Must be valid, enforced by backend. */
    phone: string;

    /**
     * Current account state: e.g., 'active', 'pending', 'suspended',
     * 'deleted' etc. Usage per system rules.
     */
    status: string;

    /** Customer account creation date/time (ISO 8601 string). */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp of last profile/account update (ISO 8601 string). */
    updated_at: string & tags.Format<"date-time">;
  };

  /**
   * Search/filter and pagination DTO for customer listing endpoint.
   *
   * All fields are optional; null or omitted means no filter on relevant
   * property. Used to enable admin advanced find.
   */
  export type IRequest = {
    /**
     * Filter search to partial or full customer email. Null or omitted for
     * no filter.
     */
    email?: string | null;

    /** Filter search by customer phone. Null for no filter. */
    phone?: string | null;

    /**
     * Filter by account status (exact match), e.g., 'active', 'pending',
     * 'suspended', 'deleted'.
     */
    status?: string | null;

    /** Search: registered after this datetime (ISO 8601). */
    created_from?: (string & tags.Format<"date-time">) | null;

    /** Search: registered before this datetime (ISO 8601). */
    created_to?: (string & tags.Format<"date-time">) | null;

    /** Search: updated after this datetime. */
    updated_from?: (string & tags.Format<"date-time">) | null;

    /** Search: updated before this datetime. */
    updated_to?: (string & tags.Format<"date-time">) | null;

    /** Result page size, default 100. */
    limit?: (number & tags.Type<"int32">) | null;

    /** Page number, default 1. */
    page?: (number & tags.Type<"int32">) | null;
  };

  /**
   * DTO for customer registration. SEC: Only set password_hash in secure
   * backend flows. All required properties must be provided for successful
   * account creation. WARNING: Never accept/return sensitive/PII in customer
   * flows except as required for onboarding/audit.
   */
  export type ICreate = {
    /** New user's email (must be unique and valid). */
    email: string;

    /** Phone number (unique, used for SMS confirmation and support). */
    phone: string;

    /**
     * Hashed password (empty/null for external registration). Must be
     * securely hashed and validated by system.
     */
    password_hash?: string | null;

    /** Initial status: typically 'active', 'pending', or 'external'." */
    status: string;
  };

  /**
   * DTO for updating customer profile/account. All fields are optional and
   * nullable; actual updates depend on which are non-null. SEC: Only provide
   * password_hash value in admin-only flows, never to customers.
   */
  export type IUpdate = {
    /** Update email (null if no email change). Must stay unique system-wide. */
    email?: string | null;

    /** Update mobile phone number (unique). */
    phone?: string | null;

    /**
     * Update password hash (null if unchanged). Never returned by frontend
     * APIs.
     */
    password_hash?: string | null;

    /** Update user status if privileged (null for no change). */
    status?: string | null;
  };
}

import { tags } from "typia";

/**
 * Atomic FAQ entity as per aimall_backend_faqs schema. Contains all normalized
 * fields for knowledge base entries in multi-lingual, multi-category platforms.
 * Used for display, search, help center, and admin panels. All string fields
 * validated and subject to input sanitization for public contexts.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendFaq = {
  /**
   * UUID PK for the FAQ record. System-generated. Used in all update/delete
   * operations.
   */
  id: string & tags.Format<"uuid">;

  /**
   * FAQ entry question string. Should be a clear, searchable text
   * representing a common inquiry or support issue. Granular, atomic field as
   * per normalized schema.
   */
  question: string;

  /**
   * Full FAQ answer in text/HTML. Constrained to normalized string field in
   * DB. Used for help center, admin panel, or programmatic answer display.
   */
  answer: string;

  /**
   * Category tag for FAQ management. Refer to allowed taxonomy; supports
   * search/filter and segment-specific FAQ delivery.
   */
  category: string;

  /**
   * Manual sort index for result ordering (e.g., for FAQ front pages or admin
   * priority listing). Lower values sort first in UI.
   */
  sort_order: number & tags.Type<"int32">;

  /**
   * If true, FAQ entry is shown to guests/end-users. If false, only visible
   * in admin panels or hidden for archival purposes.
   */
  visible: boolean;

  /**
   * Creation timestamp for FAQ entry (ISO 8601 format). Always present. For
   * audit and admin traceability.
   */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for last meaningful update. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAimallBackendFaq {
  /**
   * Advanced query and filtering DTO for FAQ search. Accepts category and
   * visibility filters for precise FAQ retrieval in search, admin, or
   * analytics contexts.
   */
  export type IRequest = {
    /**
     * If specified, filter FAQs to this category only. Match must be exact
     * to available category tags. Used for filtered browsing or admin
     * category views.
     */
    category?: string | null;

    /**
     * Restrict search to visible FAQs only (true = customer/guest visible;
     * false = admin-only or hidden).
     */
    visible?: boolean | null;
  };

  /**
   * FAQ creation DTO. All core fields required except system-generated IDs
   * and timestamps. Used for staff/admin input and automated knowledge base
   * onboarding.
   */
  export type ICreate = {
    /**
     * FAQ entry question string. Must reflect common user query, normalized
     * for searchability. Required on creation.
     */
    question: string;

    /**
     * Full answer for the FAQ record. Accepts plain text or HTML, subject
     * to validation. Required on creation.
     */
    answer: string;

    /**
     * Category tag for new FAQ. Assignment per business taxonomy standards.
     * Required.
     */
    category: string;

    /**
     * Index for manual ordering of FAQ entries. Lower values show first.
     * Set by admin or system default.
     */
    sort_order: number & tags.Type<"int32">;

    /**
     * Controls user access: true=shown publicly, false=hidden (admin only).
     * Required.
     */
    visible: boolean;
  };

  /**
   * DTO for updating FAQ record. All fields optional; only supplied fields
   * are updated. Used by admin or knowledge management tools for content
   * maintenance, sorting, or archiving.
   */
  export type IUpdate = {
    /**
     * Editable FAQ question text. Optional; used when updating the
     * question.
     */
    question?: string;

    /** Editable FAQ answer content. Accepts text/HTML per application rules. */
    answer?: string;

    /** Editable FAQ category tag. */
    category?: string;

    /** Update sort index for display ordering. */
    sort_order?: number & tags.Type<"int32">;

    /** Update FAQ visibility in public contexts. */
    visible?: boolean;
  };
}

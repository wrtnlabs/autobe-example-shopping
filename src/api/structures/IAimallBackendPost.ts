import { tags } from "typia";

/**
 * A normalized community post record. Used for board, announcement, Q&A, etc.
 * Describes the post entity as it exists in the DB. May reference author,
 * attachments, comments, etc via related models. Follows atomic field rules -
 * every property directly maps to column in aimall_backend_posts.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendPost = {
  id: string & tags.Format<"uuid">;
  customer_id?: (string & tags.Format<"uuid">) | null;
  title: string;
  body: string;
  is_private: boolean;
  view_count: number & tags.Type<"int32">;
  created_at: string & tags.Format<"date-time">;
  updated_at: string & tags.Format<"date-time">;
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IAimallBackendPost {
  /**
   * Advanced search and paging filter structure for community post search.
   * Used by admin UI and moderation tools.
   */
  export type IRequest = {
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /** Filter by customer authoring post. */
    customer_id?: (string & tags.Format<"uuid">) | null;

    /** Partial-match search on title. */
    title?: string | null;

    /** Filter for privacy (public/private). */
    is_private?: boolean | null;

    /** Filter lower-bound by post creation. */
    created_at_from?: (string & tags.Format<"date-time">) | null;

    /** Filter upper-bound by post creation. */
    created_at_to?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * DTO for creating a new community post. Omits internal fields (view_count,
   * created_at, updated_at). May assign customer_id as author for internal
   * logic (not supplied by client in customer role).
   */
  export type ICreate = {
    customer_id?: (string & tags.Format<"uuid">) | null;
    title: string;
    body: string;
    is_private: boolean;
  };

  /**
   * DTO for updating a community post. Used by authors/admin to edit content
   * and privacy. Only mutable fields included.
   */
  export type IUpdate = {
    title?: string | null;
    body?: string | null;
    is_private?: boolean | null;
  };
}

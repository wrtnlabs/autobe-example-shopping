import { tags } from "typia";

/**
 * Full review entity. Maps to aimall_backend_reviews, representing a user's
 * detailed feedback, rating, and content.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendReview = {
  /** Primary key for the review record (schema: aimall_backend_reviews.id). */
  id: string & tags.Format<"uuid">;

  /** Reviewing customer's UUID (FK to customers). */
  customer_id: string & tags.Format<"uuid">;

  /** UUID of the product being reviewed. */
  product_id: string & tags.Format<"uuid">;

  /** Review title. Example: 'Super fast delivery!' */
  title: string;

  /** Review content (detailed). */
  body: string;

  /** Star rating 1–5. Must be validated at API. */
  rating: number & tags.Type<"int32">;

  /** Review creation timestamp (ISO8601). */
  created_at: string & tags.Format<"date-time">;

  /** When the review was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null for active. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IAimallBackendReview {
  /** Advanced search, filter, and paging criteria object for review queries. */
  export type IRequest = {
    /** Product UUID for filtering reviews. */
    product_id?: (string & tags.Format<"uuid">) | null;

    /** Reviewing customer's UUID for filtering own/others' reviews. */
    customer_id?: (string & tags.Format<"uuid">) | null;

    /** Minimum rating filter (1–5 recommended). */
    rating_min?: (number & tags.Type<"int32">) | null;

    /** Maximum rating filter. */
    rating_max?: (number & tags.Type<"int32">) | null;

    /** Filter review creation date from (include, ISO8601). */
    created_from?: (string & tags.Format<"date-time">) | null;

    /** Filter review creation date to (include, ISO8601). */
    created_to?: (string & tags.Format<"date-time">) | null;

    /** Keyword filter in review title. */
    title_keyword?: string | null;

    /** Keyword filter in review body. */
    body_keyword?: string | null;

    /** Max page size. */
    limit?: (number & tags.Type<"int32">) | null;

    /** Page number. */
    page?: (number & tags.Type<"int32">) | null;
  };

  /**
   * DTO for creating a new product review. Passed by customer during review
   * submission (ownership set via authentication).
   */
  export type ICreate = {
    /** UUID of the product being reviewed (FK, required). */
    product_id: string & tags.Format<"uuid">;

    /** Title/headline for the review. */
    title: string;

    /** Detailed review message. */
    body: string;

    /** Star rating 1–5, required. */
    rating: number & tags.Type<"int32">;
  };

  /** Review summary object for lists (excludes body/author/deletion). */
  export type ISummary = {
    /** Review unique identifier (summary context). */
    id: string & tags.Format<"uuid">;

    /** Product UUID being reviewed. */
    product_id: string & tags.Format<"uuid">;

    /** Short headline or summary text. */
    title: string;

    /** Review star rating, integer 1–5. */
    rating: number & tags.Type<"int32">;

    /** Creation time for sortable display. */
    created_at: string & tags.Format<"date-time">;
  };

  /**
   * 상품 후기(리뷰) 수정 요청 타입. 모든 필드는 선택적으로 전달되어야 하며, 최소 한 항목 이상 제공되어야 적법한 업데이트로
   * 간주함. Prisma aimall_backend_reviews 테이블의 title/body/rating에만 업데이트 허용,
   * reviewId, productId, customerId 등은 변경할 수 없습니다. 모든 입력은 필터링, 방침, 유효성 검사 후
   * 저장됨.
   */
  export type IUpdate = {
    /**
     * 리뷰 제목(수정시 가능/필수 아님), 예: '매우 빠른 배송!' 등 사용자 후기를 요약하는 헤드라인입니다. 반드시 리뷰의
     * 목적에 맞게 수정되어야 하며 줄임말 또는 부적절한 언어는 금지.
     */
    title?: string;

    /**
     * 리뷰 내용 본문. 자유롭게 후기/평가 내용을 수정 가능. 단, 부적절, 광고성, 욕설, 개인정보 노출 금지. 수정시
     * 작성/수정 취지, 신뢰성/공정성 확인 필요.
     */
    body?: string;

    /**
     * 별점(수정 가능): 1~5 등급, 정수. 저장 및 표시 정확성 필수. 유효 범위 밖 값, 연속성 왜곡, 악용(별점테러 등)
     * 방지 필요.
     */
    rating?: number & tags.Type<"int32">;
  };
}

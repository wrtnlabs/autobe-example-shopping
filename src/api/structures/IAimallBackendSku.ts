import { tags } from "typia";

/**
 * SKU master entity schema. Defines a specific purchasable stock keeping unit
 * for a product, capturing all options and variant metadata.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendSku = {
  /** Unique identifier for the SKU record. */
  id: string & tags.Format<"uuid">;

  /** Foreign key to master product for which SKU is defined. */
  product_id: string & tags.Format<"uuid">;

  /** Platform-wide unique SKU code that identifies this variant. */
  sku_code: string;
};
export namespace IAimallBackendSku {
  /**
   * Request query for searching/filtering SKU entities (stock keeping units)
   * for advanced pagination or filtered catalog browsing.
   */
  export type IRequest = {
    /**
     * ID of the product for which to filter SKUs. Required for most SKU
     * queries.
     */
    product_id?: (string & tags.Format<"uuid">) | null;

    /** Specific SKU code to search or partial string for search. Optional. */
    sku_code?: string | null;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null;

    /** Page size limit for pagination. */
    limit?: (number & tags.Type<"int32">) | null;
  };

  /**
   * Schema for SKU creation. Product-level binding and unique code are both
   * required. Used for onboarding new variants for sale.
   */
  export type ICreate = {
    /** ID of the parent product for which this SKU is being created. */
    product_id: string & tags.Format<"uuid">;

    /** Desired SKU code to assign. Must be unique platform-wide. */
    sku_code: string;
  };

  /** Schema for updating mutable fields of a SKU. Supports code correction. */
  export type IUpdate = {
    /**
     * New code to assign to this SKU. Optionalâ€”allows SKU code correction.
     * Must remain unique.
     */
    sku_code?: string;
  };
}

import { tags } from "typia";

/**
 * A single row describing a customer/seller/support service ticket: includes
 * workflow status, assignee, metadata and all details for compliance or
 * troubleshooting.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAimallBackendSupportTicket = {
  /** UUID PK for ticket row. */
  id: string & tags.Format<"uuid">;

  /** Ticket creator (customer/seller/admin) UUID. Foreign key. */
  requester_id: string & tags.Format<"uuid">;

  /** UUID for support/admin staff assigned to ticket, or null if unassigned. */
  assignee_admin_id?: (string & tags.Format<"uuid">) | null;

  /**
   * Short subject line for summary/queue/order reporting (e.g., 'Order not
   * delivered', 'Billing issue').
   */
  subject: string;

  /**
   * Full, detailed ticket description provided by user. Multiline permitted;
   * may include markup.
   */
  body: string;

  /** Ticket current state: e.g. 'open', 'pending', 'resolved', 'closed'. */
  status: string;

  /**
   * Business/triage priority; free-text or controlled list (e.g., 'high',
   * 'normal', 'urgent').
   */
  priority: string;

  /**
   * Ticket domain/category for auto-routing or analytics. E.g., 'payment',
   * 'delivery', 'product', 'support', 'account', etc.
   */
  category: string;

  /** Timestamp when ticket opened. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for last meaningful update of ticket. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAimallBackendSupportTicket {
  /**
   * Advanced filter/search struct for querying support tickets. Used in
   * dashboards, client queues, and audit functions.
   */
  export type IRequest = {
    /**
     * Filter by requester (customer/seller/admin user UUID), or null for
     * all.
     */
    requester_id?: (string & tags.Format<"uuid">) | null;

    /**
     * (Admin) filter to tickets assigned to specific admin (UUID), or null
     * for all.
     */
    assignee_admin_id?: (string & tags.Format<"uuid">) | null;

    /**
     * Partial match or exact string filter for subject line (customer
     * visible brief summary), or null.
     */
    subject?: string | null;

    /**
     * Current workflow state: filter to 'open', 'pending', 'resolved',
     * 'closed', or null for all.
     */
    status?: string | null;

    /**
     * Triage level for filtering (e.g., 'normal', 'high', 'urgent', or null
     * for all).
     */
    priority?: string | null;

    /**
     * Domain/topic filter: e.g. 'payment', 'product', 'delivery',
     * 'account', or null for all.
     */
    category?: string | null;

    /** ISO 8601 filter for created_at lower bound. */
    create_from?: (string & tags.Format<"date-time">) | null;

    /** ISO 8601 filter for created_at upper bound. */
    create_to?: (string & tags.Format<"date-time">) | null;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null;

    /** Result limit per page. */
    limit?: (number & tags.Type<"int32">) | null;
  };

  /**
   * DTO for creating a new support ticket in AIMall platform, compliant with
   * schema for admin/customer/seller use. Supports assignment to admin or
   * open pool.
   */
  export type ICreate = {
    /**
     * UUID of the creating user (customer/seller/admin) - foreign key
     * reference.
     */
    requester_id: string & tags.Format<"uuid">;

    /** Ticket title/summary - short string; required. */
    subject: string;

    /**
     * Main body/content of the ticket (free text, may include markup or
     * reproduction steps).
     */
    body: string;

    /**
     * Level or severity: e.g., 'normal', 'urgent', 'high', as permitted by
     * business rules.
     */
    priority: string;

    /**
     * Ticket category/domain - one of domain areas supported (e.g.,
     * 'delivery', 'payment', 'product', 'account', etc.).
     */
    category: string;

    /** Optionally, admin staff assigned to ticket at creation, or null. */
    assignee_admin_id?: (string & tags.Format<"uuid">) | null;
  };

  /**
   * Update/patch allowed on a support ticket. Maps to updatable fields of
   * aimall_backend_support_tickets schema. For use by customers (own
   * tickets), sellers (own tickets), administrators (for assignment/workflow
   * update). All transitions audited as per compliance best practices.
   */
  export type IUpdate = {
    /**
     * The subject line of the support ticket, summarizing the issue or
     * request.
     *
     * Editable by ticket owners, administrative staff, or support agents.
     * Refer to the aimall_backend_support_tickets schema for strict
     * normalization and typical business workflows. Changing the subject
     * triggers an audit event and may impact queue triage or rerouting.
     */
    subject: string;

    /**
     * The detailed body of the support ticket, providing all necessary
     * context, description, or reproduction steps for the support issue or
     * business inquiry.
     *
     * A high level of detail assists agents and reduces resolution time.
     * Only the ticket owner or authorized staff may modify this field.
     * Audited on update.
     */
    body: string;

    /**
     * Status flag for the support ticket, specifying workflow position:
     * e.g., 'open', 'pending', 'resolved', 'closed'.
     *
     * Allowed values: application-enforced, e.g., ["open", "pending",
     * "resolved", "closed"]. Status transitions are logged for compliance
     * and business SLAs.
     */
    status: string;

    /**
     * Priority of the support issue (e.g., 'low', 'normal', 'high',
     * 'urgent').
     *
     * Essential for agent queue triage; limited to enumerated values by
     * system configuration. Only updatable by ticket owners (any role) or
     * administrators.
     */
    priority: string;

    /**
     * Category code for the support ticket: e.g., 'account', 'order',
     * 'payment', 'technical', etc.
     *
     * Used for ticket routing, escalation, reporting and analytics.
     * Application logic will provide a list of valid values, refer to
     * documentation or admin panel. Modifiable by ticket owner and support
     * staff.
     */
    category: string;

    /**
     * (Optional) UUID of the administrator assigned to handle the ticket.
     *
     * May be updated by support managers or automatically by ticket
     * assignment logic. Nullable when unassigned.
     */
    assignee_admin_id?: (string & tags.Format<"uuid">) | null;
  };
}

import { tags } from "typia";

/**
 * AnalyticsDashboard 엔티티.
 *
 * AI 쇼핑몰 백엔드의 실시간, 커스터마이즈된 대시보드와 분석 도구를 담당하는 메인 엔터티입니다. 각 대시보드는 사용자, 판매자, 관리자
 * 또는 고유 오너 컨텍스트(예: owner_type, owner_id)와 매핑되어 있으며, Metric/KPI 시각화 구성을 JSON
 * 오브젝트로 보관합니다. 모든 필드는 프리즈마 analytics_dashboard 테이블의 주석을 기반으로 자세히 기술되어 있습니다.
 * 대시보드 생명주기(생성, 수정, 삭제)는 완전한 불변성, 감사로그, 복구를 지원합니다.
 *
 * RBAC, 감사(Audit) 및 확장성에 중점을 두며, 모든 관리 활동과 변화는 created_at, updated_at,
 * deleted_at 필드로 추적됩니다. 대시보드의 삭제는 soft-delete 방식으로, 데이터의 물리적 삭제 없이 deleted_at이
 * 세팅되어 관리됩니다.
 *
 * 관계: IMetricExport 등과 연결되어 Export 내역을 추적하고, dashboard의 owner는
 * user/admin/seller 등 여러 유형이 될 수 있습니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAnalyticsDashboard = {
  /**
   * 고유 대시보드 ID(UUID). 프리즈마 analytics_dashboard.id 컬럼에 해당하며, 모든 대시보드 식별의 기준이
   * 됩니다.
   */
  id: string & tags.Format<"uuid">;

  /** 화면 표시용 대시보드 이름. 분석, 관리 UI, 리포팅 및 사용자 정의 대시보드 식별에 사용됩니다. */
  name: string;

  /** 대시보드 설명. 목적, 활용 사례, 측정지표 등 상세 운영 정보를 관리할 때 활용합니다. null 가능. */
  description?: string | null;

  /**
   * 대시보드 설정 정보. 필드별 메트릭, 위젯, 시각화 유형과 역할 기반 Chart/Filter 등 모든 커스터마이즈 정보가 포함된
   * JSON 문자열입니다.
   */
  configuration: string;

  /** 대시보드 소유자 유형. 'user', 'admin', 'seller' 등으로 구분되어 다양한 대상을 지원합니다. */
  owner_type: string;

  /** 소유주(주체)의 ID. 타입에 따라 users/sellers/admins 등 다양한 테이블의 PK를 참조합니다. */
  owner_id: string & tags.Format<"uuid">;

  /** 생성 시각. 모든 대시보드의 생성 이력과 법적 감사 기준 정보를 제공합니다. */
  created_at: string & tags.Format<"date-time">;

  /** 최종 수정 시각. 대시보드 구성 변경/업데이트 시에 갱신되며, 최신 상태 추적에 필수적입니다. */
  updated_at: string & tags.Format<"date-time">;

  /** 소프트 삭제 시각. 실제 물리 삭제는 없으며, 값에 타임스탬프가 있으면 삭제 처리된 상태임을 나타냅니다. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IAnalyticsDashboard {
  /**
   * Search/list/filter query request for analytics_dashboard paged APIs.
   *
   * Fields enable paging, advanced dashboard search for user/admin analytics
   * workflow. All fields are directly mapped from analytics_dashboard Prisma
   * schema.
   */
  export type IRequest = {
    /**
     * Dashboard name to filter/search for in paginated query.
     *
     * References analytics_dashboard.name in Prisma. Enables searching
     * dashboards by title for admin/seller/user UX.
     */
    name?: string;

    /**
     * Filter by who owns the dashboard (user/admin/seller, etc.). Optional.
     * Derived from analytics_dashboard.owner_type in Prisma.
     */
    owner_type?: string;

    /** UUID referencing owner (user/admin/seller). */
    owner_id?: string & tags.Format<"uuid">;

    /** Results page for pagination, starting from 1. */
    page?: number & tags.Type<"int32">;

    /** Maximum dashboard records per page (pagination size). */
    limit?: number & tags.Type<"int32">;
  };

  /**
   * 새 AnalyticsDashboard(대시보드) 생성 요청 DTO.
   *
   * 프리즈마 analytics_dashboard 모델의 필수 필드에 기반, 신규 대시보드 등록 시 필요한 속성을 모두 포함. 모든
   * 데이터는 RBAC, 감사, 확장성에 맞춰 철저하게 검증됨. 생성 성공 시 전체 대시보드 객체 반환.
   *
   * 도메인 특화 필드(예: configuration, owner_type, owner_id)는 필수 입력값이며, 관리자는
   * owner_type에 따라 다양한 대상을 지정할 수 있습니다.
   */
  export type ICreate = {
    /** 생성할 대시보드의 이름입니다. */
    name: string;

    /** 대시보드 목적/설명. */
    description?: string | null;

    /** 대시보드 위젯/차트/필터 등 전체 구조 JSON 입니다. */
    configuration: string;

    /** 'user', 'admin', 'seller' 등 소유자 유형. */
    owner_type: string;

    /** Owner_type의 실제 주체(user/admin/seller 등)의 PK(UUID). */
    owner_id: string & tags.Format<"uuid">;
  };

  /**
   * 기존 AnalyticsDashboard(대시보드) 수정 요청 DTO.
   *
   * Analytics_dashboard 테이블의 변경 가능한 필드만 부분 혹은 전체 대체 방식으로 전송. PK(id)는 경로/파라미터로
   * 식별합니다. 주요 변경값: name, description, configuration. 오너 타입/ID 변경은 관리자 혹은 시스템
   * 내부 프로세스에서만 허용됩니다.
   *
   * 수정 시 updated_at 자동 갱신 및 철저한 감사 로그 기록 필요.
   */
  export type IUpdate = {
    /** 변경할 대시보드 이름. */
    name: string;

    /** 대시보드 기능/설명 등. */
    description?: string | null;

    /** 대시보드 메트릭, 위젯, 구조가 바뀔 때 사용하는 JSON 문자열. */
    configuration: string;

    /** (선택적) 소유자 유형 변경(일반적으로 불변, 특수 통제 상황만 수정). */
    owner_type?: string;

    /** (선택적) 오너 주체 변경. 일반적으로 불변이지만 특수 승인 상황에서만 사용. */
    owner_id?: string & tags.Format<"uuid">;
  };
}

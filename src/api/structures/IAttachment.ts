import { tags } from "typia";

/**
 * 첨부파일 엔터티 기본 정보입니다. 모든 파일 업로드/다운로드/감사/조회 API의 반환 레코드 타입입니다.
 *
 * 프리즈마 'attachments' 테이블 컬럼과 1:1 매칭되고, 소프트 딜리트와 버전 구분, 감사 로그 대응이 모두 내장된 구조입니다.
 * 파일 관리/백업/목록 제공/보안 정책 적용에 모두 활용됩니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAttachment = {
  /**
   * 고유 식별자(UUID) — 프리즈마 DB 'attachments.id'.
   *
   * 파일 개체를 시스템적으로 구분, 관리, 감사할 때 반드시 사용.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 파일명(원본) — 사용자가 업로드한 원본명.
   *
   * 중복 허용, 인벤토리/보관에는 URL과 분리.
   */
  filename: string;

  /**
   * 파일 확장자 — 'jpg', 'pdf' 등. 일부 파일에서는 null.
   *
   * 마임과 별개로 확장자 기반 분류를 지원함.
   */
  extension?: string | null;

  /**
   * 실제 파일 접근 경로(8000자 이내). CDN/Object Storage 등과 연동.
   *
   * 다운로드, 링크, 백업/마이그레이션 시 기준 경로로 사용.
   */
  url: string;

  /**
   * MIME 타입 — 이미지, 비디오, 텍스트 등 콘텐츠 분류.
   *
   * API/프론트 미디어 처리, 미리보기 용도 등에서 활용.
   */
  mime_type: string;

  /** 파일 크기(바이트 단위) — 쿼터, 정책, 감사, 보안 등에서 관리용. */
  size_bytes: number & tags.Type<"int32">;

  /**
   * 첨부파일 버전. 재업로드/변경 시 1 증가.
   *
   * 감사/버전 롤백/운영 이력 관리에 사용.
   */
  version: number & tags.Type<"int32">;

  /** 업로드 시각 (생성 타임스탬프). */
  created_at: string & tags.Format<"date-time">;

  /** 소프트 딜리트(논리 삭제) 타임스탬프. 파일 및 히스토리 감사/복구 목적. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IAttachment {
  /**
   * 첨부파일(attachments) 목록/검색에 사용하는 페이징 및 필터링 파라미터 타입.
   *
   * 프리즈마 'attachments' 테이블 컬럼별 고급 검색/필터기능 제공. 시스템 파일 관리/감사 기능에 필수적입니다.
   */
  export type IRequest = {
    /**
     * 파일명(원본). 첨부파일 엔터티 'attachments.filename'.
     *
     * 부분 문자열 검색, 패턴 매칭에 사용. 예시: 'product', 'banner' 등.
     */
    filename?: string;

    /**
     * MIME 타입. 검색/필터링(BLOB 유형별 조회)에 사용.
     *
     * 예: 'image/jpeg', 'application/pdf' 등.
     */
    mime_type?: string;

    /**
     * 업로드 시작일 기준 필터. 'attachments.created_at' >= from.
     *
     * 정보 보안/감사의 범위 검색에 필수.
     */
    created_at_from?: string & tags.Format<"date-time">;

    /**
     * 업로드 종료일 기준 필터. 'attachments.created_at' <= to.
     *
     * 기간별 통합검색, 다운로드 분석 등 활용.
     */
    created_at_to?: string & tags.Format<"date-time">;

    /**
     * 최소 파일 크기(바이트). 'attachments.size_bytes' >= min.
     *
     * 초과/대용량 필터링, 보안 규칙 필터로 활용.
     */
    size_bytes_min?: number & tags.Type<"int32">;

    /**
     * 최대 파일 크기(바이트). 'attachments.size_bytes' <= max.
     *
     * 업로드 용량 제한, 쿼터(Quota) 관리 시 사용.
     */
    size_bytes_max?: number & tags.Type<"int32">;

    /**
     * 정렬 필드 지정. 최신/파일명/용량순 등 선택.
     *
     * 프론트엔드의 특정 인벤토리 뷰, 관리자 패널에서 주로 사용.
     */
    order_by?: "created_at" | "filename" | "size_bytes";

    /** 정렬 방향. 오름차순/내림차순. */
    order_dir?: "asc" | "desc";

    /** 페이지 번호(1-base). */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** 페이지 당 데이터 수(기본값 100, 최대 지원 범위는 구현 정책). */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1>;
  };

  /**
   * 첨부파일 신규 등록(메타 등록) 시 사용되는 요청 바디 타입입니다. 업로드 시스템과 연동하여 파일 메타등록 시 스키마 상 모든
   * validation 요구사항을 충족해야 함.
   *
   * 모든 필드는 프리즈마 DB 'attachments' 테이블과 1:1로 매핑되어야 하며, 외부 스토리지/오브젝트와도 동기화가
   * 필요합니다. 업로드 내역 감사, 파일 복구, 관리 자동화 등 통합 실무 대응.
   */
  export type ICreate = {
    /**
     * 파일명(사용자 지정 업로드명 또는 자동 추출).
     *
     * 반드시 원본 그대로 DB에 저장해야 하며, 파일 인벤토리 조회에도 사용.
     */
    filename: string;

    /**
     * 파일 확장자 — 'jpg', 'pdf' 등. null 가능(확장자 없는 파일).
     *
     * 분류, 프리뷰, 외부 연동에 사용.
     */
    extension?: string | null;

    /**
     * 실제 파일 접근 경로(8000자 이하).
     *
     * S3/스토리지와 시스템 접근 주소/키와 완전히 일치해야 함. 다운로드/링크/보관 경로로 활요.
     */
    url: string;

    /**
     * 파일 MIME 타입(필수) — 'image/jpeg'와 같이 표기.
     *
     * 프론트, 오브젝트 분류, 인벤토리 표시 다목적.
     */
    mime_type: string;

    /**
     * 파일 크기(바이트, 필수).
     *
     * 대용량 파일 제한, 보안 및 쿼터관리, 정책 적용에 반드시 필요.
     */
    size_bytes: number & tags.Type<"int32">;

    /**
     * 첨부파일 버전 (시작값 1, 업로드마다 증가).
     *
     * 파일 덮어쓰기 혹은 버전 히스토리 관리에 사용. 최초 생성 시 1, 이후 업데이트에는 증가값 필요.
     */
    version: number & tags.Type<"int32">;
  };

  /**
   * 첨부파일(attachments) 엔터티의 속성 정보를 수정할 때 사용하는 타입입니다.
   *
   * 메타정보(파일명, 확장자, 경로, 마임타입, 크기, 버전) 수정목적으로만 사용되며, 실제 파일 바이너리 수정은 지원하지 않습니다.
   *
   * 감사/이력/변조방지/복원 지원 등 실무 운영/관리 최적화 API 설계에 부합합니다.
   */
  export type IUpdate = {
    /**
     * 수정 후의 파일명(변경 가능).
     *
     * 관리자/운영 등에서 파일명 오타, 기획변경 수정을 지원합니다.
     */
    filename?: string;

    /**
     * 확장자 수정(필요 시).
     *
     * 확장자를 잘못 지정한 경우, 혹은 누락 시 입력을 위한 용도.
     */
    extension?: string | null;

    /**
     * 실제 파일 접근 경로(URL) 변경 시.
     *
     * 스토리지 마이그레이션, CDN path 변경 등 인프라/서비스 운영 용.
     */
    url?: string;

    /** MIME 타입 수정(오류수정, 운영정책 반영). */
    mime_type?: string;

    /** 파일 크기 수정 (사후 검사/운영정책 반영 등 특수 케이스). */
    size_bytes?: number & tags.Type<"int32">;

    /** 버전 정보 갱신 (재업로드, 히스토리 승계). */
    version?: number & tags.Type<"int32">;
  };
}

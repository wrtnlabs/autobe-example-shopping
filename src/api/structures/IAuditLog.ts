import { tags } from "typia";

/**
 * Audit_logs 테이블에 매핑되는 핵심 감사 로그 엔티티 타입입니다.
 *
 * 이 타입은 시스템 내부 모든 주요 행위, 사용자 활동, RBAC/동의/계정/규정 감시 및 추적용으로 사용됩니다. 모든 속성은 원자적으로
 * 관리되고, GDPR/PCI/CCPA 규제 하 감사 및 법적 증거로 제출할 수 있는 상세추적 정보를 포함해야 합니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAuditLog = {
  /**
   * 고유 이벤트 식별자(UUID). Prisma DB의 'audit_logs' id 칼럼에 해당합니다. 시스템 및 사용자 관련 주요
   * 변경사항의 감사 추적을 위해 필요합니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 감사/감사 기록의 대상 사용자의 UUID. users.id의 FK입니다. 개인 행위, 시스템 조치 또는 RBAC 업데이트 등 모든
   * 감사 이벤트에 필수적입니다.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * 사건 유형(예: login, profile_update, rbac_assign, consent_withdraw 등). 모든 감사
   * 로그에는 고유 타입 코드가 있어야 하며, 요구사항 상 엄격한 원자성과 이벤트 유형별 필터/분석 사용을 위해 필요합니다.
   */
  event_type: string;

  /**
   * 행사 사유(예: 관리자 패널, 정책 위반, 감사 준수를 위한 설명). 옵셔널로 사용되며, 요구사항의 컴플라이언스/법적 보고 사유와
   * 연계합니다.
   */
  event_reason?: string | null;

  /**
   * 이벤트의 추가 메타데이터(예: JSON 구조, 변환 전후 값, 원인 객체 등). 모든 중요 사용자/시스템 이벤트의 상세 맥락 기입
   * 필요. 데이터 마스킹 필수 대상.
   */
  event_context?: string | null;

  /**
   * 행동 주체(시스템/관리자/사용자)의 UUID. 외부 행위(시스템 자동처리 등)인 경우 null 허용. 시스템 신뢰성과 감찰 체인
   * 보장.
   */
  actor_id?: (string & tags.Format<"uuid">) | null;

  /** 감사 이벤트가 기록된 시각(UTC, RFC 3339/ISO8601). 불변. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IAuditLog {
  /**
   * 감사 로그(IAuditLog) 검색/페이지네이션 요청 본문 DTO. audit_logs 테이블의 모든 atomic 감사 이력 검색을
   * 지원하며, 사용자/유형/시점/행위자 등 복합 필터+정렬+페이지 기능을 통합 제공.
   *
   * 규제 감사, 보안 조사, 정책 변경 이력 등 글로벌 감사 요건 및 테이블 컬럼 주석 준수.
   */
  export type IRequestSearch = {
    /** 감사 로그 대상 사용자. audit_logs.user_id 필드와 매핑. */
    user_id?: string & tags.Format<"uuid">;

    /**
     * 감사 이벤트 유형. 예: login, rbAssign, profile_update, consent_withdraw.
     * audit_logs.event_type 컬럼 참조.
     */
    event_type?: string;

    /** 행위자 ID(직접 행위자 또는 관리자 등). audit_logs.actor_id 참조. */
    actor_id?: string & tags.Format<"uuid">;

    /** 이후 생성된 로그만 필터. audit_logs.created_at 컬럼 기준. */
    created_after?: string & tags.Format<"date-time">;

    /** 이전 생성된 로그만 필터. audit_logs.created_at 컬럼 기준. */
    created_before?: string & tags.Format<"date-time">;

    /** 이벤트 요약/사유(키워드/부분일치 검색). audit_logs.event_reason. */
    event_reason?: string;

    /** 정렬 기준 필드. */
    sort_by?: "created_at" | "event_type";

    /** 정렬 방향. */
    sort_dir?: "asc" | "desc";

    /** 페이지 번호(1부터 시작). */
    page?: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** 페이지당 레코드 개수. 기본 20, 최대 100. */
    limit?: number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>;
  };

  /**
   * Audit_logs 테이블에 새 감사 이벤트를 등록할 때 사용하는 데이터 구조체.
   *
   * 원자적 감사기록 생성을 위한 입력 값으로, 모든 주요 감사 이벤트 등록 시 사용됩니다. 정책 상 사유나 맥락은 선택이나, 규제 준수
   * 및 사후조사 대비 상세 기록을 권장합니다.
   */
  export type ICreate = {
    /** 행위의 대상이 되는 사용자 UUID. 반드시 존재하는 users.id에 해당해야 합니다. */
    user_id: string & tags.Format<"uuid">;

    /**
     * 이벤트 유형 코드(예: login, rbac_assign, consent_grant 등). 서비스 정책 및 분석에 필수
     * 형식.
     */
    event_type: string;

    /** 행위에 대한 사유(선택). 관리 패널, 정책 위반, 사후 감사 등 특수 사유 기록용. */
    event_reason?: string | null;

    /** 이벤트의 상세 맥락. JSON이나 문자열 형태. 정보는 암호화/마스킹/추상화 가능해야 함. */
    event_context?: string | null;

    /** 행동 주체(타 사용자/관리자/시스템)의 UUID(선택). 자동화, 익명 처리도 허용. */
    actor_id?: (string & tags.Format<"uuid">) | null;
  };

  /**
   * 기존 감사 로그 레코드의 보완설명/사유/메타데이터를 업데이트하는 수정용 타입입니다.
   *
   * Prisma DB의 감사 기준에 따라, 원 정보(사용자, 타입, 생성시각 등)는 불변. 일부 보충/주석 필드(사유/설명)만 변경
   * 가능.
   */
  export type IUpdate = {
    /**
     * 기존 감사 이벤트의 사유 메모 교정, 추가 또는 보완 본문. GDPR/CCPA 등 감찰 체계상, 감사로그의 이 필드만
     * 한정적으로 수정 가능.
     */
    event_reason?: string | null;

    /**
     * 이벤트 상세 맥락(추가 설명 혹은 사후 보완). 구조 개선, 오류 교정, 후속 메모에 사용. 변경 사항은 모두 이력 관리
     * 대상.
     */
    event_context?: string | null;
  };

  /**
   * 감사 로그 soft delete(논리적 삭제)시 응답용 상태 타입.
   *
   * 삭제 처리 성공여부, 삭제 시각(성공시)에 대한 정보를 포함합니다.
   */
  export type ISoftDeleteResult = {
    /** 삭제/아카이브 처리 결과 성공 여부. */
    success: boolean;

    /** 실제 삭제 처리(soft delete) 시각. 성공 시 현재 시간(ISO8601). */
    deleted_at?: (string & tags.Format<"date-time">) | null;
  };
}

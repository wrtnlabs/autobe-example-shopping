import { tags } from "typia";

/**
 * Board_threads(보드 게시글-주제 단위) 상세 정보 구조체.
 *
 * ERD 및 boards ↔ board_threads 1:N 관계 구조 기반. 스레드 PK, 소속 보드, 제목 및 생성일, 삭제
 * 시점(Soft delete 지원) 필드 포함.
 *
 * Prisma 스키마 및 서비스 정책에 따라 각 필드 주석은 다단락/업무 상세를 충분히 포함함.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IBoardThread = {
  /**
   * 스레드(주제글)의 UUID. board_threads.id.
   *
   * 주제글/thread의 primary key, 상세뷰/댓글 등 조회 anchor.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 소속 보드의 UUID. board_threads.board_id.
   *
   * ERD 및 Prisma 참조.
   */
  board_id: string & tags.Format<"uuid">;

  /**
   * 스레드 제목(노출용). ERD의 board_threads.title.
   *
   * 주요 검색/목록/UX에서 표시됨.
   */
  title: string;

  /** 스레드 생성시간(ISO8601). board_threads.created_at. */
  created_at: string & tags.Format<"date-time">;

  /**
   * 스레드(주제글) 논리 삭제 시점. null이면 활성화 상태.
   *
   * Board_threads.deleted_at, ERD 기반. 감사, 롤백, 관리용.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IBoardThread {
  /**
   * 보드 스레드(board_threads) 목록 조회 요청 구조.
   *
   * ERD/Prisma의 board_threads 컬럼별 필터 파라미터 및 페이징 옵션만 정의.
   */
  export type IRequest = {
    /**
     * 검색 대상이 되는 보드의 UUID. board_threads.board_id 컬럼 참조.
     *
     * 특정 보드 내 스레드(주제/글타래)들만 분리 조회할 경우 필터로 지정.
     */
    board_id?: string & tags.Format<"uuid">;

    /**
     * 스레드(주제글) 제목 검색 키워드. board_threads.title과 연결됨.
     *
     * 검색/추천/목록 구현 등에서 활용.
     */
    title?: string;

    /** 페이지 번호. */
    page?: number & tags.Type<"int32">;

    /** 페이지당 가져올 최대 결과 수. */
    limit?: number & tags.Type<"int32">;
  };

  /**
   * Creation attributes for a new board thread.
   *
   * Implements the initial topic/post creation for discussion boards, Q&A, or
   * announcement spaces linked to a specified board. This type is mapped to
   * the create/POST endpoint for board threads in the EngagementBoards
   * subsystem. Strictly normalized: contains only atomic assignment fields;
   * does not include nested entity data.
   *
   * All fields must ensure consistency with the 'board_threads' table (see
   * Prisma schema), including required board linkage and title. Used by UI
   * and admin APIs for user- or system-generated threads. Each creation
   * operation is audit-logged and validated for permission and board
   * configuration.
   */
  export type ICreate = {
    /**
     * Unique ID of the board to which the thread will belong. References
     * the boards.id field. See ERD EngagementBoards > boards.
     */
    board_id: string & tags.Format<"uuid">;

    /**
     * Title of the thread.
     *
     * Represents the human-readable headline for this top-level discussion
     * topic or post, required for all threads.
     */
    title: string;
  };

  /**
   * Payload for updating attributes of an existing board thread.
   *
   * Supports in-place thread edit or migration to another board (for
   * corrections by moderators/admins), as mapped to PUT /boardThreads/{id}.
   * Only permitted for allowed actors by board configuration and RBAC.
   *
   * Accepts only atomic changes—title or board reference. All moves/changes
   * are audit-logged. Validation enforces existence and referential
   * integrity.
   */
  export type IUpdate = {
    /**
     * New title for the thread. Optional, only supplied if renaming is
     * intended.
     */
    title?: string;

    /**
     * Updated board ID; optional. Used if the thread is to be moved to
     * another board.
     */
    board_id?: string & tags.Format<"uuid">;
  };
}

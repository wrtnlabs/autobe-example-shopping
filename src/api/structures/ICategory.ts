import { tags } from "typia";

/**
 * 카테고리 엔터티의 메인 타입. 쇼핑몰의 제품 분류 체계(카테고리 트리)를 계층적으로 표현함.
 *
 * 이 타입은 프리즈마 DB의 'categories' 테이블 정의와 1:1로 매핑됩니다. 모든 속성은 3정규화(3NF) 기반으로 원자적이고,
 * 계층관계(parent_id)는 self-referencing으로 구현되었습니다. 주요 사용처는 카테고리 조회, 편집, 감사 로그,
 * SEO/검색 엔진 최적화 등입니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICategory = {
  /**
   * Primary key (UUID) — 고유 식별자.
   *
   * 프리즈마 DB 'categories.id'에 해당합니다. 카테고리는 각 엔터티의 부모 하위 구조를 표현하며, 이 값은 비즈니스 구조
   * 내에서 불변의 기준점 역할을 합니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 채널 ID (FK) — 채널(스토어프론트)와의 연결.
   *
   * 프리즈마 'categories.channel_id'에 해당합니다. 동일 채널 내에서 카테고리 트리가 관리되며, 각 채널 독립적 트리
   * 구조를 구성합니다.
   */
  channel_id: string & tags.Format<"uuid">;

  /**
   * 상위 카테고리 ID (FK/self 참조, nullable) — 루트면 null.
   *
   * 프리즈마 'categories.parent_id'. 루트가 아니면 상위 카테고리와 연결되어 계층적 관리가 가능합니다.
   */
  parent_id?: (string & tags.Format<"uuid">) | null;

  /**
   * 카테고리 코드 — 채널+상위 조합 내 유일 식별자.
   *
   * 프리즈마 'categories.code'. 인프라/통합 및 URL/검색/외부 연동 시 사용되는 심볼릭 코드입니다. 기본적으로
   * 비즈니스 하위 구조나 기획에서 관리하는 식별자입니다.
   */
  code: string;

  /**
   * 카테고리 표시명 — 고객/관리자 화면에 보여질 명칭.
   *
   * 프리즈마 'categories.name'. 다국어 지원(i18n)의 기준이 됩니다. PK에 전적으로 의존하는 표시라 트랜잭션 대상이
   * 아닙니다.
   */
  name: string;

  /**
   * 카테고리 설명(선택) — 검색, SEO, UX, 관리자 대상 메타 설명.
   *
   * 프리즈마 'categories.description'. 엘리먼트의 context, 마케팅, 검색 경험 개선 등 여러 용도로 사용
   * 가능합니다.
   */
  description?: string | null;

  /**
   * 표시/정렬 순서 — 동일 상위 카테고리 하위에서 노출 순서를 결정.
   *
   * 프리즈마 'categories.order'. 관리자 UI, 고객 검색 등 정렬 기준이 되는 원소입니다.
   */
  order: number & tags.Type<"int32">;

  /**
   * 생성 타임스탬프.
   *
   * 프리즈마 'categories.created_at' 컬럼입니다. 변경 불가.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * 마지막 변경 타임스탬프.
   *
   * 프리즈마 'categories.updated_at' 컬럼입니다.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * 소프트 딜리트 타임스탬프 — 실삭제가 아닌 논리 삭제 및 규제 대응용.
   *
   * 프리즈마 'categories.deleted_at'. 운영, 법무, 감사 등 다양한 규정 준수(Audit) 요구사항을 지원합니다.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace ICategory {
  /**
   * Request body for searching/listing Category entities, mapping directly to
   * PATCH /categories endpoint. Implements all filter, pagination, and sort
   * fields required for scalable browsing and administration of category
   * trees, per core system requirements. Schema tracks 'categories' table.
   */
  export type IRequest = {
    /** Page number for pagination support (optional). */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;

    /** Maximum records per page, for scalable queries (optional). */
    limit?: number &
      tags.Type<"int32"> &
      tags.Default<100> &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;

    /**
     * Filter: return categories for this Channel only. Prisma:
     * categories.channel_id
     */
    channel_id?: string & tags.Format<"uuid">;

    /** Optional filter by parent category for tree traversal/navigation. */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /** Exact code match for category. Prisma: categories.code */
    code?: string;

    /**
     * Keyword or fuzzy search by category name, with GIN/trgm enabled under
     * the hood.
     */
    name?: string;

    /**
     * Flag to include soft-deleted (deleted_at not null) categories in
     * results; for compliance/audit UI.
     */
    includeDeleted?: boolean;

    /**
     * Sort results by order, name, or created_at. Defaults: order
     * ascending, or as provided.
     */
    sortBy?: "order" | "name" | "created_at";

    /** Sort direction (asc/desc). Defaults to asc if ordering by order. */
    sortDir?: "asc" | "desc";
  };

  /**
   * 카테고리 신규 생성용 타입입니다. 소속 채널, (선택)상위, 코드(고유), 표시명은 필수 항목입니다. DB상의 unique
   * constraint(코드/채널/상위조합)에 맞는 입력 필요. 분류 체계/트리 구조 구축 시작점입니다.
   */
  export type ICreate = {
    /**
     * 카테고리가 소속된 채널의 UUID. (필수)
     *
     * 프리즈마 DB 'categories.channel_id'와 동일하며, 멀티스토어/멀티브랜드의 분리형 트리를 허용합니다.
     */
    channel_id: string & tags.Format<"uuid">;

    /**
     * 상위 카테고리 UUID (nullable) — 루트면 null.
     *
     * 프리즈마 'categories.parent_id' 필드에 해당. 계층적 분류관계 설정 시 필요합니다.
     */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 카테고리 코드 (중복 불가) — 영문 및 시스템 심볼릭 키.
     *
     * 프리즈마 'categories.code'. 고유/식별 목적, 검색/외부 연동용으로 사용.
     */
    code: string;

    /**
     * 표시명(다국어 가능) — API/UI 노출용.
     *
     * 프리즈마 'categories.name'. 고객, 관리자 모두가 보는 명칭입니다.
     */
    name: string;

    /**
     * 카테고리 설명 (선택)
     *
     * 프리즈마 'categories.description'. SEO/검색 및 관리용 메타를 담을 수 있습니다.
     */
    description?: string | null;

    /**
     * 노출/정렬 순서. (필수)
     *
     * 프리즈마 'categories.order'. 동등 레벨 내 정렬 기준입니다.
     */
    order: number & tags.Type<"int32">;
  };

  /**
   * 카테고리 엔터티의 수정/갱신 시 사용하는 타입입니다. 부분 수정(PUT/PATCH)에 모두 활용합니다. 중복/참조 무결성 위배,
   * 루프(circular reference)는 사전 검증해야 합니다. 소프트 딜리트 처리(deleted_at)는 별도 엔드포인트로
   * 취급합니다.
   */
  export type IUpdate = {
    /**
     * 상위 카테고리 UUID (nullable) — 루트일 경우 null로 갱신.
     *
     * 프리즈마 'categories.parent_id'. 트리 구조 변경, 계층관계 재조정 시 활용합니다.
     */
    parent_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 카테고리 코드 (중복 불가)
     *
     * 프리즈마 'categories.code'. 기존 코드 변경(실무 특이 케이스) 또는 중복 검사 목적 사용.
     */
    code?: string;

    /**
     * 표시명(다국어 처리)
     *
     * 프리즈마 'categories.name'. 카테고리 노출명 수정.
     */
    name?: string;

    /**
     * 설명(선택)
     *
     * 프리즈마 'categories.description'. SEO/UX/운영 목적 설명 수정.
     */
    description?: string | null;

    /**
     * 정렬/노출 우선순위
     *
     * 프리즈마 'categories.order'. 동등 계층 내 노출 순서 조정.
     */
    order?: number & tags.Type<"int32">;
  };
}

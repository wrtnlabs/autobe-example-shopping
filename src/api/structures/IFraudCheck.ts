import { tags } from "typia";

/**
 * AI 모델 기반 사기 탐지 평가(FraudCheck) 엔티티. 주문 등 타겟별 위험도 및 설명가능성, AI 분석 상세정보까지 모두 기술.
 *
 * Prisma fraud_check 스키마 전체 필드 매핑. 각 필드는 3NF로 정규화, 설명(근거, 감사세부)이 포함. 규제 컴플라이언스,
 * 운영대시보드, Fraud 분석 등 다양한 업무에 활용.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFraudCheck = {
  /** FraudCheck 레코드의 고유 식별자(UUID). */
  id: string & tags.Format<"uuid">;

  /** AI Provider 식별자(UUID). FraudCheck 모듈명을 구분. */
  ai_provider_id: string & tags.Format<"uuid">;

  /** AI 평가 대상 사용자(UUID). */
  user_id: string & tags.Format<"uuid">;

  /** 판별/리스크 평가 대상 타입(주문, 카트, 환불 등). */
  target_type: string;

  /** 대상 엔티티(UUID). (예: 주문ID, 환불ID, 카트ID) */
  target_id: string & tags.Format<"uuid">;

  /** 모델 산출 리스크 점수. 0.0~1.0 범위. */
  risk_score: number &
    tags.JsonSchemaPlugin<{
      format: "double";
    }>;

  /** 설명가능성 출력, AI 모델 설명, 사유, 로그, 결과근거 등 자유 텍스트. json 포함 가능. */
  explanation?: string;

  /** FraudCheck 실행 시각(UTC ISO8601). */
  checked_at: string & tags.Format<"date-time">;
};
export namespace IFraudCheck {
  /**
   * AI 기반 FraudCheck(사기/리스크 판별 결과) 목록 SEARCH 요청 타입입니다.
   *
   * FraudCheck 엔티티에서 사용자/타겟/AI/리스크 점수/기간별 조건, 페이지네이션 조회 등에 사용합니다. 각 필드는 복합적으로
   * 조합 가능합니다.
   */
  export type IRequest = {
    /**
     * 유저의 고유 UUID. AI/ML 기반 위험 평가 결과를 사용자의 맥락에서 필터링할 때 사용합니다.(Prisma:
     * fraud_check.user_id)
     */
    user_id?: string & tags.Format<"uuid">;

    /**
     * FraudCheck가 실행된 타겟 엔티티(예: order, cart, refund 등) 타입. (Prisma:
     * fraud_check.target_type) 타겟 범위별 필터에 사용.
     */
    target_type?: string;

    /**
     * 대상 엔티티의 UUID. 특정 주문/카트/환불 등에 종속된 FRAUD 이벤트 탐색에 사용. (Prisma:
     * fraud_check.target_id)
     */
    target_id?: string & tags.Format<"uuid">;

    /** AI 제공자의 UUID. 모델/모듈별 결과 필터링 적용. */
    ai_provider_id?: string & tags.Format<"uuid">;

    /**
     * 리스크 스코어(0~1).
     *
     * 범위(최소/최대)로 필터할 때 사용합니다. 예: 0.4~0.9.
     */
    risk_score?: number &
      tags.Minimum<0> &
      tags.Maximum<1> &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /** AI 이벤트의 시작 시각(UTC ISO8601). 기간 쿼리 시작~종료. */
    event_time_start?: string & tags.Format<"date-time">;

    /** AI 이벤트의 종료 시각(UTC ISO8601). 기간 쿼리 시작~종료. */
    event_time_end?: string & tags.Format<"date-time">;

    /** 페이지 번호(1-base). */
    page?: number & tags.Type<"int32">;

    /** 페이지 당 갯수. */
    limit?: number & tags.Type<"int32">;
  };

  /**
   * 신규 FraudCheck(사기 탐지/위험평가 기록) 생성 요청 타입. AI Provider, 대상유저, 타겟타입/ID, 점수,
   * 설명, 실행시각 등을 반드시 포함. 입력/검증 자동화 목적 포함.
   */
  export type ICreate = {
    /** AI Provider의 고유 UUID. FraudCheck 수행자/엔진 식별. */
    ai_provider_id: string & tags.Format<"uuid">;

    /** FraudCheck 대상 사용자의 UUID. */
    user_id: string & tags.Format<"uuid">;

    /** FraudCheck 대상 타입. 예: 주문(order), 환불(refund), 카트(cart) 등. */
    target_type: string;

    /** FraudCheck의 실행 대상 엔티티(UUID). */
    target_id: string & tags.Format<"uuid">;

    /** AI/ML 산출 리스크 점수. (0~1). */
    risk_score: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /** 설명가능성/해석(추론 배경, 결과해설 등 자유 입력) */
    explanation?: string;

    /** FraudCheck 실행 시각(UTC ISO8601) */
    checked_at: string & tags.Format<"date-time">;
  };

  /**
   * 기존 FraudCheck 레코드의 설명/확장(meta-data) 업데이트 타입. 성능 분석·컴플라이언스 질문 등 보충정보 입력
   * 용이며, 실제 점수 등은 수정 불가.
   */
  export type IUpdate = {
    /**
     * FraudCheck의 추가 설명, 모델 해석 혹은 결과 재분석의 근거를 추가해서 기록. 업데이트 시에만 전달, 제한적 수정.
     * 감사/컴플라이언스 재분석에 필수. (Prisma: fraud_check.explanation)
     */
    explanation?: string;
  };
}

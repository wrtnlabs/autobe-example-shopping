import { tags } from "typia";

/**
 * 결제 엔티티 1건. payments 테이블의 3NF 객체 그대로.
 *
 * 주요 필드: 주문, 사용자, 결제수단, 상태, 결제일시 등. 모든 중요 컬럼은 필드 설명과 함께 포함.
 *
 * 법적, 회계적, CS/분쟁 트레이스 및 BI 요구사항에 부합.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPayment = {
  /**
   * 고유 결제 레코드 식별자. payments 테이블 PK.
   *
   * Ex) 4b3f4d62-xxxx-yyyy-zzzz-b1c34e5ca3e2
   */
  id: string & tags.Format<"uuid">;

  /**
   * 해당 결제 건이 속한 주문 식별자. 'orders.id' 컬럼과 참조 관계.
   *
   * 실제 결제 대상 주문을 식별함.
   */
  order_id: string & tags.Format<"uuid">;

  /**
   * 결제를 진행한 사용자 ID. 'users.id' 참조.
   *
   * 개인별 결제 추이, 분석 등에 사용.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * 결제/판매 채널(스토어, 마켓 등). 'channels.id' 참조.
   *
   * 고객사, 국내외 마켓 등 멀티 채널 지원에 필요.
   */
  channel_id: string & tags.Format<"uuid">;

  /**
   * 결제 방식(카드, 무통장, 예치금, 기타 직접 결제 등).
   *
   * 예: 'card', 'deposit', 'bank_transfer'
   */
  payment_method: string;

  /**
   * PG사/외부결제 프로세서의 트랜잭션ID(있을 경우). DB상 Null 허용.
   *
   * CS 대응, 결제 이슈 추적 등에 필요.
   */
  external_transaction_id?: string;

  /**
   * 결제 처리 상태(성공, 실패, 환불, 취소 등 결제 플로우 상태 키).
   *
   * 'payments.status' 컬럼. 워크플로우 상태 관리, 정산/통계 기초.
   */
  status: string;

  /**
   * 결제 완료 일시(승인 등). 보통 결제가 실제로 체결된 시점이 기록됨.
   *
   * 성공건만 값 존재, 실패건은 null.
   */
  paid_at?: string & tags.Format<"date-time">;

  /** 결제 레코드 생성 시각. Prisma 'created_at' 스키마 대응. */
  created_at: string & tags.Format<"date-time">;

  /**
   * 결제 레코드의 최종 업데이트 시각.
   *
   * 불변성/감사 추적용
   */
  updated_at: string & tags.Format<"date-time">;

  /** 소프트삭제(실제 삭제는 아니나 미노출/폐기 처리됨). 업무감사용/법적보관 유지 등. */
  deleted_at?: string & tags.Format<"date-time">;
};
export namespace IPayment {
  /**
   * 결제 엔티티('payments' 테이블) 목록 조회, 필터, 페이징, 정렬 등 복합 조건 파라미터 집합.
   *
   * Prisma DB 스키마 payments 테이블의 컬럼과 1:1, 혹은 검색 UX의 표준 인자를 포함합니다.
   */
  export type IRequest = {
    /**
     * 검색/페이징용 페이지 번호입니다.
     *
     * Prisma schema 필드와 직접 연결은 없으나, 리스트 요청의 기본 표준입니다.
     */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /**
     * 페이지당 최대 레코드 개수를 지정합니다. 기본값은 100입니다.
     *
     * 대량 조회시 성능 최적화를 위해 사용합니다.
     */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /**
     * '{@link orders.id}'와 연결된 주문의 ID. 해당 주문의 결제만 조회합니다.
     *
     * 'payments' 테이블 'order_id' 컬럼 참조에 해당합니다.
     */
    order_id?: string & tags.Format<"uuid">;

    /**
     * '{@link users.id}'와 연결된 사용자의 ID. 지정 시 해당 사용자의 결제 내역만 조회.
     *
     * 'payments' 테이블의 'user_id'와 매핑됩니다.
     */
    user_id?: string & tags.Format<"uuid">;

    /**
     * '{@link channels.id}'와 연결된 판매 채널/스토어의 ID.
     *
     * 채널별 결제 내역 통계/필터링에 사용됩니다. 'payments.channel_id'와 연결됩니다.
     */
    channel_id?: string & tags.Format<"uuid">;

    /**
     * 결제 수단(카드, 예치금, 무통장 등).
     *
     * Prisma 'payments.payment_method'와 1:1 대응.
     */
    payment_method?: string;

    /**
     * 결제 상태(승인, 실패, 환불, 취소 등).
     *
     * 'payments.status' 컬럼에 해당합니다.
     */
    status?: string;

    /** 결제 완료 시점 하한(검색 범위 시작). 'payments.paid_at' 범위쿼리 하한에 사용합니다. */
    paid_at_start?: string & tags.Format<"date-time">;

    /** 결제 완료 시점 상한(검색 범위 끝). 'payments.paid_at' 범위쿼리 상한에 해당. */
    paid_at_end?: string & tags.Format<"date-time">;
  };

  /**
   * 신규 결제 레코드 등록 요청 페이로드.
   *
   * 필수 필드는 모두 명시되어야 하며, orders, users, channels 등 외부 참조 관계를 반드시 준수.
   *
   * 이 타입은 결제 생성 시 입력해야 하는 데이터 구조로, DB 무결성 및 업무 로직 일치성을 보장한다.
   */
  export type ICreate = {
    /**
     * 결제 대상 주문 ID. 필수.
     *
     * Orders.id 참조. 결제는 반드시 특정 주문에 귀속되어야 함.
     */
    order_id: string & tags.Format<"uuid">;

    /** 결제 담당 사용자. users.id 참조. 필수. */
    user_id: string & tags.Format<"uuid">;

    /** 판매/결제 채널. channels.id 참조. 필수. */
    channel_id: string & tags.Format<"uuid">;

    /** 결제수단/방법 구분자(필수). 예: 'card', 'deposit', 'bank_transfer' 등 */
    payment_method: string;
  };

  /**
   * 결제 레코드 업데이트 시 사용하는 페이로드. 수정 가능 필드만 입력(불변 PK, 생성시점 등은 불가).
   *
   * Prisma 스키마 명세의 'payments' 테이블과 1:1 매핑.
   *
   * 상태 변경, 결제수단 정정, 외부 트랜잭션ID 업데이트, 승인/취소 타임스탬프 직접 업데이트 등 업무에서 필요한 수정 작업을 지원.
   */
  export type IUpdate = {
    /**
     * 결제수단/방법 변경(수정 가능 시 적용).
     *
     * 예: 카드→예치금 등. 정책에 따라 일부 값만 수정 허용.
     */
    payment_method?: string;

    /** PG사/외부 트랜잭션ID. 업데이트, 정정, 보완 등 필요한 경우에 한해 업데이트 허용. */
    external_transaction_id?: string;

    /**
     * 결제 상태 값 변경(취소, 환불 등 특정 상황에서만 변경됨).
     *
     * 완료된 결제 등 일부 상태 전환만 허용.
     */
    status?: string;

    /** 결제 확정 시점 직접 입력이 필요한 경우(HOTFIX 등). */
    paid_at?: string & tags.Format<"date-time">;
  };
}

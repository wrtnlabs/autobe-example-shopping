import { tags } from "typia";

/**
 * Full product entity. Implements all atomic attributes from 'products' table
 * in Prisma, fulfilling requirements in Product Domain. Relation fields
 * (variants, bundles, SEO, etc.) referenced elsewhere. For details, see Product
 * Domain section of requirements, and audit/compliance needs. Includes soft
 * deletes, timestamps, and unique identity.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IProduct = {
  /**
   * Primary key (UUID) for product. Referenced from 'products' table. Unique
   * in system, never reused.
   *
   * First paragraph: Canonical identifier for products throughout the
   * platform. Used for search, relations to variants, SEO, media, etc.
   *
   * Second paragraph: Changing the product ID is impossible; it's immutable
   * after creation. All audit and snapshot flows depend on it.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The UUID of the channel/storefront to which the product belongs. Fulfills
   * Core System Concepts 2.1 multi-channel support. Reference to
   * 'products.channel_id'.
   */
  channel_id: string & tags.Format<"uuid">;

  /**
   * Unique business code per product, unique within a channel. Mapped to the
   * 'code' column in Prisma. This is used for integration, SEO, external
   * links, and duplicate prevention.
   *
   * Multiple paragraphs: Business code is vital for supply chain and
   * inventory systems, but not always customer-visible. Must pass uniqueness
   * validation enforced by the DB.
   */
  code: string;

  /**
   * Creation timestamp for the product (ISO8601 datetime). Fulfills
   * audit/compliance requirement. 'created_at' in Prisma.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp. Tracks changes for compliance, analytics, and
   * workflow triggers. 'updated_at' in Prisma.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete marker for audit/compliance. 'deleted_at' in Prisma. If null,
   * product is active.
   */
  deleted_at?: string & tags.Format<"date-time">;
};
export namespace IProduct {
  /**
   * Payload for creating a new product in 'products'. Allows only channel
   * reference and unique business code. Detailed attributes, variants, and
   * media managed elsewhere for strict normalization and compliance.
   */
  export type ICreate = {
    /**
     * Channel UUID to which this product belongs. See
     * 'products.channel_id'. Enforces multi-site/catalog support.
     */
    channel_id: string & tags.Format<"uuid">;

    /**
     * Business-unique product code (per channel). Enforced per 'products'
     * schema for uniqueness.
     */
    code: string;
  };

  /**
   * Update object for 'products'. Populates only allowed atomic fields (e.g.,
   * code). Channel assignment is typically immutable. Use for
   * business/integration corrections. See requirements for update flows and
   * audit/rollback rules.
   */
  export type IUpdate = {
    /**
     * Unique product code (per channel). Updatable if required for business
     * or inventory workflows.
     */
    code?: string;
  };
}

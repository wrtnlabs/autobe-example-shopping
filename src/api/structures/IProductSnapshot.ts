import { tags } from "typia";

/**
 * Atomic, immutable product version as required by compliance, rollback, and
 * audit trail business rules.
 *
 * Implements Product Domain requirement for append-only, snapshot-based product
 * versioning. Each instance records state at a point in time, giving the
 * platform robust rollbacks, auditability, and legal trace.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IProductSnapshot = {
  /**
   * Unique identifier of this product snapshot instance. Primary key in
   * product_snapshots; ensures immutable versioning.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the related product. Provides reference to parent product entity
   * whose state is recorded by this snapshot.
   */
  product_id: string & tags.Format<"uuid">;

  /**
   * UUID of the user/seller/admin who triggered the snapshot. Ties version
   * change to responsible actor for full audit trail.
   */
  actor_id?: string & tags.Format<"uuid">;

  /**
   * Title of the product as recorded in this version. Supports versioned
   * content and enables reconstruction of point-in-time product states for
   * display/audit purposes.
   */
  title: string;

  /**
   * Body/description as of this snapshot. Stores complete product
   * description, allowing for audit/history rollback in cases of content
   * update or compliance investigation.
   */
  description: string;

  /**
   * Flag indicating whether this snapshot was/should be the publicly
   * published version at the time. Fulfills version rollback and workflow
   * status requirements.
   */
  published: boolean;

  /**
   * Timestamp when this snapshot was created. Enables historical sequencing,
   * audit, and version validation.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IProductSnapshot {
  /**
   * Criteria for searching or paging through product snapshot records
   * (product_snapshots table).
   *
   * Corresponds to immutable product version history requirements in Product
   * Domain and Core System Concepts. Fulfills audit, rollback, and historical
   * view needs for compliance and analytics tracing.
   */
  export type IRequest = {
    /**
     * UUID of the target product for which to retrieve or search snapshots.
     * Implements the primary entity reference for product version
     * tracking.
     */
    product_id?: string & tags.Format<"uuid">;

    /**
     * Optional filter for the actor (user/seller/admin) who authored the
     * snapshot. Corresponds to audit tracking and version attribution in
     * version history.
     */
    actor_id?: string & tags.Format<"uuid">;

    /**
     * Optional filter to specify only published or unpublished snapshots.
     * Implements workflow filtering for historical or public/published
     * versions.
     */
    published?: boolean;

    /** Filter for snapshots created at or after this timestamp. */
    created_at_from?: string & tags.Format<"date-time">;

    /** Filter for snapshots created at or before this timestamp. */
    created_at_to?: string & tags.Format<"date-time">;

    /** Pagination: Current page number to retrieve. Optional, defaults to 1. */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;

    /**
     * Pagination: Maximum number of records per page. Optional, defaults to
     * 100.
     */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "uint32";
      }>;
  };

  /**
   * Creation request for new immutable product snapshot entry.
   *
   * All fields align with the atomic, normalized schema for product_snapshots
   * and comply with versioning/audit architecture for rollback and regulatory
   * control.
   */
  export type ICreate = {
    /** UUID of the product entity for which this snapshot is being created. */
    product_id: string & tags.Format<"uuid">;

    /**
     * UUID of the user/admin who initiates/owns this snapshot creation
     * event. Enables compliance tracking for version change.
     */
    actor_id?: string & tags.Format<"uuid">;

    /**
     * Versioned product title as to be saved for this snapshot. Enables
     * precise construction of point-in-time state.
     */
    title: string;

    /**
     * Description/content to persist in this version. Part of the immutable
     * snapshot and used for reconstructing content at rollback/events.
     */
    description: string;

    /**
     * Indicates if this snapshot should be considered
     * public/published/primary version at snapshot creation.
     */
    published: boolean;
  };

  /**
   * Permitted update structure for snapshot meta-fields only (e.g.,
   * publication/revocation). Never allows version data (content/title)
   * changes after creation.
   *
   * Required for limited workflow transitions in compliance-rich audit and
   * rollback architectures.
   */
  export type IUpdate = {
    /**
     * Optional update to the publication status of the snapshot.
     *
     * In compliance-centric platforms, only this flag (not immutable
     * content fields) may be changed after creation, to indicate if a
     * specific version is currently visible/public.
     */
    published?: boolean;
  };
}

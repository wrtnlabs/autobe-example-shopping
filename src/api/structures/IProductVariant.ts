import { tags } from "typia";

/**
 * Product variant record. Implements SKU/option logic from Product Variant
 * modeling in requirements. See 'product_variants' table in Prisma for field
 * mapping and audit fields. Used for product management/bundle/option setup in
 * the AI Shopping Mall backend.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IProductVariant = {
  /** Primary key for variant. Based on 'product_variants.id'. */
  id: string & tags.Format<"uuid">;

  /**
   * Parent product's UUID. Fulfills bundle/variant pattern. Mapped from
   * 'product_variants.product_id'.
   */
  product_id: string & tags.Format<"uuid">;

  /**
   * Business-unique variant code (unique per product). Used for SKU
   * management, ERP, bundles. Quoted from 'product_variants.code'.
   */
  code: string;

  /**
   * Variant creation timestamp. Fulfills normalization and audit
   * requirements. Mapped from 'product_variants.created_at'.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp. Compliance/audit marker. Mapped from
   * 'product_variants.updated_at'.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete marker. Used for audit, rollback, and compliance. Field is
   * 'deleted_at' in Prisma.
   */
  deleted_at?: string & tags.Format<"date-time">;
};
export namespace IProductVariant {
  /**
   * Request for searching/listing product variants. Maps to
   * 'product_variants' and implements filters for product, code, and creation
   * date. Used for catalog management/search and onboarding flows. Pagination
   * controls required.
   */
  export type IRequest = {
    /**
     * Optional filter to find variants by parent product ID. Direct
     * relation to 'product_variants.product_id'.
     */
    product_id?: string & tags.Format<"uuid">;

    /**
     * Optional search (exact or pattern) for variant code (SKU, per
     * product). Accelerator for admin/catalog UIs.
     */
    code?: string;

    /**
     * Search variants created after this datetime. For catalog
     * onboarding/audit interfaces.
     */
    created_from?: string & tags.Format<"date-time">;

    /**
     * Search variants created before this datetime. Pairs with
     * 'created_from' for date range search.
     */
    created_to?: string & tags.Format<"date-time">;

    /** Result page number (default 1). */
    page?: number &
      tags.Type<"int32"> &
      tags.Minimum<1> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Number of items per page (default 20/100, as per API spec). */
    limit?: number &
      tags.Type<"int32"> &
      tags.Minimum<1> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;
  };

  /**
   * Payload to create a new product variant. Atomic fields only, all deeper
   * normalization handled by bundle/option endpoints. See 'product_variants'
   * table in Prisma for precise rules.
   */
  export type ICreate = {
    /**
     * UUID of parent product for this variant. See
     * 'product_variants.product_id'.
     */
    product_id: string & tags.Format<"uuid">;

    /**
     * Variant business code (SKU or other unique identifier per product).
     * Referenced from 'product_variants.code'.
     */
    code: string;
  };

  /**
   * Update object for atomic product variant fields. Allows SKU or other
   * business code update. Used for catalog correction, onboarding,
   * compliance.
   */
  export type IUpdate = {
    /**
     * Business variant code (unique per product). See
     * 'product_variants.code'.
     */
    code?: string;
  };
}

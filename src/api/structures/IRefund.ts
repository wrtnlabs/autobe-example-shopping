import { tags } from "typia";

/**
 * 환불 엔터티 유형. 이 객체는 모든 환불 내역, 환불 상태 및 법적 트래킹을 담당합니다.
 *
 * - Prisma refunds 테이블 스키마 완전 반영.
 * - 각 필드는 환불 워크플로와 컴플라이언스/로그 목적에 정확히 매핑되어 있습니다.
 * - 각 필드는 여러 문단의 상세 설명이 필요하며, 필드 의미와 용례, 스키마 주석의 뉘앙스까지 포함했습니다.
 * - 모든 사업적 감사 및 데이터 익스포트, 법적 이슈 발생시 기반 데이터 타입입니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRefund = {
  /**
   * 고유 환불 식별자. 각 환불에 대한 UUID입니다.
   *
   * Prisma refunds.id에 해당합니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 환불을 받은 사용자의 UUID입니다. 환불 추적과 KYC/컴플라이언스용으로 반드시 필요합니다.
   *
   * Prisma refunds.user_id에 해당합니다.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * 환불 금액입니다. 소숫점 둘째 자리까지 지원하며 통화 단위는 currency 필드를 따릅니다.
   *
   * Prisma refunds.refund_amount에 해당합니다.
   */
  refund_amount: number &
    tags.JsonSchemaPlugin<{
      format: "double";
    }>;

  /**
   * 실제 환불 방법(예: 'deposit', 'card'). 환불 워크플로와 법적 로그에 반드시 필요합니다.
   *
   * Prisma refunds.refund_method에 해당합니다.
   */
  refund_method: string;

  /**
   * 환불 상태(예: 'pending', 'completed', 'failed'). 환불 처리 흐름에 따라 상태가 지정됩니다.
   *
   * Prisma refunds.status에 해당합니다.
   */
  status: string;

  /**
   * 법적/관할 구역 코드(예: 'KR', 'EU') 등, 법적 컴플라이언스 필요시 기재합니다.
   *
   * Prisma refunds.legal_region에 해당합니다.
   */
  legal_region?: string | null;

  /**
   * 환불 데이터 생성 시각(ISO8601).
   *
   * Prisma refunds.created_at에 해당합니다.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * 환불 데이터 마지막 변경 시각(ISO8601).
   *
   * Prisma refunds.updated_at에 해당합니다.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * 논리 삭제 시각입니다. 실제로 데이터가 소멸되진 않습니다. (소프트 삭제) 컴플라이언스 감사나 복원시 필요.
   *
   * Prisma refunds.deleted_at에 해당합니다.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IRefund {
  /**
   * Search and filter request payload for paginated refund listing (refunds
   * table).
   *
   * Used for admin dashboards, compliance audit, and user account refund
   * analytics. Supports fielded queries, date windows, regional compliance,
   * and proper UI/analytics pagination.
   */
  export type IRequest = {
    /**
     * UUID of the user associated with the refund. Filters results to a
     * specific user's refunds.
     *
     * Mapped from 'user_id' in refunds table. Core to compliance filtering,
     * analytics, or user dashboards.
     */
    user_id?: string & tags.Format<"uuid">;

    /**
     * Filter for refund status (pending, completed, failed, etc.).
     *
     * References 'status' in refunds table. Enables admin filtering or user
     * dashboard queries.
     */
    status?: string;

    /**
     * Payment/refunding method (deposit, card, etc.).
     *
     * Query filter mapped to 'refund_method'. Allows reporting/analytics by
     * channel.
     */
    refund_method?: string;

    /**
     * Legal or jurisdictional region for the refund, e.g. 'KR', 'US', 'EU'.
     *
     * Mapped to 'legal_region' column. Important for regulatory audit,
     * compliance, and reporting.
     */
    legal_region?: string;

    /**
     * Starting date threshold for creation filter.
     *
     * Applied to 'created_at' field; enables reporting or compliance time
     * window analytics.
     */
    created_from?: string & tags.Format<"date-time">;

    /**
     * End date threshold for creation time filter.
     *
     * Allows analytics, compliance, and reporting in a specific date range.
     */
    created_to?: string & tags.Format<"date-time">;

    /** Pagination page number for listing refunds. */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** Maximum number of refunds per page. */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;
  };

  /**
   * 환불 생성 API 요청용 DTO schema입니다.
   *
   * - 실제 환불 발생시 필요한 핵심 필드만 포함.
   * - Prisma refunds 테이블 신규 row 반드시 이 구조로 생성.
   * - 필드별 컴플라이언스 및 감사 적합성 상세 설명 필요.
   */
  export type ICreate = {
    /**
     * 환불을 요청하거나 받을 사용자의 UUID.
     *
     * Prisma refunds.user_id에 해당합니다.
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * 환불 금액(통화는 시스템에서 동적으로 관리).
     *
     * Prisma refunds.refund_amount에 해당합니다.
     */
    refund_amount: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /**
     * 환불 방식 예: 'card', 'deposit'.
     *
     * Prisma refunds.refund_method에 해당합니다.
     */
    refund_method: string;

    /**
     * 초기 상태. 예: 'pending', 'completed'.
     *
     * Prisma refunds.status에 해당합니다.
     */
    status: string;

    /**
     * 대한민국, EU 등 법적/지역 코드. 선택적.
     *
     * Prisma refunds.legal_region에 해당합니다.
     */
    legal_region?: string | null;
  };

  /**
   * 환불 엔터티 업데이트 요청 DTO.
   *
   * - 환불 금액, 상태 등 일부 필드만 선택적으로 수정합니다.
   * - 변경대상 필드만 포함, 불변 필드는 생략.
   * - 모든 수정사항은 감사를 위해 히스토리/로그가 생성됩니다.
   */
  export type IUpdate = {
    /** 수정할 환불 금액(필요시에만 지정). */
    refund_amount?: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /** 환불 방법 변경 등. 일반적으로 수정이 필요한 경우에만 사용. */
    refund_method?: string;

    /** 상태 변경(예: 'completed', 'failed'). */
    status?: string;

    /** 지역 코드 변경 등, 특별 컴플라이언스 사유 발생시에만 사용. */
    legal_region?: string | null;
  };
}

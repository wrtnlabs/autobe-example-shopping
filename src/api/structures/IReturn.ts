import { tags } from "typia";

/**
 * 반품(returns) 엔터티 스키마입니다.
 *
 * 이 타입은 AI 쇼핑몰 백엔드의 Cart & Order(5. Cart & Order) 요구사항 중 After-Sales(애프터세일즈),
 * 반품관리, 고객 권리행사 등의 핵심 기능을 지원합니다.
 *
 * - 모든 반품 기록은 불변 데이터이며, 요청, 진행, 완료, 거절 등에 대한 전체 변경/상태 정보가 유지되어야 합니다.
 * - 주문 아이템(order_item_id)과 반품 신청자(user_id)는 모두 외래키로 바인딩되어 실시간 감사, 법적 분쟁 대응, SLAs
 *   준수 확인이 용이합니다.
 * - 소프트 삭제로만 상태 관리하며, 규정상 삭제 행위는 감사 로그 및 정책 기반 관리만 허용됩니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IReturn = {
  /**
   * Unique identifier for this return record.
   *
   * 참고: returns.id (returns 테이블의 PK).
   *
   * AI 쇼핑몰 백엔드 시스템의 애프터세일즈(반품관리) 기능의 핵심 엔터티입니다.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 주문 아이템의 고유 식별자.
   *
   * Order_items.id에 대한 FK 참조, 어떤 주문 제품이 반품 이벤트의 대상인지 명확히 지정합니다.
   */
  order_item_id: string & tags.Format<"uuid">;

  /**
   * 이 반품을 생성한(요청한) 사용자 id.
   *
   * Users.id에 대한 FK. 반품의 소유주/신청인을 명확하게 지정함으로써, 고객 본인만이 자신의 반품 정보를 조회/수정할 수
   * 있도록 RBAC 정책 및 규정 준수를 보장합니다.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * 반품 신청 사유.
   *
   * 제휴사/기업, 고객센터, 고객 직접 입력 가능. 예: "제품 결함", "잘못 주문" 등. 규정상 자유 입력이나 통계/분류용 옵션
   * 활용 가능.
   */
  reason: string;

  /**
   * 반품 상태 코드 (예: requested, approved, rejected, completed 등). 워크플로우 진행 상황을
   * 정규화하여 저장합니다.
   */
  status: string;

  /**
   * 고객/사용자가 반품을 처음 요청한 시점의 UTC ISO 타임스탬프.
   *
   * 불변 필드이며, 추후 감사, 롤백, SLA 산정 등에 사용됨.
   */
  requested_at: string & tags.Format<"date-time">;

  /**
   * 반품이 완료되었을 때(환불, 수거 등) 시스템에 의해 기록되는 UTC ISO 타임스탬프.
   *
   * 예: after-sales 프로세스 종료 시 설정됨. null인 경우 아직 미완료.
   *
   * 반품 절차의 SLA 준수 여부를 확인하는 법적 근거로 활용됨.
   */
  completed_at?: (string & tags.Format<"date-time">) | null;

  /**
   * 레코드 생성시각.
   *
   * DB 자동 생성. 시스템, BI, 정책관리에 활용.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * 레코드 최종 수정시각.
   *
   * 업데이트 트리거나 상태 변경 시 변경됨.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * 소프트 삭제 시각. 실제 데이터 파괴가 아닌 논리 삭제(감사/감사조치 준수).
   *
   * 규정 상, 반품 기록의 삭제/은닉은 불가하며, 완전 삭제는 법적 요청 시 별도 보관됨.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IReturn {
  /**
   * 반품 엔티티 리스트 검색/페이징/필터용 표준 요청 파라미터 집합.
   *
   * Prisma returns 테이블 구조 및 업무 필드를 직접 반영.
   */
  export type IRequest = {
    /** 검색/페이징용 페이지 번호 */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** 페이지당 최대 레코드 개수 */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** 반품 등록/요청자(users.id) 기준 검색 */
    user_id?: string & tags.Format<"uuid">;

    /** 반품 대상 주문상품(order_items.id) 기준 필터 */
    order_item_id?: string & tags.Format<"uuid">;

    /** 반품 상태(요청, 승인, 반려, 완료 등) 기준 검색 */
    status?: string;

    /** 반품 신청일/시작 시점 */
    requested_at_start?: string & tags.Format<"date-time">;

    /** 반품 신청일/종료 시점 */
    requested_at_end?: string & tags.Format<"date-time">;
  };

  /**
   * 반품 등록(Insert) 요청에 사용되는 생성 페이로드 타입입니다.
   *
   * 업무 로직상 order_item_id 및 user_id의 RBAC 정책, reason에 대한 개방형 입력제어, 중복(이미 처리중인
   * 반품있음) 방지 등 백엔드 비즈니스 검증이 병렬적으로 발생해야 합니다.
   *
   * 완성된 기록에는 많은 메타데이터(created_at, status, ... 등)가 자동 추가되어 IReturn 본타입으로
   * 변환/저장됩니다.
   */
  export type ICreate = {
    /**
     * 반품 대상이 되는 주문 아이템의 ID. 필수.
     *
     * 반드시 order_items 테이블의 유효한 PK를 참조해야 하며, 이미 반품/교환 프로세스가 진행 중인 아이템에는 중복
     * 생성이 불가합니다.
     */
    order_item_id: string & tags.Format<"uuid">;

    /** 반품 신청자(고객)의 ID. 일반적으로 현재 세션의 인증 사용자를 대입합니다. */
    user_id: string & tags.Format<"uuid">;

    /**
     * 사용자가 직접 입력하거나, 프론트 옵션으로 선택 가능한 반품 사유 텍스트입니다. 예: '제품 불량', '기타(직접입력)'.
     * 워드 수 제한 등 UI 비즈니스 검증 필요.
     */
    reason: string;
  };

  /**
   * 반품(returns) 레코드의 변경/업데이트 요청 페이로드입니다.
   *
   * - 일반 사용자는 'reason'만 수정(신청 직후, 상태 미개시시) 가능하고, 상태(status)는 관리자/승인자/규정 절차 적합성
   *   검증 후에만 변경됩니다.
   * - Completed_at은 동적으로 관리(진행 상태에서 완료/철회 등 변경 시각 기록)됩니다.
   * - 규정상 업데이트도 전체 감사 로그에 별도로 저장되며, 속성 제한이 존재합니다.
   */
  export type IUpdate = {
    /** 수정된 반품 사유(변경사항 기록 목적). 제한조건: status가 처리 전(requested) 상태에서만 변경 가능. */
    reason?: string;

    /**
     * 상태 워크플로우 제어(예: approved, rejected, completed, cancelled, pending 등).
     * 단, 승인/거절 등 특별 처리(관리자)에 한함.
     */
    status?: string;

    /** 반품 완료 시각. 관리자인 경우에만 명시적으로 기록합니다. */
    completed_at?: (string & tags.Format<"date-time">) | null;
  };
}

import { tags } from "typia";

/**
 * SellerVerification 객체는 판매자의 각 컴플라이언스 및 온보딩 인증/승인 단계를 나타냅니다.
 *
 * Seller_verifications 테이블(Prisma) 기반으로 하며, AI 쇼핑몰 백엔드의 셀러 워크플로우
 * 준수(traceability), 상태 표기, 관계 사양을 충족합니다.
 *
 * 1. 각 row는 atomic하게 한 인증 step (e.g. KYC, 사업자등록증, 계좌, 세무 등) 단일 기록입니다.
 * 2. Seller와 1:N 관계로 연결되며, 여러 인증 단계를 별도 행으로 관리—동일 셀러에 대해 여러 verification row가 있을 수
 *    있습니다.
 * 3. Outcome, reference_id, requested/completed_at 등 필드는 비즈니스상의 증빙, 법적 감사, 온보딩/거절
 *    사유 추적이 모두 가능합니다.
 * 4. 소프트 삭제 및 업데이트 이력, 실시간 진행상태 등을 반영하며, 오직 atomic record로만 운영됩니다.
 *
 * 조직 내 인증 모듈, 운영감사, 판매자 상태대시보드를 비롯하여 외부 KYC API, 분쟁대응, 상벌점 시스템, 셀러 지원팀 업무의 원천
 * 데이터로 활용됩니다.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ISellerVerification = {
  /**
   * 고유 식별자(Primary Key). seller_verifications의 식별자. 주로 시스템 내부참조 및 API 결과/요청에
   * 사용.
   *
   * Prisma 주석: id String @id @db.Uuid
   */
  id: string & tags.Format<"uuid">;

  /**
   * 해당 인증의 주체인 셀러의 ID, sellers.id 정규화 및 관계 참조. 하나의 셀러가 여러 인증단계를 가질 수 있음.
   *
   * Prisma 주석: seller_id String @db.Uuid
   */
  seller_id: string & tags.Format<"uuid">;

  /**
   * 인증 유형(KYC, 사업자등록증, 계좌, 세금 등). 비즈니스/규제 정책 분류 코드. atomic, 미가공 문자열. 예:
   * 'kyc', 'tax', 'license', 'bank'
   *
   * Prisma 주석: type String
   */
  type: string;

  /**
   * 해당 인증 결과(승인/반려/진행중/실패 등). atomic; 상태변경 기록이 gracefule하게 쌓임.
   *
   * 예: 'approved', 'rejected', 'pending', null 등.
   *
   * Prisma 주석: outcome String?
   */
  outcome?: string | null;

  /**
   * 외부 인증기관/시스템 제공 레퍼런스ID(증빙코드 등). optional; 존재 시 외부 시스템 연동/로그 추적가능.
   *
   * Prisma 주석: reference_id String?
   */
  reference_id?: string | null;

  /**
   * 해당 인증 요청 시각. 생성 동시에 지정. 불변.
   *
   * Prisma 주석: requested_at DateTime @db.Timestamptz
   */
  requested_at: string & tags.Format<"date-time">;

  /**
   * 인증 완료 시각. 인증 실패/반려 시에도 set. 최종상태가 된 순간의 timestamp. null이면 아직 진행중.
   *
   * Prisma 주석: completed_at DateTime? @db.Timestamptz
   */
  completed_at?: (string & tags.Format<"date-time">) | null;

  /**
   * 레코드 생성 시각(감사/로그 목적).
   *
   * Prisma 주석: created_at DateTime @db.Timestamptz
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace ISellerVerification {
  /**
   * 판매자 검증(workflow 결과 및 요청) 리스트/검색용 패치 쿼리 스트럭쳐.
   *
   * 검증 유형, 상태, 요청 기간, 페이지네이션 등 모든 요청 사양이 Prisma 스키마 및 온보딩 워크플로우 요구와 일치.
   */
  export type IRequest = {
    /** 판매자 UUID. 해당 판매자 검증 내역만 조회. */
    seller_id?: (string & tags.Format<"uuid">) | null;

    /** 검증유형(kyc, business_license 등). */
    type?: string | null;

    /** 요청 상태값(pending, approved, rejected 등). */
    outcome?: string | null;

    /** 검증 요청일 기간 시작. */
    requested_at_from?: (string & tags.Format<"date-time">) | null;

    /** 검증 요청일 기간 종료. */
    requested_at_to?: (string & tags.Format<"date-time">) | null;

    /** 페이지 번호. 기본값 1. */
    page?: number &
      tags.Type<"int32"> &
      tags.Default<1> &
      tags.Minimum<1> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** 페이지 당 결과수. */
    limit?: number &
      tags.Type<"int32"> &
      tags.Default<20> &
      tags.Minimum<1> &
      tags.Maximum<200> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;
  };

  /**
   * 판매자 인증(verification) 신규 등록 요청 DTO
   *
   * Seller_verifications 테이블 신규 행 생성에 사용, 3NF 준수. 이 DTO로 생성 시 outcome,
   * reference_id 등은 optional로 상태에 따라 추후 업데이트 가능합니다. 입력자는 적합한 인증 유형 및
   * seller_id 지정 필요.
   *
   * 일반적으로 셀러 온보딩, KYC 제출/인증, 관리자 강제 인증 등 다양한 워크플로우에서 호출합니다.
   *
   * Prisma DB 생성 규칙에 따라 required 필드만 정의되어 있습니다.
   */
  export type ICreate = {
    /**
     * 해당 인증이 속하는 seller의 고유 ID(필수). sellers.id 참조。
     *
     * Prisma 주석: seller_id String @db.Uuid
     */
    seller_id: string & tags.Format<"uuid">;

    /**
     * 인증 유형(e.g., 'kyc', 'tax', 'license', 'bank') 비즈니스 분류. 필수. atomic.
     *
     * Prisma 주석: type String
     */
    type: string;

    /**
     * 외부 인증기관/시스템 제공 referenceID. API 연동/감사용.
     *
     * Prisma 주석: reference_id String?
     */
    reference_id?: string | null;
  };

  /**
   * 판매자 인증 항목 정보 수정/결과 변경 DTO
   *
   * Seller_verifications 엔티티의 업데이트에 사용. 승인/반려/진행상태/참고번호 등의 상태성 속성 및 참조 필드
   * 업데이트 용. 원본 인증 타입(type) 및 seller_id 등 핵심키 필드는 불변.
   *
   * 행정, 운영, 워크플로우 자동화 등에서 결과 반영 시 사용합니다.
   *
   * Prisma 및 비즈니스 규칙상 outcome, completed_at, reference_id 등 일부 필드만 학정 수정 가능.
   */
  export type IUpdate = {
    /**
     * 업데이트될 인증 결과 상태. 예: 'approved', 'rejected', 'pending', null 기존 값이 바뀌는
     * 경우만 입력.
     *
     * Prisma 주석: outcome String?
     */
    outcome?: string | null;

    /**
     * 외부 레퍼런스(변경/갱신에만 명시). 블록체인/외부 연동 결과값 등.
     *
     * Prisma 주석: reference_id String?
     */
    reference_id?: string | null;

    /**
     * 인증 완료 시각 수정 (성공, 실패, 수동완료 등). null의 경우 미완료.
     *
     * Prisma 주석: completed_at DateTime? @db.Timestamptz
     */
    completed_at?: (string & tags.Format<"date-time">) | null;
  };

  /**
   * 판매자 인증 항목의 삭제(소프트 삭제) 결과 반환 DTO
   *
   * 실제 데이터 물리삭제 대신 deleted_at (내부) 등을 갱신하며, API 결과로 삭제 시점을 보냅니다.
   *
   * 프론트엔드에서는 삭제 성공 여부와 언제 삭제되었는지 확인할 때 이 구조를 참고함.
   */
  export type ISoftDeleteResult = {
    /** 삭제된(숨긴) 인증 레코드의 ID */
    id: string & tags.Format<"uuid">;

    /** 삭제된 시각(ISO8601, KST) */
    deleted_at: string & tags.Format<"date-time">;

    /** 작업 결과 상태(success/이미 삭제됨) */
    status: "success" | "already_deleted";

    /** Human-readable 설명 및 결과 메시지. 예시: '정상적으로 삭제되었습니다.' */
    message?: string;
  };
}

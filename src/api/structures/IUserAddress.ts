import { tags } from "typia";

/**
 * 사용자 주소(배송, 청구, 픽업 등) 개체입니다.
 *
 * User_addresses 테이블의 모든 컬럼을 포함하며, 각 필드 주석은 실제 DB의 요구 조건과 동일하게 반영되어 있습니다. 주소는
 * 대표/서브 여부, 암호화 연락처, 국가코드, 상세주소, 우편번호 등을 명확히 표기합니다. Soft delete(삭제)시
 * deleted_at이 추가됨.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IUserAddress = {
  /** User_addresses 테이블의 PK. 주소(book) 각 레코드의 고유 식별자. */
  id: string & tags.Format<"uuid">;

  /** 이 주소의 소유자 사용자 ID(users.id 참조). */
  user_id: string & tags.Format<"uuid">;

  /** 주소 유형. 예: shipping(배송), billing(청구), pickup(픽업), custom 등. */
  type: string;

  /** 수취인 이름. 배송, 청구 시 표기명. */
  recipient_name: string;

  /** 수취인 연락처(암호화). 알림/배송 연락에 활용. 미입력 허용. */
  phone?: string | null;

  /** 국가 코드(ISO 3166-1 alpha-2). */
  country: string;

  /** 시/도/행정구역 등(필요 시). */
  state?: string | null;

  /** 도시명/행정구역. */
  city: string;

  /** 상세 주소(도로명+건물번호 등). */
  street: string;

  /** 우편번호/ZIP 코드. */
  postal_code: string;

  /** 대표 주소 플래그. 배송/청구 등 한 타입에 1개만 true. */
  primary: boolean;

  /** 주소 레코드 생성 시각. */
  created_at: string & tags.Format<"date-time">;

  /** 주소 레코드 마지막 수정 시각. */
  updated_at: string & tags.Format<"date-time">;

  /** 소프트 삭제(이력 유지) 처리 시각. NULL이면 정상 주소, 값 있으면 삭제됨. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IUserAddress {
  /**
   * 사용자 주소(배송/청구 등) 리스트/검색 요청을 위한 파라미터.
   *
   * User_addresses 테이블 기준으로, 소유자, 주소 유형, 국가/도시, 대표주소 여부, 페이징 파라미터를 활용해
   * 필터링합니다.
   */
  export type IRequest = {
    /**
     * 주소 검색 시 소유자 사용자의 고유 ID. (users.id).
     *
     * 지정 시 해당 사용자의 모든 주소를 검색/조회합니다. 미지정 시 RBAC 또는 전체 검색(관리자용)으로 동작.
     */
    user_id?: string & tags.Format<"uuid">;

    /** 주소 타입(배송지/청구지/픽업지/custom 등). 필터 기능 제공. */
    type?: string;

    /** 국가 코드(ISO 3166-1 alpha-2) 또는 국가별 필터. */
    country?: string;

    /** 도시명/지역명(부분 검색/일치 사용 가능). */
    city?: string;

    /** 주주소 플래그. true면 대표 주소만, false면 일반 주소만 검색. */
    primary?: boolean;

    /** 페이지 번호(1부터 시작). 검색 결과 페이지네이션 시 필수. */
    page?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;

    /** 한 페이지당 반환 레코드 수. 미지정 시 20~100 사이 기본값 적용. */
    limit?: number &
      tags.Type<"int32"> &
      tags.JsonSchemaPlugin<{
        format: "int32";
      }>;
  };

  /**
   * 신규 사용자 주소 레코드 생성 요청 타입입니다.
   *
   * User_addresses 테이블의 컬럼 제약 조건에 따라 필수 필드가 설정됐으며, 소유자, 주소 세부정보, 카테고리 분류,
   * 대표주소 여부 등을 분명하게 기술했습니다.
   */
  export type ICreate = {
    /** 주소 소유 사용자(users.id) - 신규 주소 생성 시 반드시 client/owner 세션과 일치해야 합니다. */
    user_id: string & tags.Format<"uuid">;

    /** 주소 카테고리(배송지/청구지/픽업지/custom 등). 필수. */
    type: string;

    /** 수취인 이름. 필수. */
    recipient_name: string;

    /** 수취인 연 락처(암호화). 미입력 허용. */
    phone?: string | null;

    /** 국가 코드(ISO 3166-1 alpha-2). 필수. */
    country: string;

    /** 행정구역/시/도(옵션). */
    state?: string | null;

    /** 도시/행정구역. 필수. */
    city: string;

    /** 상세 주소(도로명, 건물번호 등). 필수. */
    street: string;

    /** 우편번호. 필수. */
    postal_code: string;

    /** 대표 주소 여부. 한 사용자/주소유형마다 1개만 true 허용. */
    primary: boolean;
  };

  /**
   * 사용자 주소(user_addresses) 개체의 수정(부분 업데이트) 요청 타입입니다.
   *
   * Owner/user가 소유한 주소의 속성 중 변경 가능한 필드만 포함해서 전달하고, user_id/type은 불변(수정 불가)
   * 필드로 제거되었습니다.
   */
  export type IUpdate = {
    /** 수취인 이름 수정. */
    recipient_name?: string;

    /** 연락처(암호화), 변경/삭제 허용. */
    phone?: string | null;

    /** 행정구역/시/도 변경. */
    state?: string | null;

    /** 도시명 변경. */
    city?: string;

    /** 상세주소 변경. */
    street?: string;

    /** 우편번호 변경. */
    postal_code?: string;

    /** 대표주소 플래그 업데이트. */
    primary?: boolean;
  };
}

import { tags } from "typia";

/**
 * 유저별 잔액 정보 엔티티(user_balances)
 *
 * - 적립금, 예치금(입금/포인트) 등 비/현금성 단일화
 * - 각 통화·유형별 원자적/누적 금액(수식X, 외생 계산 불허)
 *
 * 실제 보유잔고, 결제 가능 액수, 부분환불, 적립/마이너스 내역까지 정확 추적
 *
 * GDPR/PCI/AML 등 컴플라이언스 요구 조건에 따라 소프트 삭제(삭제시 deleted_at!=null) 유지.
 *
 * 보고서/분석/내역 공개/운영관리 시 활용.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IUserBalance = {
  /**
   * 고유 식별자(잔고별 PK). Prisma user_balances.id.
   *
   * 연속 조작, 감사 보고서, 개별 증적 조회 및 연동에서 절대식별을 위해 필요.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 잔고 소유 사용자 ID(외부참조). Prisma user_balances.user_id.
   *
   * RBAC, 감사, 사용자별 분류, 적립/차감/환불/적응형 잔고 운영에서 필수.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * 잔고 유형(예: deposit, mileage, refund, promotion 등). Prisma
   * user_balances.balance_type.
   *
   * 통합/분리 운영, 적립금/캐시/포인트혼용/현금결제 분산을 지원하는 핵심 분류키.
   */
  balance_type: string;

  /**
   * 실제 금액의 통화 단위코드(KRW, USD 등). Prisma user_balances.currency.
   *
   * 다통화 시스템, 국가·지점별 운영, 환율변환 연산 등 다양한 결제환경 호환 위해 설계.
   */
  currency: string;

  /**
   * 현재 잔고 금액(실시간 누적 기준, 단위 currency). Prisma user_balances.amount.
   *
   * API에서 반환 시 소수점까지 포함된 정확한 수치를 제공합니다.
   */
  amount: number &
    tags.JsonSchemaPlugin<{
      format: "double";
    }>;

  /** 잔고 최초 생성일/시간. 감사/보고/분석/리텐션 정책 적용 시 기준이 되는 시각입니다. */
  created_at: string & tags.Format<"date-time">;

  /** 잔고 기준 최종 변경 일시. 동기화, 분석, 배치 처리 시에도 항상 최신화 기준 필드. */
  updated_at: string & tags.Format<"date-time">;

  /** 잔고가 논리 삭제/만료/블럭된 시간(soft delete, 감사용). Null이면 활성 상태임. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IUserBalance {
  /**
   * 유저별 잔고 정보 조회/검색 요청 DTO입니다.
   *
   * - 관리자 및 본인 조회시 사용(RBAC 필수 고려)
   * - 다통화, 잔액 종류, 기간, 금액, 페이지 등 모든 보고서/감사/마케팅/내역 공개 기능의 필터 조건을 세밀하게 지정할 수 있도록
   *   설계됨.
   */
  export type IRequest = {
    /**
     * 사용자별 잔고 조회용 ID. null로 전달시 RBAC 또는 관리자는 전체(롤링) 조회 가능.
     *
     * 잔액 내역 리스트(마이페이지), 어드민 감사, 결제 결함 이슈 처리, 데이터 이관/분할 시에도 필수 필터링으로 활용.
     */
    user_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 잔액 항목(예: deposit, mileage, refund, promotion 등). null이면 전체 조회, 지정시 특정
     * 잔고 유형만 필터링.
     *
     * 잔고 그룹별 한정 사용/회수/보고서 등에서 그룹핑 및 리스크관리 용도로 사용.
     */
    balance_type?: string | null;

    /**
     * 통화(예: KRW, USD 등)별 필터링. null일 경우 전체 통화 기준 조회.
     *
     * 다통화 환경 및 국가/법인별 감사/통합 보고서 등에서 핵심 필드.
     */
    currency?: string | null;

    /** 최소 잔액(내림필터). 특정 이상, 대량 보유 사용자/벤더/핵심 고객 예외 분석에 사용. */
    min_amount?:
      | (number &
          tags.JsonSchemaPlugin<{
            format: "double";
          }>)
      | null;

    /** 최대 잔액(상한필터). 과오납/결함/비정상 대량 적립/사기 침해 탐지에도 사용됨. */
    max_amount?:
      | (number &
          tags.JsonSchemaPlugin<{
            format: "double";
          }>)
      | null;

    /**
     * 조회 기간 시작 시각. ISO8601 (UTC) 시각 문자열.
     *
     * 운영감사, 특정 캠페인별 또는 규정 이슈 분석, 기간 이벤트별 리스트 추출에 활용.
     */
    created_from?: (string & tags.Format<"date-time">) | null;

    /**
     * 조회 기간 종료 시각. ISO8601 (UTC) 시각 문자열.
     *
     * 기간 필터링, 일별/월별 집계, 롱테일 분석 및 법인/감사 출력을 위한 시점 트리거.
     */
    created_to?: (string & tags.Format<"date-time">) | null;

    /** 페이지네이션 처리용 페이지 번호(1부터 시작). */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "int32";
          }>)
      | null;

    /** 페이지에 노출할 최대 목록 수(기본값 100, 최대값 1000 등). */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "int32";
          }>)
      | null;
  };

  /**
   * 유저 잔고 신규 생성 요청용 DTO
   *
   * - 어드민 또는 자동 배정 API에서 사용
   * - 초기 긍정(적립만), 음수 불가(관리자 예외) 적용.
   */
  export type ICreate = {
    /**
     * 잔고 주인(사용자)의 고유 ID. 필수.
     *
     * 잔고 신규 생성, 입금/적립/포인트 자동배정 모두에 절대값입니다.
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * 잔고 유형(적립금, 예치금, 환불, 프로모션 등). 필수.
     *
     * 단일 사용/충전/차감 흐름까지 일관관리 가능.
     */
    balance_type: string;

    /**
     * 통화 단위(코드: KRW/USD 등). 필수.
     *
     * 다통화 운영/외화 환산/법인/국가별 분리 집계 필수 필드.
     */
    currency: string;

    /**
     * 초기 잔액. 신규 발급/적립금/초기 지급 이벤트에서 필요.
     *
     * 음수 입력 불가/관리자만 예외사항 허용(마이너스 적립 등).
     */
    amount: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;
  };

  /** 유저 잔고의 금액(amount) 필드 업데이트용 DTO. */
  export type IUpdate = {
    /**
     * 변경할 잔고 액수(증감/수정).
     *
     * 잔고 재조정, 어드민/컴플라이언스 예외 조작, 실시간 오류 정정 시 사용. 단, 일반 사용자가 임의로 변경 불가. 반드시
     * 금액 수정 이력/감사 로그 기록 필수.
     */
    amount: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;
  };
}

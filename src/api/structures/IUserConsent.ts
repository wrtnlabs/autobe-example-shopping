import { tags } from "typia";

/**
 * Atomic, immutable record of a user privacy consent operation as per
 * GDPR/CCPA-compliance, with full auditability. Fulfills all audit, export, and
 * legal artifact requirements. Houses status (opt-in/out), scope, and
 * regulatory status (withdrawal).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IUserConsent = {
  /**
   * Primary key for consent row (user_consents.id).
   *
   * Each consent record is a unique, immutable audit trail reference and the
   * system of record for GDPR/CCPA handling.
   */
  id: string & tags.Format<"uuid">;

  /** ID of the user (users.id) referencing this consent. */
  user_id: string & tags.Format<"uuid">;

  /**
   * Description of the privacy scope to which user consented (marketing,
   * data_sharing, data_export, etc).
   *
   * Is fully auditable and presentable for regulation export.
   */
  scope: string;

  /**
   * True if user gave explicit consent (opted-in), false if withdrawn.
   * Complies with GDPR, per explicit opt-in/out audit strategies.
   */
  opt_in: boolean;

  /**
   * When this consent record was logged (immutable). Used for reporting,
   * legal timelines, and auditing.
   */
  recorded_at: string & tags.Format<"date-time">;

  /**
   * Null if still active; date/time if consent was withdrawn per GDPR/CCPA
   * Right to Erasure.
   *
   * Always set for audit when revoked, never removed.
   */
  revoked_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IUserConsent {
  /**
   * Consent search/page/filter DTO. Used for audit, export, or UI review.
   * Maps advanced search capabilities of GDPR/CCPA-compliant systems. Input
   * fields reflect intended audit use and legal reporting.
   */
  export type IRequest = {
    /**
     * Filter by user (users.id). Allows compliance/admin search for
     * consents by specific account.
     */
    user_id?: (string & tags.Format<"uuid">) | null;

    /**
     * Consent scope to filter (e.g., marketing, data_export). Matches
     * explicit GDPR/CCPA consent categories.
     */
    scope?: string | null;

    /**
     * True = list current opt-ins, false = list only opt-out/withdrawn.
     * Allows segmentation by status.
     */
    opt_in?: boolean | null;

    /** Start date for consent records (ISODate). For large system exports. */
    recorded_after?: (string & tags.Format<"date-time">) | null;

    /**
     * End date for consent records (ISODate). For auditing historical
     * scope.
     */
    recorded_before?: (string & tags.Format<"date-time">) | null;

    /**
     * True to only retrieve consent records that have been withdrawn
     * (revoked_at is not null); for GDPR/CCPA audit.
     */
    revoked?: boolean | null;

    /** Pagination: page number (for large recordsets). Default 1. */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;

    /** Pagination: number of records per page. Default 100 (see IPage). */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "uint32";
          }>)
      | null;
  };

  /**
   * DTO for creating a consent audit record. Receives explicit
   * GDPR/CCPA-style consent event from user or admin workflow.
   */
  export type ICreate = {
    /**
     * ID of the user (users.id), subject giving/withdrawing consent.
     * Required for linkage/audit.
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * Consent scope (marketing, data_export, data_sharing, etc). Must match
     * regulatory/UX scope for auditability.
     */
    scope: string;

    /**
     * True for explicit consent/opt-in, false for withdraw/opt-out.
     * Explicit flag allowing robust compliance.
     */
    opt_in: boolean;
  };

  /**
   * Payload to update existing consent: allows marking as withdrawn, changing
   * opt-in state, for GDPR/CCPA compliance.
   */
  export type IUpdate = {
    /** Update explicit consent status (true = opt-in, false = withdraw). */
    opt_in?: boolean;

    /**
     * If set, explicitly logs withdrawal of consent for audit/export.
     * Controls legal audit trail for GDPR/CCPA.
     */
    revoked_at?: (string & tags.Format<"date-time">) | null;
  };
}

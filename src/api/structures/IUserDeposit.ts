import { tags } from "typia";

/**
 * 유저별 적립/입금/정산 이벤트 이력(user_deposits)
 *
 * - 적립금, 환불, 입금, 정산, 차감 등 단일 이벤트별 발생 트랜잭션
 * - 완료, 실패, 진행중, 취소 등 상태별로 실시간 추적
 * - 모든 데이터는 PK, FK 기준 원자화되어 관리됨.
 *
 * GDPR/감사/공인 회계용 적합 규격(소프트 삭제/데이터 완전 보관 요구) 반영.
 *
 * - 사용처: 입금 내역, 정산 대장, 적립금 이벤트 분석, 금액 차감/복구/조정 등 모든 금전 변동 이벤트 통합 관리.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IUserDeposit = {
  /**
   * 고유 식별자(PK). Prisma user_deposits.id.
   *
   * 각 적립/입금/조정 이력을 유일하게 특정하기 위한 값.
   */
  id: string & tags.Format<"uuid">;

  /**
   * 입금(적립/정산) 소유 사용자 ID. Prisma user_deposits.user_id.
   *
   * RBAC, 감사, 적립금 항목별 분리에 필수.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * 입금(적립/환불/정산) 금액. Prisma user_deposits.amount.
   *
   * 실제 수치, 소수점 포함 정확한 실제 입금액 단위.
   */
  amount: number &
    tags.JsonSchemaPlugin<{
      format: "double";
    }>;

  /**
   * 이벤트 유형(예: load, reversal, adjustment 등). Prisma
   * user_deposits.deposit_type.
   *
   * 이벤트/입금 유형 구분 - 적립/취소/정산별 의사결정 지원.
   */
  deposit_type: string;

  /**
   * 입금 상태(pending/completed/failed 등). Prisma user_deposits.status.
   *
   * 실제 처리 완료 여부, 인출/차감/환불 등 상태별 프로세스 분기점 참조.
   */
  status: string;

  /**
   * 통화단위(코드: KRW, USD 등). Prisma user_deposits.currency.
   *
   * 통화별 통합 관리, 확장된 글로벌 환경 대응 위해 필수.
   */
  currency: string;

  /** 입금 이벤트 생성일시. 감사/분석/정산 Interval 키값. */
  created_at: string & tags.Format<"date-time">;

  /** 최종 상태 변경/정산 시각. 신규 적립/조정 및 롤백시 트리거. */
  updated_at: string & tags.Format<"date-time">;

  /** 소프트 삭제(정산 완료 혹은 차후 이력 적합성 제거 등). Null이면 활성 상태. */
  deleted_at?: (string & tags.Format<"date-time">) | null;
};
export namespace IUserDeposit {
  /**
   * 유저 입금(적립/정산/환불/조정) 이벤트 내역 조회/필터링 요청 DTO.
   *
   * 복합 보고서, 관리자 모니터링, 특이 거래 조회, 규정상 감사 모든용도
   *
   * - 필드별 지정으로 다각도 분석 필터링 지원
   */
  export type IRequest = {
    /**
     * 조회할 사용자 고유 ID.
     *
     * NULL인 경우 전체 관리/운영자 조회, 지정시 개별 사용자건 필터.
     *
     * 데이터 이관, 감사, 특정 사용자 특이 패턴 분석 등에 활용.
     */
    user_id?: (string & tags.Format<"uuid">) | null;

    /**
     * 입금 종류 필터 - load(적립/입금), reversal(예약취소/환불), adjustment(조정/정산) 등.
     *
     * Null시 전체조회. 지정시 특정 이벤트성 입금/취소만 추출 가능.
     */
    deposit_type?: string | null;

    /** 진행 상태(예: pending/failed/completed). null일 경우 전체 트랜잭션 상태 반환. */
    status?: string | null;

    /**
     * 통화 단위(KRW, USD 등).
     *
     * 다국적/글로벌 운영, 환불, 적립금 혼용 분석까지 지원.
     */
    currency?: string | null;

    /**
     * 조회 시작 구간(UTC ISO-8601), 예: 2025-01-01T00:00:00+09:00
     *
     * 이벤트/정산주기, 비정상 패턴 탐지 등에 시작~종료 기간 필터로 활용.
     */
    created_from?: (string & tags.Format<"date-time">) | null;

    /** 조회 종료 구간(UTC ISO-8601). 기간 마감 필터 혹은 특정 이벤트 청산/종료 타임라인 등 활용. */
    created_to?: (string & tags.Format<"date-time">) | null;

    /** 페이지네이션 기본값/최대값 지정(1~N). */
    page?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "int32";
          }>)
      | null;

    /** 페이지당 결과 건수(통상 기본값 100/최대값 1000 등 정함). */
    limit?:
      | (number &
          tags.Type<"int32"> &
          tags.JsonSchemaPlugin<{
            format: "int32";
          }>)
      | null;
  };

  /**
   * 유저 적립금/입금/정산 신규 이력 생성용 요청 DTO.
   *
   * 적립금, 환불, 입금, 정산 등 이벤트별 신규 발생시 쓰임. 필수필드 입력 및 생성 요청시 validation 필요.
   */
  export type ICreate = {
    /**
     * 입금/적립/정산 대상자(유저)의 고유 ID. 필수.
     *
     * 적립금/환불 모두 해당 유저별로 지정.
     */
    user_id: string & tags.Format<"uuid">;

    /** 입금(적립/환불/정산) 금액. 필수(음수 입력 불가, 예외 사항은 관리 어드민만 허용). */
    amount: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /**
     * 이벤트(트랜잭션) 유형(적립, 환불, 차감, 정산 등). 필수.
     *
     * 정해진 문자열, 프론트 또는 어드민 화면에서 선택식 제공 권장.
     */
    deposit_type: string;

    /**
     * 입금 상태(예: pending, completed, failed 등). 필수.
     *
     * 초기 적립, 수락/거부, 완료/실패 모두 명확히 구분 좋음.
     */
    status: string;

    /**
     * 통화 단위(코드: KRW 등). 필수.
     *
     * 다통화 운영, 글로벌/국내 결제 지원 모두 적용.
     */
    currency: string;
  };

  /**
   * Update request for a user_deposit entry (user_deposits Prisma table).
   *
   * Allows permitted modifications to deposit record metadata (status,
   * amount, currency, deposit_type). Used by admins during reconciliation or
   * by system for error correction. Sensitive—requires audit logging and
   * permission controls. See user_deposits schema comments for more on
   * business validation and auditability.
   */
  export type IUpdate = {
    /**
     * The amount for the deposit operation. Can be positive or negative
     * depending on the update type.
     *
     * Refer to the 'amount' column in user_deposits of Prisma schema. Used
     * for adjusting the value of deposit or correcting manual errors. The
     * updated value should comply with audit policies and business logic
     * set for deposits.
     */
    amount?: number &
      tags.JsonSchemaPlugin<{
        format: "double";
      }>;

    /**
     * Type of deposit event: 'load', 'reversal', or 'adjustment'.
     *
     * Linked to the 'deposit_type' column in user_deposits. Updates may
     * require business logic validation for transitions. Example values are
     * expected as per compliance/finance settings.
     */
    deposit_type?: string;

    /**
     * Status of the event, such as 'pending', 'completed', or 'failed'.
     *
     * Mapped from the 'status' column in user_deposits. Changing this may
     * close/reopen events depending on logic. Use with caution per
     * regulatory policy.
     */
    status: string;

    /**
     * The ISO 4217 currency code for the operation. Optional in update,
     * required for certain corrections or currency realignments.
     *
     * Corresponds to 'currency' in the user_deposits table. Should match
     * system/supported currencies.
     */
    currency?: string;

    /**
     * Timestamp when the deposit record is updated; used for audit trail.
     *
     * Reflects the 'updated_at' in user_deposits. Should be set to current
     * time on modification.
     */
    updated_at?: string & tags.Format<"date-time">;
  };
}

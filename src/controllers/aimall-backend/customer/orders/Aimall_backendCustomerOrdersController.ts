import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";

import { IAimallBackendOrder } from "../../../../api/structures/IAimallBackendOrder";

@Controller("/aimall-backend/customer/orders")
export class Aimall_backendCustomerOrdersController {
  /**
   * Create a new order (Orders table).
   *
   * Creates a new order in the database, initializing required business
   * attributes as specified in the 'aimall_backend_orders' Prisma schema.
   * Order creation involves providing customer, seller, address, order_number
   * (business ID), and the core order content (status, total_amount,
   * currency).
   *
   * Business logic may auto-generate order_number if not supplied. Security
   * checks are performed to ensure valid foreign keys (customer, seller,
   * address), and only allowed users (authenticated customers, sellers,
   * administrators) can submit new orders. Validation errors and role
   * violations are handled with appropriate responses. Related APIs allow
   * follow-up management of items, payments, and shipments.
   *
   * @param connection
   * @param body All business fields required to create a new order.
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Post()
  public async create(
    @TypedBody()
    body: IAimallBackendOrder.ICreate,
  ): Promise<IAimallBackendOrder> {
    body;
    return typia.random<IAimallBackendOrder>();
  }
}
